{
  "data": [
    {
      "_id": "60381162a1330e53f1972485",
      "alm_examples": [
        {
          "kind": "StarburstHive",
          "metadata": {
            "name": "starbursthive-sample"
          },
          "spec": {
            "additionalVolumes": [],
            "affinity": {},
            "database": {
              "external": {},
              "internal": {
                "databaseName": "hive",
                "databasePassword": "HivePass1234",
                "databaseUser": "hive",
                "driver": "org.postgresql.Driver",
                "env": [],
                "envFrom": [],
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "library/postgres",
                  "tag": "10.6"
                },
                "port": 5432,
                "resources": {
                  "limits": {
                    "cpu": 2,
                    "memory": "1Gi"
                  },
                  "requests": {
                    "cpu": 2,
                    "memory": "1Gi"
                  }
                },
                "volume": {
                  "emptyDir": {}
                }
              },
              "type": "internal"
            },
            "deploymentAnnotations": {},
            "env": [],
            "envFrom": [],
            "expose": {
              "clusterIp": {
                "name": "hive",
                "ports": {
                  "http": {
                    "port": 9083
                  }
                }
              },
              "ingress": {
                "annotations": {},
                "ingressName": "hive-ingress",
                "path": "/",
                "serviceName": "hive",
                "servicePort": 9083,
                "tls": {
                  "enabled": true
                }
              },
              "nodePort": {
                "name": "hive",
                "ports": {
                  "http": {
                    "nodePort": 30083,
                    "port": 9083
                  }
                }
              },
              "type": "clusterIp"
            },
            "extraArguments": [],
            "hdfs": {},
            "heapSizePercentage": 85,
            "image": {
              "pullPolicy": "IfNotPresent",
              "repository": "harbor.starburstdata.net/starburstdata/hive",
              "tag": "345.6.1-rc.1-SNAPSHOT"
            },
            "initFile": "",
            "nodeSelector": {},
            "objectStorage": {
              "adl": {
                "oauth2": {}
              },
              "awsS3": {
                "pathStyleAccess": false
              },
              "azure": {
                "abfs": {
                  "accessKey": {},
                  "authType": "accessKey",
                  "oauth": {}
                },
                "wasb": {}
              },
              "gs": {}
            },
            "podAnnotations": {},
            "registryCredentials": {
              "enabled": false
            },
            "resources": {
              "limits": {
                "cpu": 1,
                "memory": "1Gi"
              },
              "requests": {
                "cpu": 1,
                "memory": "1Gi"
              }
            },
            "starburst-charts-common": {
              "global": {}
            },
            "tolerations": []
          }
        },
        {
          "kind": "StarburstPresto",
          "metadata": {
            "name": "starburstpresto-sample"
          },
          "spec": {
            "additionalVolumes": [],
            "cache": {
              "diskUsagePercentage": 80,
              "enabled": false,
              "ttl": "7d",
              "volume": {
                "emptyDir": {}
              }
            },
            "catalogs": {
              "tpch": "connector.name=tpch\ntpch.splits-per-node=4"
            },
            "coordinator": {
              "additionalProperties": "",
              "affinity": {},
              "deploymentAnnotations": {},
              "envFrom": [],
              "etcFiles": {
                "jvm.config": "-server\n-XX:-UseBiasedLocking\n-XX:+UseG1GC\n-XX:G1HeapRegionSize=32M\n-XX:+ExplicitGCInvokesConcurrent\n-XX:+ExitOnOutOfMemoryError\n-XX:+UseGCOverheadLimit\n-XX:+HeapDumpOnOutOfMemoryError\n-XX:ReservedCodeCacheSize=512M\n-Djdk.nio.maxCachedBufferSize=2000000\n-Djdk.attach.allowAttachSelf=true\n",
                "other": {},
                "properties": {
                  "config.properties": "# When enabling TLS for internal communication don't set node.internal-address since\n# it'll be set automatically to coordinator.<namespace>.svc.\n# Add DNS:presto, DNS:coordinator.<namespace>.svc and DNS:*.worker.<namespace>.svc as SAN in your certs\ncoordinator=true\nnode-scheduler.include-coordinator=false\nhttp-server.http.port=8080\ndiscovery-server.enabled=true\ndiscovery.uri=http://localhost:8080\n",
                  "log.properties": "# Enable verbose logging from Presto\n#io.prestosql=DEBUG\n",
                  "node.properties": "node.environment={{ include \"presto.environment\" . }}\nnode.data-dir=/data/presto\nplugin.dir=/usr/lib/presto/plugin\nnode.server-log-file=/var/log/presto/server.log\nnode.launcher-log-file=/var/log/presto/launcher.log\n"
                }
              },
              "heapHeadroomPercentage": 30,
              "heapSizePercentage": 90,
              "nodeMemoryHeadroom": "2Gi",
              "nodeSelector": {},
              "podAnnotations": {},
              "resources": {
                "limits": {
                  "cpu": 16,
                  "memory": "60Gi"
                },
                "requests": {
                  "cpu": 16,
                  "memory": "60Gi"
                }
              },
              "tolerations": []
            },
            "expose": {
              "clusterIp": {
                "name": "presto",
                "ports": {
                  "http": {
                    "port": 8080
                  }
                }
              },
              "ingress": {
                "annotations": {},
                "ingressName": "coordinator-ingress",
                "path": "/",
                "serviceName": "presto",
                "servicePort": 8080,
                "tls": {
                  "enabled": true
                }
              },
              "loadBalancer": {
                "IP": "",
                "annotations": {},
                "name": "presto",
                "ports": {
                  "http": {
                    "port": 8080
                  }
                },
                "sourceRanges": []
              },
              "nodePort": {
                "name": "presto",
                "ports": {
                  "http": {
                    "nodePort": 30080,
                    "port": 8080
                  }
                }
              },
              "type": "clusterIp"
            },
            "externalSecrets": {
              "enabled": false,
              "goDaddy": {
                "backendType": "secretsManager"
              },
              "secretPrefix": "external0",
              "type": "goDaddy"
            },
            "extraArguments": [],
            "extraSecret": {},
            "image": {
              "pullPolicy": "IfNotPresent",
              "repository": "harbor.starburstdata.net/starburstdata/presto",
              "tag": "345-e.6"
            },
            "initFile": "",
            "initImage": {
              "pullPolicy": "IfNotPresent",
              "repository": "harbor.starburstdata.net/starburstdata/presto-init",
              "tag": "345.6.1-rc.1-SNAPSHOT"
            },
            "internal": {
              "ports": {
                "http": {
                  "port": 8080
                },
                "https": {
                  "port": 8443
                }
              }
            },
            "livenessProbe": {
              "exec": {
                "command": [
                  "/bin/sh",
                  "-c",
                  "curl --max-time 5 -s http://localhost:8080/v1/info | grep \\\"starting\\\":false"
                ]
              },
              "failureThreshold": 1,
              "initialDelaySeconds": 300,
              "periodSeconds": 300,
              "timeoutSeconds": 30
            },
            "prometheus": {
              "agent": {
                "config": "/usr/lib/presto/etc/telemetry/prometheus.yaml",
                "port": 8081,
                "version": "0.13.0"
              },
              "enabled": true,
              "rules": [
                {
                  "attrNameSnakeCase": true,
                  "name": "$1",
                  "pattern": "presto.execution<name=QueryManager><>(running_queries|queued_queries)",
                  "type": "GAUGE"
                },
                {
                  "name": "failed_queries",
                  "pattern": "presto.execution<name=QueryManager><>FailedQueries\\.TotalCount",
                  "type": "COUNTER"
                }
              ]
            },
            "query": {
              "maxConcurrentQueries": 3
            },
            "readinessProbe": {
              "exec": {
                "command": [
                  "/bin/sh",
                  "-c",
                  "curl --max-time 5 -s http://localhost:8080/v1/info | grep \\\"starting\\\":false"
                ]
              },
              "initialDelaySeconds": 10,
              "periodSeconds": 5,
              "timeoutSeconds": 30
            },
            "registryCredentials": {
              "enabled": false
            },
            "securityContext": {},
            "spilling": {
              "enabled": false,
              "volume": {
                "emptyDir": {}
              }
            },
            "starburst-charts-common": {
              "global": {}
            },
            "usageMetrics": {
              "enabled": true,
              "reporter": {
                "configFiles": {
                  "config.json": ""
                },
                "enabled": false,
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "harbor.starburstdata.net/testing/usage-metrics-reporter",
                  "tag": "0.1.3-alpha"
                }
              },
              "usageClient": {
                "initialDelay": "1m",
                "interval": "1m"
              }
            },
            "userDatabase": {
              "enabled": true,
              "users": [
                {
                  "password": "46991b33f7a75ff79213c0dc0e610610",
                  "username": "admin"
                }
              ]
            },
            "worker": {
              "additionalProperties": "",
              "affinity": {},
              "autoscaling": {
                "enabled": false,
                "maxReplicas": 100,
                "minReplicas": 1,
                "targetCPUUtilizationPercentage": 80
              },
              "deploymentAnnotations": {},
              "deploymentTerminationGracePeriodSeconds": 300,
              "envFrom": [],
              "etcFiles": {
                "jvm.config": "-server\n-XX:-UseBiasedLocking\n-XX:+UseG1GC\n-XX:G1HeapRegionSize=32M\n-XX:+ExplicitGCInvokesConcurrent\n-XX:+ExitOnOutOfMemoryError\n-XX:+UseGCOverheadLimit\n-XX:+HeapDumpOnOutOfMemoryError\n-XX:ReservedCodeCacheSize=512M\n-Djdk.nio.maxCachedBufferSize=2000000\n-Djdk.attach.allowAttachSelf=true\n",
                "other": {},
                "properties": {
                  "config.properties": "# When enabling TLS for internal communication don't set node.internal-address since\n# it'll be set automatically to <pod-ip>.worker.<namespace>.svc.\n# Add DNS:presto, DNS:coordinator.<namespace>.svc and DNS:*.worker.<namespace>.svc as SAN in your certs\ncoordinator=false\nhttp-server.http.port=8080\ndiscovery.uri=http://{{ include \"presto.service.name\" . }}:8080\n",
                  "log.properties": "# Enable verbose logging from Presto\n#io.prestosql=DEBUG\n",
                  "node.properties": "node.environment={{ include \"presto.environment\" . }}\nnode.data-dir=/data/presto\nplugin.dir=/usr/lib/presto/plugin\nnode.server-log-file=/var/log/presto/server.log\nnode.launcher-log-file=/var/log/presto/launcher.log\n"
                }
              },
              "heapHeadroomPercentage": 30,
              "heapSizePercentage": 90,
              "nodeMemoryHeadroom": "2Gi",
              "nodeSelector": {},
              "podAnnotations": {},
              "prestoWorkerShutdownGracePeriodSeconds": 120,
              "replicas": 2,
              "resources": {
                "limits": {
                  "cpu": 16,
                  "memory": "100Gi"
                },
                "requests": {
                  "cpu": 16,
                  "memory": "100Gi"
                }
              },
              "tolerations": []
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/starburst/presto-operator-bundle@sha256:75de295cfe227db51aa7a1b1880076175f3e8725682f845b47fa018e2e6791f5",
      "bundle_path_digest": "sha256:75de295cfe227db51aa7a1b1880076175f3e8725682f845b47fa018e2e6791f5",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-02-25T21:06:42.125000+00:00",
      "csv_description": "CR's for deploying presto and hive",
      "csv_display_name": "Presto Helm Operator",
      "csv_metadata_description": "Deploys Presto Helm Operator",
      "csv_name": "starburst-presto-helm-operator.v350.1.1-ubi",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:20:55.968000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "presto-operator",
      "provided_apis": [
        {
          "group": "charts.starburstdata.com",
          "kind": "StarburstHive",
          "version": "v1alpha1"
        },
        {
          "group": "charts.starburstdata.com",
          "kind": "StarburstPresto",
          "plural": "starburstprestoes",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:d2c31f4604fc9504f34b86c810b0acc1f3dbb244ea270c780e905d1094a8520c",
          "image": "registry.connect.redhat.com/starburst/presto-operator@sha256:d2c31f4604fc9504f34b86c810b0acc1f3dbb244ea270c780e905d1094a8520c",
          "name": "presto-operator-d2c31f4604fc9504f34b86c810b0acc1f3dbb244ea270c780e905d1094a8520c-annotation"
        },
        {
          "digest": "sha256:d2c31f4604fc9504f34b86c810b0acc1f3dbb244ea270c780e905d1094a8520c",
          "image": "registry.connect.redhat.com/starburst/presto-operator@sha256:d2c31f4604fc9504f34b86c810b0acc1f3dbb244ea270c780e905d1094a8520c",
          "name": "manager"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "350.1.1-ubi",
      "version_original": "350.1.1-ubi"
    },
    {
      "_id": "6038155406b9414753fa19b2",
      "alm_examples": [
        {
          "kind": "StarburstHive",
          "metadata": {
            "name": "starbursthive-sample"
          },
          "spec": {
            "additionalVolumes": [],
            "affinity": {},
            "database": {
              "external": {},
              "internal": {
                "databaseName": "hive",
                "databasePassword": "HivePass1234",
                "databaseUser": "hive",
                "driver": "org.postgresql.Driver",
                "env": [],
                "envFrom": [],
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "library/postgres",
                  "tag": "10.6"
                },
                "port": 5432,
                "resources": {
                  "limits": {
                    "cpu": 2,
                    "memory": "1Gi"
                  },
                  "requests": {
                    "cpu": 2,
                    "memory": "1Gi"
                  }
                },
                "volume": {
                  "emptyDir": {}
                }
              },
              "type": "internal"
            },
            "deploymentAnnotations": {},
            "env": [],
            "envFrom": [],
            "expose": {
              "clusterIp": {
                "name": "hive",
                "ports": {
                  "http": {
                    "port": 9083
                  }
                }
              },
              "ingress": {
                "annotations": {},
                "ingressName": "hive-ingress",
                "path": "/",
                "serviceName": "hive",
                "servicePort": 9083,
                "tls": {
                  "enabled": true
                }
              },
              "nodePort": {
                "name": "hive",
                "ports": {
                  "http": {
                    "nodePort": 30083,
                    "port": 9083
                  }
                }
              },
              "type": "clusterIp"
            },
            "extraArguments": [],
            "hdfs": {},
            "heapSizePercentage": 85,
            "image": {
              "pullPolicy": "IfNotPresent",
              "repository": "harbor.starburstdata.net/starburstdata/hive",
              "tag": "345.6.1-rc.1-SNAPSHOT"
            },
            "initFile": "",
            "nodeSelector": {},
            "objectStorage": {
              "adl": {
                "oauth2": {}
              },
              "awsS3": {
                "pathStyleAccess": false
              },
              "azure": {
                "abfs": {
                  "accessKey": {},
                  "authType": "accessKey",
                  "oauth": {}
                },
                "wasb": {}
              },
              "gs": {}
            },
            "podAnnotations": {},
            "registryCredentials": {
              "enabled": false
            },
            "resources": {
              "limits": {
                "cpu": 1,
                "memory": "1Gi"
              },
              "requests": {
                "cpu": 1,
                "memory": "1Gi"
              }
            },
            "starburst-charts-common": {
              "global": {}
            },
            "tolerations": []
          }
        },
        {
          "kind": "StarburstPresto",
          "metadata": {
            "name": "starburstpresto-sample"
          },
          "spec": {
            "additionalVolumes": [],
            "cache": {
              "diskUsagePercentage": 80,
              "enabled": false,
              "ttl": "7d",
              "volume": {
                "emptyDir": {}
              }
            },
            "catalogs": {
              "tpch": "connector.name=tpch\ntpch.splits-per-node=4"
            },
            "coordinator": {
              "additionalProperties": "",
              "affinity": {},
              "deploymentAnnotations": {},
              "envFrom": [],
              "etcFiles": {
                "jvm.config": "-server\n-XX:-UseBiasedLocking\n-XX:+UseG1GC\n-XX:G1HeapRegionSize=32M\n-XX:+ExplicitGCInvokesConcurrent\n-XX:+ExitOnOutOfMemoryError\n-XX:+UseGCOverheadLimit\n-XX:+HeapDumpOnOutOfMemoryError\n-XX:ReservedCodeCacheSize=512M\n-Djdk.nio.maxCachedBufferSize=2000000\n-Djdk.attach.allowAttachSelf=true\n",
                "other": {},
                "properties": {
                  "config.properties": "# When enabling TLS for internal communication don't set node.internal-address since\n# it'll be set automatically to coordinator.<namespace>.svc.\n# Add DNS:presto, DNS:coordinator.<namespace>.svc and DNS:*.worker.<namespace>.svc as SAN in your certs\ncoordinator=true\nnode-scheduler.include-coordinator=false\nhttp-server.http.port=8080\ndiscovery-server.enabled=true\ndiscovery.uri=http://localhost:8080\n",
                  "log.properties": "# Enable verbose logging from Presto\n#io.prestosql=DEBUG\n",
                  "node.properties": "node.environment={{ include \"presto.environment\" . }}\nnode.data-dir=/data/presto\nplugin.dir=/usr/lib/presto/plugin\nnode.server-log-file=/var/log/presto/server.log\nnode.launcher-log-file=/var/log/presto/launcher.log\n"
                }
              },
              "heapHeadroomPercentage": 30,
              "heapSizePercentage": 90,
              "nodeMemoryHeadroom": "2Gi",
              "nodeSelector": {},
              "podAnnotations": {},
              "resources": {
                "limits": {
                  "cpu": 16,
                  "memory": "60Gi"
                },
                "requests": {
                  "cpu": 16,
                  "memory": "60Gi"
                }
              },
              "tolerations": []
            },
            "expose": {
              "clusterIp": {
                "name": "presto",
                "ports": {
                  "http": {
                    "port": 8080
                  }
                }
              },
              "ingress": {
                "annotations": {},
                "ingressName": "coordinator-ingress",
                "path": "/",
                "serviceName": "presto",
                "servicePort": 8080,
                "tls": {
                  "enabled": true
                }
              },
              "loadBalancer": {
                "IP": "",
                "annotations": {},
                "name": "presto",
                "ports": {
                  "http": {
                    "port": 8080
                  }
                },
                "sourceRanges": []
              },
              "nodePort": {
                "name": "presto",
                "ports": {
                  "http": {
                    "nodePort": 30080,
                    "port": 8080
                  }
                }
              },
              "type": "clusterIp"
            },
            "externalSecrets": {
              "enabled": false,
              "goDaddy": {
                "backendType": "secretsManager"
              },
              "secretPrefix": "external0",
              "type": "goDaddy"
            },
            "extraArguments": [],
            "extraSecret": {},
            "image": {
              "pullPolicy": "IfNotPresent",
              "repository": "harbor.starburstdata.net/starburstdata/presto",
              "tag": "345-e.6"
            },
            "initFile": "",
            "initImage": {
              "pullPolicy": "IfNotPresent",
              "repository": "harbor.starburstdata.net/starburstdata/presto-init",
              "tag": "345.6.1-rc.1-SNAPSHOT"
            },
            "internal": {
              "ports": {
                "http": {
                  "port": 8080
                },
                "https": {
                  "port": 8443
                }
              }
            },
            "livenessProbe": {
              "exec": {
                "command": [
                  "/bin/sh",
                  "-c",
                  "curl --max-time 5 -s http://localhost:8080/v1/info | grep \\\"starting\\\":false"
                ]
              },
              "failureThreshold": 1,
              "initialDelaySeconds": 300,
              "periodSeconds": 300,
              "timeoutSeconds": 30
            },
            "prometheus": {
              "agent": {
                "config": "/usr/lib/presto/etc/telemetry/prometheus.yaml",
                "port": 8081,
                "version": "0.13.0"
              },
              "enabled": true,
              "rules": [
                {
                  "attrNameSnakeCase": true,
                  "name": "$1",
                  "pattern": "presto.execution<name=QueryManager><>(running_queries|queued_queries)",
                  "type": "GAUGE"
                },
                {
                  "name": "failed_queries",
                  "pattern": "presto.execution<name=QueryManager><>FailedQueries\\.TotalCount",
                  "type": "COUNTER"
                }
              ]
            },
            "query": {
              "maxConcurrentQueries": 3
            },
            "readinessProbe": {
              "exec": {
                "command": [
                  "/bin/sh",
                  "-c",
                  "curl --max-time 5 -s http://localhost:8080/v1/info | grep \\\"starting\\\":false"
                ]
              },
              "initialDelaySeconds": 10,
              "periodSeconds": 5,
              "timeoutSeconds": 30
            },
            "registryCredentials": {
              "enabled": false
            },
            "securityContext": {},
            "spilling": {
              "enabled": false,
              "volume": {
                "emptyDir": {}
              }
            },
            "starburst-charts-common": {
              "global": {}
            },
            "usageMetrics": {
              "enabled": true,
              "reporter": {
                "configFiles": {
                  "config.json": ""
                },
                "enabled": false,
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "harbor.starburstdata.net/testing/usage-metrics-reporter",
                  "tag": "0.1.3-alpha"
                }
              },
              "usageClient": {
                "initialDelay": "1m",
                "interval": "1m"
              }
            },
            "userDatabase": {
              "enabled": true,
              "users": [
                {
                  "password": "46991b33f7a75ff79213c0dc0e610610",
                  "username": "admin"
                }
              ]
            },
            "worker": {
              "additionalProperties": "",
              "affinity": {},
              "autoscaling": {
                "enabled": false,
                "maxReplicas": 100,
                "minReplicas": 1,
                "targetCPUUtilizationPercentage": 80
              },
              "deploymentAnnotations": {},
              "deploymentTerminationGracePeriodSeconds": 300,
              "envFrom": [],
              "etcFiles": {
                "jvm.config": "-server\n-XX:-UseBiasedLocking\n-XX:+UseG1GC\n-XX:G1HeapRegionSize=32M\n-XX:+ExplicitGCInvokesConcurrent\n-XX:+ExitOnOutOfMemoryError\n-XX:+UseGCOverheadLimit\n-XX:+HeapDumpOnOutOfMemoryError\n-XX:ReservedCodeCacheSize=512M\n-Djdk.nio.maxCachedBufferSize=2000000\n-Djdk.attach.allowAttachSelf=true\n",
                "other": {},
                "properties": {
                  "config.properties": "# When enabling TLS for internal communication don't set node.internal-address since\n# it'll be set automatically to <pod-ip>.worker.<namespace>.svc.\n# Add DNS:presto, DNS:coordinator.<namespace>.svc and DNS:*.worker.<namespace>.svc as SAN in your certs\ncoordinator=false\nhttp-server.http.port=8080\ndiscovery.uri=http://{{ include \"presto.service.name\" . }}:8080\n",
                  "log.properties": "# Enable verbose logging from Presto\n#io.prestosql=DEBUG\n",
                  "node.properties": "node.environment={{ include \"presto.environment\" . }}\nnode.data-dir=/data/presto\nplugin.dir=/usr/lib/presto/plugin\nnode.server-log-file=/var/log/presto/server.log\nnode.launcher-log-file=/var/log/presto/launcher.log\n"
                }
              },
              "heapHeadroomPercentage": 30,
              "heapSizePercentage": 90,
              "nodeMemoryHeadroom": "2Gi",
              "nodeSelector": {},
              "podAnnotations": {},
              "prestoWorkerShutdownGracePeriodSeconds": 120,
              "replicas": 2,
              "resources": {
                "limits": {
                  "cpu": 16,
                  "memory": "100Gi"
                },
                "requests": {
                  "cpu": 16,
                  "memory": "100Gi"
                }
              },
              "tolerations": []
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/starburst/presto-operator-bundle@sha256:75de295cfe227db51aa7a1b1880076175f3e8725682f845b47fa018e2e6791f5",
      "bundle_path_digest": "sha256:75de295cfe227db51aa7a1b1880076175f3e8725682f845b47fa018e2e6791f5",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-02-25T21:23:32.663000+00:00",
      "csv_description": "CR's for deploying presto and hive",
      "csv_display_name": "Presto Helm Operator",
      "csv_metadata_description": "Deploys Presto Helm Operator",
      "csv_name": "starburst-presto-helm-operator.v350.1.1-ubi",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:44:15.532000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "presto-operator",
      "provided_apis": [
        {
          "group": "charts.starburstdata.com",
          "kind": "StarburstPresto",
          "plural": "starburstprestoes",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:d2c31f4604fc9504f34b86c810b0acc1f3dbb244ea270c780e905d1094a8520c",
          "image": "registry.connect.redhat.com/starburst/presto-operator@sha256:d2c31f4604fc9504f34b86c810b0acc1f3dbb244ea270c780e905d1094a8520c",
          "name": "presto-operator-d2c31f4604fc9504f34b86c810b0acc1f3dbb244ea270c780e905d1094a8520c-annotation"
        },
        {
          "digest": "sha256:d2c31f4604fc9504f34b86c810b0acc1f3dbb244ea270c780e905d1094a8520c",
          "image": "registry.connect.redhat.com/starburst/presto-operator@sha256:d2c31f4604fc9504f34b86c810b0acc1f3dbb244ea270c780e905d1094a8520c",
          "name": "manager"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "350.1.1-ubi",
      "version_original": "350.1.1-ubi"
    },
    {
      "_id": "603d8ff3a1330e53f19725da",
      "alm_examples": [
        {
          "kind": "Grafana",
          "metadata": {
            "name": "grafana-sample"
          },
          "spec": {
            "AzureADOauth": {
              "enabled": false
            },
            "admin": {
              "existingSecretPasswordKey": "password",
              "password": "changeme",
              "user": "admin"
            },
            "affinity": {},
            "clusterDomain": "cluster.local",
            "config": {
              "grafanaIniConfigMap": "grafana-ini",
              "useGrafanaIniFile": true
            },
            "dashboardsConfigMaps": [],
            "dashboardsProvider": {
              "enabled": true
            },
            "datasources": {},
            "defaultDashboardsConfigMaps": [
              {
                "configMapName": "grafana-dashboard-cluster-total",
                "fileName": "cluster-total.json"
              },
              {
                "configMapName": "grafana-dashboard-etcd",
                "fileName": "etcd.json"
              },
              {
                "configMapName": "grafana-dashboard-k8s-resources-cluster",
                "fileName": "k8s-resources-cluster.json"
              },
              {
                "configMapName": "grafana-dashboard-k8s-resources-namespace",
                "fileName": "k8s-resources-namespace.json"
              },
              {
                "configMapName": "grafana-dashboard-k8s-resources-node",
                "fileName": "k8s-resources-node.json"
              },
              {
                "configMapName": "grafana-dashboard-k8s-resources-pod",
                "fileName": "k8s-resources-pod.json"
              },
              {
                "configMapName": "grafana-dashboard-k8s-resources-workload",
                "fileName": "k8s-resources-workload.json"
              },
              {
                "configMapName": "grafana-dashboard-k8s-resources-workloads-namespace",
                "fileName": "k8s-resources-workloads-namespace.json"
              },
              {
                "configMapName": "grafana-dashboard-node-cluster-rsrc-use",
                "fileName": "node-cluster-rsrc-use.json"
              },
              {
                "configMapName": "grafana-dashboard-node-rsrc-use",
                "fileName": "node-rsrc-use.json"
              },
              {
                "configMapName": "grafana-dashboard-prometheus",
                "fileName": "prometheus.json"
              }
            ],
            "extraConfigmaps": {},
            "extraEnvVars": {},
            "extraVolumeMounts": [],
            "extraVolumes": [],
            "ldap": {
              "allowSignUp": false,
              "enabled": false
            },
            "livenessProbe": {
              "enabled": true,
              "failureThreshold": 6,
              "initialDelaySeconds": 120,
              "periodSeconds": 10,
              "successThreshold": 1,
              "timeoutSeconds": 5
            },
            "metrics": {
              "enabled": false,
              "service": {
                "annotations": {
                  "prometheus.io/path": "/metrics",
                  "prometheus.io/port": "3000",
                  "prometheus.io/scrape": "true"
                }
              },
              "serviceMonitor": {
                "enabled": false
              }
            },
            "nodeSelector": {},
            "openshiftRoute": {
              "enabled": false
            },
            "persistence": {
              "accessMode": "ReadWriteOnce",
              "enabled": false,
              "size": "10Gi"
            },
            "podAnnotations": {},
            "readinessProbe": {
              "enabled": true,
              "failureThreshold": 6,
              "initialDelaySeconds": 30,
              "periodSeconds": 10,
              "successThreshold": 1,
              "timeoutSeconds": 5
            },
            "replicaCount": 1,
            "resources": {
              "limits": {
                "cpu": "500m",
                "memory": "512Mi"
              },
              "requests": {
                "cpu": "250m",
                "memory": "256Mi"
              }
            },
            "securityContext": {
              "enabled": false,
              "fsGroup": 1001,
              "runAsNonRoot": true,
              "runAsUser": 1001
            },
            "service": {
              "annotations": {},
              "port": 3000,
              "type": "ClusterIP"
            },
            "serviceAccount": {
              "annotations": {},
              "create": true
            },
            "sidecars": {},
            "smtp": {
              "enabled": false,
              "existingSecretPasswordKey": "password",
              "existingSecretUserKey": "user",
              "password": "password",
              "user": "user"
            },
            "tolerations": [],
            "updateStrategy": {
              "type": "RollingUpdate"
            }
          }
        },
        {
          "kind": "Pushgateway",
          "metadata": {
            "name": "pushgateway-sample"
          },
          "spec": {
            "affinity": {},
            "extraArgs": [],
            "extraVars": [],
            "ingress": {
              "enabled": false,
              "path": "/"
            },
            "networkPolicy": {},
            "nodeSelector": {},
            "openshiftRoute": {
              "enabled": false
            },
            "persistentVolume": {
              "accessModes": [
                "ReadWriteOnce"
              ],
              "annotations": {},
              "enabled": false,
              "existingClaim": "",
              "mountPath": "/data",
              "size": "2Gi",
              "subPath": ""
            },
            "persistentVolumeLabels": {},
            "podAnnotations": {},
            "podDisruptionBudget": {},
            "podLabels": {
              "app": "prometheus-pushgateway",
              "chart": "prometheus-pushgateway-1.4.1",
              "heritage": "Helm",
              "release": "RELEASE-NAME"
            },
            "replicaCount": 1,
            "resources": {},
            "securityContext": {
              "enabled": false,
              "fsGroup": 65534,
              "runAsNonRoot": true,
              "runAsUser": 65534
            },
            "service": {
              "port": 9091,
              "targetPort": 9091,
              "type": "ClusterIP"
            },
            "serviceAccount": {
              "create": true
            },
            "serviceAccountLabels": {
              "app": "prometheus-pushgateway",
              "chart": "prometheus-pushgateway-1.4.1",
              "heritage": "Helm",
              "release": "RELEASE-NAME"
            },
            "serviceAnnotations": {},
            "serviceLabels": {
              "app": "prometheus-pushgateway",
              "chart": "prometheus-pushgateway-1.4.1",
              "heritage": "Helm",
              "release": "RELEASE-NAME"
            },
            "serviceMonitor": {
              "additionalLabels": {},
              "enabled": false,
              "honorLabels": true,
              "namespace": "monitoring"
            },
            "strategy": {
              "type": "Recreate"
            },
            "tolerations": {}
          }
        },
        {
          "kind": "Thanos",
          "metadata": {
            "name": "thanos-sample"
          },
          "spec": {
            "bucketweb": {
              "affinity": {},
              "enabled": false,
              "extraFlags": [],
              "ingress": {
                "annotations": {},
                "certManager": false,
                "enabled": false,
                "hostname": "thanos-bucketweb.local",
                "secrets": []
              },
              "livenessProbe": {
                "httpGet": {
                  "path": "/",
                  "port": "http"
                },
                "initialDelaySeconds": 30,
                "timeoutSeconds": 30
              },
              "logLevel": "info",
              "nodeSelector": {},
              "openshiftRoute": {
                "enabled": false
              },
              "pdb": {
                "create": false,
                "minAvailable": 1
              },
              "podAnnotations": {},
              "readinessProbe": {
                "httpGet": {
                  "path": "/",
                  "port": "http"
                },
                "initialDelaySeconds": 30,
                "timeoutSeconds": 30
              },
              "refresh": "30m",
              "replicaCount": 1,
              "resources": {
                "limits": {},
                "requests": {}
              },
              "securityContext": {
                "enabled": false
              },
              "service": {
                "annotations": {},
                "http": {
                  "port": 8080
                },
                "type": "ClusterIP"
              },
              "serviceAccount": {
                "annotations": {}
              },
              "strategyType": "RollingUpdate",
              "timeout": "5m",
              "tolerations": []
            },
            "clusterDomain": "cluster.local",
            "compactor": {
              "affinity": {},
              "consistencyDelay": "30m",
              "enabled": false,
              "extraFlags": [],
              "livenessProbe": {
                "httpGet": {
                  "path": "/-/healthy",
                  "port": "http"
                },
                "initialDelaySeconds": 30,
                "timeoutSeconds": 30
              },
              "logLevel": "info",
              "nodeSelector": {},
              "persistence": {
                "accessModes": [
                  "ReadWriteOnce"
                ],
                "enabled": true,
                "size": "8Gi"
              },
              "podAnnotations": {},
              "readinessProbe": {
                "httpGet": {
                  "path": "/-/ready",
                  "port": "http"
                },
                "initialDelaySeconds": 30,
                "timeoutSeconds": 30
              },
              "resources": {
                "limits": {},
                "requests": {}
              },
              "retentionResolution1h": "10y",
              "retentionResolution5m": "30d",
              "retentionResolutionRaw": "30d",
              "securityContext": {
                "enabled": false,
                "fsGroup": 1001,
                "runAsUser": 1001
              },
              "service": {
                "annotations": {},
                "http": {
                  "port": 9090
                },
                "type": "ClusterIP"
              },
              "serviceAccount": {
                "annotations": {}
              },
              "strategyType": "RollingUpdate",
              "tolerations": []
            },
            "metrics": {
              "enabled": false,
              "serviceMonitor": {
                "enabled": false
              }
            }
          }
        },
        {
          "kind": "ThanosReceive",
          "metadata": {
            "name": "thanosreceive-sample"
          },
          "spec": {
            "affinity": {},
            "autoscaling": {
              "enabled": false,
              "maxReplicas": 100,
              "minReplicas": 1,
              "targetCPUUtilizationPercentage": 80
            },
            "fullnameOverride": "",
            "ingress": {
              "annotations": {},
              "enabled": false,
              "hosts": [
                {
                  "host": "chart-example.local",
                  "paths": []
                }
              ],
              "tls": []
            },
            "nameOverride": "",
            "objectStoreSecret": {
              "key": "objstore.yml"
            },
            "openshiftRoute": {
              "enabled": false
            },
            "persistence": {
              "accessMode": "ReadWriteOnce",
              "enabled": false,
              "size": "5Gi"
            },
            "podAnnotations": {},
            "podSecurityContext": {},
            "replicaCount": 1,
            "resources": {
              "limits": {
                "memory": "16Gi"
              },
              "requests": {
                "memory": "2Gi"
              }
            },
            "securityContext": {},
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": "thanos-receive"
            },
            "tsdb": {
              "retention": "5d"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/elos/erynis-bundle@sha256:b756bb50bf9fa3ffa47e9f684ef1e1963a32418821c4dcf76fd1d249b6213e8c",
      "bundle_path_digest": "sha256:b756bb50bf9fa3ffa47e9f684ef1e1963a32418821c4dcf76fd1d249b6213e8c",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-03-02T01:08:03.729000+00:00",
      "csv_description": "Erynis Monitoring Stack based on Thanos and Grafana",
      "csv_display_name": "Erynis Monitoring Stack",
      "csv_metadata_description": "Erynis Monitoring Stack based on Thanos and Grafana",
      "csv_name": "erynis-operator.v0.2.35",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:40:06.776000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "erynis-operator",
      "provided_apis": [
        {
          "group": "monitoring.elostech.cz",
          "kind": "Pushgateway",
          "plural": "pushgateways",
          "version": "v1alpha1"
        },
        {
          "group": "monitoring.elostech.cz",
          "kind": "Thanos",
          "plural": "thanos",
          "version": "v1alpha1"
        },
        {
          "group": "monitoring.elostech.cz",
          "kind": "ThanosReceive",
          "plural": "thanosreceives",
          "version": "v1alpha1"
        },
        {
          "group": "monitoring.elostech.cz",
          "kind": "Grafana",
          "plural": "grafanas",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:330e05580bc3a4eaf8392d54aeda588079603c086cd729ada598e60c956161c5",
          "image": "registry.connect.redhat.com/elos/erynis-operator@sha256:330e05580bc3a4eaf8392d54aeda588079603c086cd729ada598e60c956161c5",
          "name": "erynis-operator-330e05580bc3a4eaf8392d54aeda588079603c086cd729ada598e60c956161c5-annotation"
        },
        {
          "digest": "sha256:e1c4c942e8249683f9861d78a4e3f301bbf612b3d01b01371ac66decc3a8bc66",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:e1c4c942e8249683f9861d78a4e3f301bbf612b3d01b01371ac66decc3a8bc66",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:330e05580bc3a4eaf8392d54aeda588079603c086cd729ada598e60c956161c5",
          "image": "registry.connect.redhat.com/elos/erynis-operator@sha256:330e05580bc3a4eaf8392d54aeda588079603c086cd729ada598e60c956161c5",
          "name": "manager"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.2.35",
      "version_original": "0.2.35"
    },
    {
      "_id": "603d8ffd7110c374a3f2b0fe",
      "alm_examples": [
        {
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "dcgmExporter": {
              "affinity": {},
              "image": "dcgm-exporter",
              "imagePullSecrets": [],
              "nodeSelector": {},
              "podSecurityContext": {},
              "repository": "nvcr.io/nvidia/k8s",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:ced606933cd2210768ee8488b624c64ac0bdce6f05d9c4b4210e251370a14ff8"
            },
            "devicePlugin": {
              "affinity": {},
              "args": [
                "--mig-strategy=single",
                "--pass-device-specs=true",
                "--fail-on-init-error=true",
                "--device-list-strategy=envvar",
                "--nvidia-driver-root=/run/nvidia/driver"
              ],
              "image": "k8s-device-plugin",
              "imagePullSecrets": [],
              "nodeSelector": {},
              "podSecurityContext": {},
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:ea353fe57628f4d3c3e1cda126455d02f2277e3ee92fa9da441d409d76b2ac92"
            },
            "driver": {
              "affinity": {},
              "image": "driver",
              "imagePullSecrets": [],
              "licensingConfig": {
                "configMapName": ""
              },
              "nodeSelector": {},
              "podSecurityContext": {},
              "repoConfig": {
                "configMapName": "",
                "destinationDir": ""
              },
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:017d2e2a1bc410e9d2ac116683fc49a6f28e935cadee86e712cc147ea0239469"
            },
            "gfd": {
              "affinity": {},
              "image": "gpu-feature-discovery",
              "imagePullSecrets": [],
              "migStrategy": "single",
              "nodeSelector": {},
              "podSecurityContext": {},
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "sleepInterval": "60s",
              "tolerations": [],
              "version": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f"
            },
            "operator": {
              "defaultRuntime": "crio",
              "deployGFD": true,
              "validator": {
                "image": "cuda-sample",
                "imagePullSecrets": [],
                "repository": "nvcr.io/nvidia/k8s",
                "version": "sha256:2a30fe7e23067bc2c3f8f62a6867702a016af2b80b9f6ce861f3fea4dfd85bc2"
              }
            },
            "toolkit": {
              "affinity": {},
              "image": "container-toolkit",
              "imagePullSecrets": [],
              "nodeSelector": {},
              "podSecurityContext": {},
              "repository": "nvcr.io/nvidia/k8s",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:1cba398a04ec14a5dc3c6229e3674436fdcb574c329cff9ce5048099c8ff2fad"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:cf1309c3d0946969f54fa64eeb1ac666b11918d22210f80554c861267511f2a8",
      "bundle_path_digest": "sha256:cf1309c3d0946969f54fa64eeb1ac666b11918d22210f80554c861267511f2a8",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-03-02T01:08:13.616000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://coreos.com/blog/introducing-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/kubernetes/openshift-on-gpu-install-guide/index.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.6.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:43:47.690000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:cde4d202a0773a9cd6d4e8266982eae0bfc358a49862fcfcfe8609e344acafa1",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:cde4d202a0773a9cd6d4e8266982eae0bfc358a49862fcfcfe8609e344acafa1",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:ced606933cd2210768ee8488b624c64ac0bdce6f05d9c4b4210e251370a14ff8",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:ced606933cd2210768ee8488b624c64ac0bdce6f05d9c4b4210e251370a14ff8",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:1cba398a04ec14a5dc3c6229e3674436fdcb574c329cff9ce5048099c8ff2fad",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:1cba398a04ec14a5dc3c6229e3674436fdcb574c329cff9ce5048099c8ff2fad",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:017d2e2a1bc410e9d2ac116683fc49a6f28e935cadee86e712cc147ea0239469",
          "image": "nvcr.io/nvidia/driver@sha256:017d2e2a1bc410e9d2ac116683fc49a6f28e935cadee86e712cc147ea0239469",
          "name": "driver-image"
        },
        {
          "digest": "sha256:ea353fe57628f4d3c3e1cda126455d02f2277e3ee92fa9da441d409d76b2ac92",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:ea353fe57628f4d3c3e1cda126455d02f2277e3ee92fa9da441d409d76b2ac92",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:2a30fe7e23067bc2c3f8f62a6867702a016af2b80b9f6ce861f3fea4dfd85bc2",
          "image": "nvcr.io/nvidia/k8s/cuda-sample@sha256:2a30fe7e23067bc2c3f8f62a6867702a016af2b80b9f6ce861f3fea4dfd85bc2",
          "name": "cuda-sample-image"
        },
        {
          "digest": "sha256:ed723a1339cddd75eb9f2be2f3476edf497a1b189c10c9bf9eb8da4a16a51a59",
          "image": "nvcr.io/nvidia/cuda@sha256:ed723a1339cddd75eb9f2be2f3476edf497a1b189c10c9bf9eb8da4a16a51a59",
          "name": "dcgm-init-container-image"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.6.0",
      "version_original": "1.6.0"
    },
    {
      "_id": "603d913fa1330e53f19725db",
      "alm_examples": [
        {
          "kind": "Grafana",
          "metadata": {
            "name": "grafana-sample"
          },
          "spec": {
            "AzureADOauth": {
              "enabled": false
            },
            "admin": {
              "existingSecretPasswordKey": "password",
              "password": "changeme",
              "user": "admin"
            },
            "affinity": {},
            "clusterDomain": "cluster.local",
            "config": {
              "grafanaIniConfigMap": "grafana-ini",
              "useGrafanaIniFile": true
            },
            "dashboardsConfigMaps": [],
            "dashboardsProvider": {
              "enabled": true
            },
            "datasources": {},
            "defaultDashboardsConfigMaps": [
              {
                "configMapName": "grafana-dashboard-cluster-total",
                "fileName": "cluster-total.json"
              },
              {
                "configMapName": "grafana-dashboard-etcd",
                "fileName": "etcd.json"
              },
              {
                "configMapName": "grafana-dashboard-k8s-resources-cluster",
                "fileName": "k8s-resources-cluster.json"
              },
              {
                "configMapName": "grafana-dashboard-k8s-resources-namespace",
                "fileName": "k8s-resources-namespace.json"
              },
              {
                "configMapName": "grafana-dashboard-k8s-resources-node",
                "fileName": "k8s-resources-node.json"
              },
              {
                "configMapName": "grafana-dashboard-k8s-resources-pod",
                "fileName": "k8s-resources-pod.json"
              },
              {
                "configMapName": "grafana-dashboard-k8s-resources-workload",
                "fileName": "k8s-resources-workload.json"
              },
              {
                "configMapName": "grafana-dashboard-k8s-resources-workloads-namespace",
                "fileName": "k8s-resources-workloads-namespace.json"
              },
              {
                "configMapName": "grafana-dashboard-node-cluster-rsrc-use",
                "fileName": "node-cluster-rsrc-use.json"
              },
              {
                "configMapName": "grafana-dashboard-node-rsrc-use",
                "fileName": "node-rsrc-use.json"
              },
              {
                "configMapName": "grafana-dashboard-prometheus",
                "fileName": "prometheus.json"
              }
            ],
            "extraConfigmaps": {},
            "extraEnvVars": {},
            "extraVolumeMounts": [],
            "extraVolumes": [],
            "ldap": {
              "allowSignUp": false,
              "enabled": false
            },
            "livenessProbe": {
              "enabled": true,
              "failureThreshold": 6,
              "initialDelaySeconds": 120,
              "periodSeconds": 10,
              "successThreshold": 1,
              "timeoutSeconds": 5
            },
            "metrics": {
              "enabled": false,
              "service": {
                "annotations": {
                  "prometheus.io/path": "/metrics",
                  "prometheus.io/port": "3000",
                  "prometheus.io/scrape": "true"
                }
              },
              "serviceMonitor": {
                "enabled": false
              }
            },
            "nodeSelector": {},
            "openshiftRoute": {
              "enabled": false
            },
            "persistence": {
              "accessMode": "ReadWriteOnce",
              "enabled": false,
              "size": "10Gi"
            },
            "podAnnotations": {},
            "readinessProbe": {
              "enabled": true,
              "failureThreshold": 6,
              "initialDelaySeconds": 30,
              "periodSeconds": 10,
              "successThreshold": 1,
              "timeoutSeconds": 5
            },
            "replicaCount": 1,
            "resources": {
              "limits": {
                "cpu": "500m",
                "memory": "512Mi"
              },
              "requests": {
                "cpu": "250m",
                "memory": "256Mi"
              }
            },
            "securityContext": {
              "enabled": false,
              "fsGroup": 1001,
              "runAsNonRoot": true,
              "runAsUser": 1001
            },
            "service": {
              "annotations": {},
              "port": 3000,
              "type": "ClusterIP"
            },
            "serviceAccount": {
              "annotations": {},
              "create": true
            },
            "sidecars": {},
            "smtp": {
              "enabled": false,
              "existingSecretPasswordKey": "password",
              "existingSecretUserKey": "user",
              "password": "password",
              "user": "user"
            },
            "tolerations": [],
            "updateStrategy": {
              "type": "RollingUpdate"
            }
          }
        },
        {
          "kind": "Pushgateway",
          "metadata": {
            "name": "pushgateway-sample"
          },
          "spec": {
            "affinity": {},
            "extraArgs": [],
            "extraVars": [],
            "ingress": {
              "enabled": false,
              "path": "/"
            },
            "networkPolicy": {},
            "nodeSelector": {},
            "openshiftRoute": {
              "enabled": false
            },
            "persistentVolume": {
              "accessModes": [
                "ReadWriteOnce"
              ],
              "annotations": {},
              "enabled": false,
              "existingClaim": "",
              "mountPath": "/data",
              "size": "2Gi",
              "subPath": ""
            },
            "persistentVolumeLabels": {},
            "podAnnotations": {},
            "podDisruptionBudget": {},
            "podLabels": {
              "app": "prometheus-pushgateway",
              "chart": "prometheus-pushgateway-1.4.1",
              "heritage": "Helm",
              "release": "RELEASE-NAME"
            },
            "replicaCount": 1,
            "resources": {},
            "securityContext": {
              "enabled": false,
              "fsGroup": 65534,
              "runAsNonRoot": true,
              "runAsUser": 65534
            },
            "service": {
              "port": 9091,
              "targetPort": 9091,
              "type": "ClusterIP"
            },
            "serviceAccount": {
              "create": true
            },
            "serviceAccountLabels": {
              "app": "prometheus-pushgateway",
              "chart": "prometheus-pushgateway-1.4.1",
              "heritage": "Helm",
              "release": "RELEASE-NAME"
            },
            "serviceAnnotations": {},
            "serviceLabels": {
              "app": "prometheus-pushgateway",
              "chart": "prometheus-pushgateway-1.4.1",
              "heritage": "Helm",
              "release": "RELEASE-NAME"
            },
            "serviceMonitor": {
              "additionalLabels": {},
              "enabled": false,
              "honorLabels": true,
              "namespace": "monitoring"
            },
            "strategy": {
              "type": "Recreate"
            },
            "tolerations": {}
          }
        },
        {
          "kind": "Thanos",
          "metadata": {
            "name": "thanos-sample"
          },
          "spec": {
            "bucketweb": {
              "affinity": {},
              "enabled": false,
              "extraFlags": [],
              "ingress": {
                "annotations": {},
                "certManager": false,
                "enabled": false,
                "hostname": "thanos-bucketweb.local",
                "secrets": []
              },
              "livenessProbe": {
                "httpGet": {
                  "path": "/",
                  "port": "http"
                },
                "initialDelaySeconds": 30,
                "timeoutSeconds": 30
              },
              "logLevel": "info",
              "nodeSelector": {},
              "openshiftRoute": {
                "enabled": false
              },
              "pdb": {
                "create": false,
                "minAvailable": 1
              },
              "podAnnotations": {},
              "readinessProbe": {
                "httpGet": {
                  "path": "/",
                  "port": "http"
                },
                "initialDelaySeconds": 30,
                "timeoutSeconds": 30
              },
              "refresh": "30m",
              "replicaCount": 1,
              "resources": {
                "limits": {},
                "requests": {}
              },
              "securityContext": {
                "enabled": false
              },
              "service": {
                "annotations": {},
                "http": {
                  "port": 8080
                },
                "type": "ClusterIP"
              },
              "serviceAccount": {
                "annotations": {}
              },
              "strategyType": "RollingUpdate",
              "timeout": "5m",
              "tolerations": []
            },
            "clusterDomain": "cluster.local",
            "compactor": {
              "affinity": {},
              "consistencyDelay": "30m",
              "enabled": false,
              "extraFlags": [],
              "livenessProbe": {
                "httpGet": {
                  "path": "/-/healthy",
                  "port": "http"
                },
                "initialDelaySeconds": 30,
                "timeoutSeconds": 30
              },
              "logLevel": "info",
              "nodeSelector": {},
              "persistence": {
                "accessModes": [
                  "ReadWriteOnce"
                ],
                "enabled": true,
                "size": "8Gi"
              },
              "podAnnotations": {},
              "readinessProbe": {
                "httpGet": {
                  "path": "/-/ready",
                  "port": "http"
                },
                "initialDelaySeconds": 30,
                "timeoutSeconds": 30
              },
              "resources": {
                "limits": {},
                "requests": {}
              },
              "retentionResolution1h": "10y",
              "retentionResolution5m": "30d",
              "retentionResolutionRaw": "30d",
              "securityContext": {
                "enabled": false,
                "fsGroup": 1001,
                "runAsUser": 1001
              },
              "service": {
                "annotations": {},
                "http": {
                  "port": 9090
                },
                "type": "ClusterIP"
              },
              "serviceAccount": {
                "annotations": {}
              },
              "strategyType": "RollingUpdate",
              "tolerations": []
            },
            "metrics": {
              "enabled": false,
              "serviceMonitor": {
                "enabled": false
              }
            }
          }
        },
        {
          "kind": "ThanosReceive",
          "metadata": {
            "name": "thanosreceive-sample"
          },
          "spec": {
            "affinity": {},
            "autoscaling": {
              "enabled": false,
              "maxReplicas": 100,
              "minReplicas": 1,
              "targetCPUUtilizationPercentage": 80
            },
            "fullnameOverride": "",
            "ingress": {
              "annotations": {},
              "enabled": false,
              "hosts": [
                {
                  "host": "chart-example.local",
                  "paths": []
                }
              ],
              "tls": []
            },
            "nameOverride": "",
            "objectStoreSecret": {
              "key": "objstore.yml"
            },
            "openshiftRoute": {
              "enabled": false
            },
            "persistence": {
              "accessMode": "ReadWriteOnce",
              "enabled": false,
              "size": "5Gi"
            },
            "podAnnotations": {},
            "podSecurityContext": {},
            "replicaCount": 1,
            "resources": {
              "limits": {
                "memory": "16Gi"
              },
              "requests": {
                "memory": "2Gi"
              }
            },
            "securityContext": {},
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": "thanos-receive"
            },
            "tsdb": {
              "retention": "5d"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/elos/erynis-bundle@sha256:b756bb50bf9fa3ffa47e9f684ef1e1963a32418821c4dcf76fd1d249b6213e8c",
      "bundle_path_digest": "sha256:b756bb50bf9fa3ffa47e9f684ef1e1963a32418821c4dcf76fd1d249b6213e8c",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-03-02T01:13:35.385000+00:00",
      "csv_description": "Erynis Monitoring Stack based on Thanos and Grafana",
      "csv_display_name": "Erynis Monitoring Stack",
      "csv_metadata_description": "Erynis Monitoring Stack based on Thanos and Grafana",
      "csv_name": "erynis-operator.v0.2.35",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:13:36.170000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "erynis-operator",
      "provided_apis": [
        {
          "group": "monitoring.elostech.cz",
          "kind": "Grafana",
          "plural": "grafanas",
          "version": "v1alpha1"
        },
        {
          "group": "monitoring.elostech.cz",
          "kind": "Pushgateway",
          "plural": "pushgateways",
          "version": "v1alpha1"
        },
        {
          "group": "monitoring.elostech.cz",
          "kind": "Thanos",
          "plural": "thanos",
          "version": "v1alpha1"
        },
        {
          "group": "monitoring.elostech.cz",
          "kind": "ThanosReceive",
          "plural": "thanosreceives",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:330e05580bc3a4eaf8392d54aeda588079603c086cd729ada598e60c956161c5",
          "image": "registry.connect.redhat.com/elos/erynis-operator@sha256:330e05580bc3a4eaf8392d54aeda588079603c086cd729ada598e60c956161c5",
          "name": "erynis-operator-330e05580bc3a4eaf8392d54aeda588079603c086cd729ada598e60c956161c5-annotation"
        },
        {
          "digest": "sha256:e1c4c942e8249683f9861d78a4e3f301bbf612b3d01b01371ac66decc3a8bc66",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:e1c4c942e8249683f9861d78a4e3f301bbf612b3d01b01371ac66decc3a8bc66",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:330e05580bc3a4eaf8392d54aeda588079603c086cd729ada598e60c956161c5",
          "image": "registry.connect.redhat.com/elos/erynis-operator@sha256:330e05580bc3a4eaf8392d54aeda588079603c086cd729ada598e60c956161c5",
          "name": "manager"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.2.35",
      "version_original": "0.2.35"
    },
    {
      "_id": "603d9149f6eacfd45bdb1361",
      "alm_examples": [
        {
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "dcgmExporter": {
              "affinity": {},
              "image": "dcgm-exporter",
              "imagePullSecrets": [],
              "nodeSelector": {},
              "podSecurityContext": {},
              "repository": "nvcr.io/nvidia/k8s",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:ced606933cd2210768ee8488b624c64ac0bdce6f05d9c4b4210e251370a14ff8"
            },
            "devicePlugin": {
              "affinity": {},
              "args": [
                "--mig-strategy=single",
                "--pass-device-specs=true",
                "--fail-on-init-error=true",
                "--device-list-strategy=envvar",
                "--nvidia-driver-root=/run/nvidia/driver"
              ],
              "image": "k8s-device-plugin",
              "imagePullSecrets": [],
              "nodeSelector": {},
              "podSecurityContext": {},
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:ea353fe57628f4d3c3e1cda126455d02f2277e3ee92fa9da441d409d76b2ac92"
            },
            "driver": {
              "affinity": {},
              "image": "driver",
              "imagePullSecrets": [],
              "licensingConfig": {
                "configMapName": ""
              },
              "nodeSelector": {},
              "podSecurityContext": {},
              "repoConfig": {
                "configMapName": "",
                "destinationDir": ""
              },
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:017d2e2a1bc410e9d2ac116683fc49a6f28e935cadee86e712cc147ea0239469"
            },
            "gfd": {
              "affinity": {},
              "image": "gpu-feature-discovery",
              "imagePullSecrets": [],
              "migStrategy": "single",
              "nodeSelector": {},
              "podSecurityContext": {},
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "sleepInterval": "60s",
              "tolerations": [],
              "version": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f"
            },
            "operator": {
              "defaultRuntime": "crio",
              "deployGFD": true,
              "validator": {
                "image": "cuda-sample",
                "imagePullSecrets": [],
                "repository": "nvcr.io/nvidia/k8s",
                "version": "sha256:2a30fe7e23067bc2c3f8f62a6867702a016af2b80b9f6ce861f3fea4dfd85bc2"
              }
            },
            "toolkit": {
              "affinity": {},
              "image": "container-toolkit",
              "imagePullSecrets": [],
              "nodeSelector": {},
              "podSecurityContext": {},
              "repository": "nvcr.io/nvidia/k8s",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:1cba398a04ec14a5dc3c6229e3674436fdcb574c329cff9ce5048099c8ff2fad"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:85938bd7029d5816889869378c47e9843f12431ba93e27f19c6e777f9ee5a11d",
      "bundle_path_digest": "sha256:85938bd7029d5816889869378c47e9843f12431ba93e27f19c6e777f9ee5a11d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-03-02T01:13:45.521000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://coreos.com/blog/introducing-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/kubernetes/openshift-on-gpu-install-guide/index.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.6.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:16:10.585000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:cde4d202a0773a9cd6d4e8266982eae0bfc358a49862fcfcfe8609e344acafa1",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:cde4d202a0773a9cd6d4e8266982eae0bfc358a49862fcfcfe8609e344acafa1",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:ced606933cd2210768ee8488b624c64ac0bdce6f05d9c4b4210e251370a14ff8",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:ced606933cd2210768ee8488b624c64ac0bdce6f05d9c4b4210e251370a14ff8",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:1cba398a04ec14a5dc3c6229e3674436fdcb574c329cff9ce5048099c8ff2fad",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:1cba398a04ec14a5dc3c6229e3674436fdcb574c329cff9ce5048099c8ff2fad",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:017d2e2a1bc410e9d2ac116683fc49a6f28e935cadee86e712cc147ea0239469",
          "image": "nvcr.io/nvidia/driver@sha256:017d2e2a1bc410e9d2ac116683fc49a6f28e935cadee86e712cc147ea0239469",
          "name": "driver-image"
        },
        {
          "digest": "sha256:ea353fe57628f4d3c3e1cda126455d02f2277e3ee92fa9da441d409d76b2ac92",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:ea353fe57628f4d3c3e1cda126455d02f2277e3ee92fa9da441d409d76b2ac92",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:2a30fe7e23067bc2c3f8f62a6867702a016af2b80b9f6ce861f3fea4dfd85bc2",
          "image": "nvcr.io/nvidia/k8s/cuda-sample@sha256:2a30fe7e23067bc2c3f8f62a6867702a016af2b80b9f6ce861f3fea4dfd85bc2",
          "name": "cuda-sample-image"
        },
        {
          "digest": "sha256:ed723a1339cddd75eb9f2be2f3476edf497a1b189c10c9bf9eb8da4a16a51a59",
          "image": "nvcr.io/nvidia/cuda@sha256:ed723a1339cddd75eb9f2be2f3476edf497a1b189c10c9bf9eb8da4a16a51a59",
          "name": "dcgm-init-container-image"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.6.0",
      "version_original": "1.6.0"
    },
    {
      "_id": "603d9192a1330e53f19725dc",
      "alm_examples": [
        {
          "kind": "SeldonDeployment",
          "metadata": {
            "labels": {
              "app": "seldon",
              "app.kubernetes.io/instance": "seldon1",
              "app.kubernetes.io/name": "seldon",
              "app.kubernetes.io/version": "v0.5"
            },
            "name": "seldon-model"
          },
          "spec": {
            "name": "test-deployment",
            "predictors": [
              {
                "componentSpecs": [
                  {
                    "spec": {
                      "containers": [
                        {
                          "image": "seldonio/mock_classifier:1.6.0",
                          "name": "classifier"
                        }
                      ]
                    }
                  }
                ],
                "graph": {
                  "children": [],
                  "name": "classifier",
                  "type": "MODEL"
                },
                "name": "example",
                "replicas": 1
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/seldonio/seldon-core-operator-bundle@sha256:01aed6c653b9cd10b942981218ae777c9326a7f18011e52e2fa125beafaa1268",
      "bundle_path_digest": "sha256:01aed6c653b9cd10b942981218ae777c9326a7f18011e52e2fa125beafaa1268",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-03-02T01:14:58.124000+00:00",
      "csv_description": "The Seldon operator enables for native operation of production machine learning workloads, including monitoring and operations of language-agnostic models with the benefits of real-time metrics and log analysis.\n   \n## Overview\nSeldon Core is an open source platform for deploying machine learning models on a Kubernetes cluster.\n\n* Deploy machine learning models in the cloud or on-premise.\n* Get metrics and ensure proper governance and compliance for your running machine learning models.\n* Create powerful inference graphs made up of multiple components.\n* Provide a consistent serving layer for models built using heterogeneous ML toolkits.\n\nYou can get started by following the guides in our documentation at https://docs.seldon.io/projects/seldon-core/en/latest/workflow/README.html\n",
      "csv_display_name": "Seldon Operator",
      "csv_metadata_description": "The Seldon operator for management, monitoring and operations of machine learning systems through the Seldon Engine. Once installed, the Seldon Operator provides multiple functions which facilitate the productisation, monitoring and maintenance of machine learning systems at scale.",
      "csv_name": "seldon-operator.v1.6.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:15:22.568000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "seldon-operator-certified",
      "provided_apis": [
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1"
        },
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1alpha2"
        },
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1alpha3"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:4b3554037789b7e833322ae267eafdbc7cc8639dbac414f05f3397006f1660c4",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-operator@sha256:4b3554037789b7e833322ae267eafdbc7cc8639dbac414f05f3397006f1660c4",
          "name": "seldon-core-operator-4b3554037789b7e833322ae267eafdbc7cc8639dbac414f05f3397006f1660c4-annotation"
        },
        {
          "digest": "sha256:4b3554037789b7e833322ae267eafdbc7cc8639dbac414f05f3397006f1660c4",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-operator@sha256:4b3554037789b7e833322ae267eafdbc7cc8639dbac414f05f3397006f1660c4",
          "name": "manager"
        },
        {
          "digest": "sha256:eae693e38a86b428682867b3b54cc3c02ee91c4c2c777e3cb1469e8ebb044ffb",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-executor@sha256:eae693e38a86b428682867b3b54cc3c02ee91c4c2c777e3cb1469e8ebb044ffb",
          "name": "executor"
        },
        {
          "digest": "sha256:d37dad7c0e66ae8d8a9bd31998d5f6320ca66720cb83ee22970fb721a6ab3238",
          "image": "registry.connect.redhat.com/seldonio/seldon-engine@sha256:d37dad7c0e66ae8d8a9bd31998d5f6320ca66720cb83ee22970fb721a6ab3238",
          "name": "engine"
        },
        {
          "digest": "sha256:2ab2776b3b54c09c558cc962659b5f4927c06a5d02fd169abf58ac6ddc8a8479",
          "image": "registry.connect.redhat.com/seldonio/storage-initializer@sha256:2ab2776b3b54c09c558cc962659b5f4927c06a5d02fd169abf58ac6ddc8a8479",
          "name": "storage_initializer"
        },
        {
          "digest": "sha256:1155a06aa8903e8436aaccbad64bd864a4a480b625466f6033dd08af7748d42a",
          "image": "registry.connect.redhat.com/seldonio/sklearnserver@sha256:1155a06aa8903e8436aaccbad64bd864a4a480b625466f6033dd08af7748d42a",
          "name": "sklearnserver"
        },
        {
          "digest": "sha256:967b68af58f555ef9c552b707a9c1776b32c680d92e827e4b3fc0526f03408e9",
          "image": "registry.connect.redhat.com/seldonio/xgboostserver@sha256:967b68af58f555ef9c552b707a9c1776b32c680d92e827e4b3fc0526f03408e9",
          "name": "xgboostserver"
        },
        {
          "digest": "sha256:2f75440a406740cfc3ae15309b207720b539f647a2aacad79b51c1b5957aa598",
          "image": "registry.connect.redhat.com/seldonio/mlflowserver@sha256:2f75440a406740cfc3ae15309b207720b539f647a2aacad79b51c1b5957aa598",
          "name": "mlflowserver"
        },
        {
          "digest": "sha256:b118f6da8495425aaaeadf93c0e1f9d374df6819591972cea5683075e9f76054",
          "image": "registry.connect.redhat.com/seldonio/tfproxy@sha256:b118f6da8495425aaaeadf93c0e1f9d374df6819591972cea5683075e9f76054",
          "name": "tfproxy"
        },
        {
          "digest": "sha256:1dc53edc5c8d1b151782f8386c0770d0358c6397eaf42ec55ebd18f331c5ef9e",
          "image": "registry.connect.redhat.com/seldonio/tensorflow-serving@sha256:1dc53edc5c8d1b151782f8386c0770d0358c6397eaf42ec55ebd18f331c5ef9e",
          "name": "tensorflow"
        },
        {
          "digest": "sha256:21e12fe1f4ad29700b6bc3a094bce5303fe28e9b29bd3436c716c53c1a0f8699",
          "image": "registry.connect.redhat.com/seldonio/alibiexplainer@sha256:21e12fe1f4ad29700b6bc3a094bce5303fe28e9b29bd3436c716c53c1a0f8699",
          "name": "explainer"
        },
        {
          "digest": "sha256:efbfbd3709b3ccb738c0cf471101d13c1aaa6ee873614e4913b2360136ab1911",
          "image": "registry.connect.redhat.com/seldonio/mock-classifier@sha256:efbfbd3709b3ccb738c0cf471101d13c1aaa6ee873614e4913b2360136ab1911",
          "name": "mock_classifier"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.6.0",
      "version_original": "1.6.0"
    },
    {
      "_id": "603d91a52a2fd3fdc53fe00d",
      "alm_examples": [
        {
          "kind": "VProtectDBServerNode",
          "metadata": {
            "name": "example-vprotectdbservernode"
          },
          "spec": {
            "imagePullSecretsName": "",
            "initcontainerimage": "registry.connect.redhat.com/storware/vprotect-init@sha256:694be1eccbc2abc8ddbf1216f940ed24e472610c91d6f2c32cf30a05c09128f2",
            "mariadb": {
              "DBImage": "registry.redhat.io/rhel8/mariadb-103",
              "MYSQL_PASSWORD": "vprotect",
              "MYSQL_USER": "vprotect",
              "cpu": "300m",
              "memory": "512Mi",
              "port": 3306,
              "pvcStorageCapacity": "20Gi",
              "replicaCount": 1,
              "serviceName": "mariadb",
              "storageClassName": "ibmc-block-gold"
            },
            "node": {
              "containerPort": 15700,
              "cpu": "500m",
              "image": "registry.connect.redhat.com/storware/vprotect-node@sha256:f87aae0422c2550aef30ae9610b40fd6341b883cdab69068180b450c3d3069be",
              "memory": "1Gi",
              "onlyStagingSpace": {
                "enable": true,
                "stagingCapacity": "20Gi",
                "storageClass": "ibmc-file-retain-bronze"
              },
              "provisionNode": true,
              "replicaCount": 1,
              "separateStagingAndBackupSpace": {
                "backupTo": {
                  "file": {
                    "enable": false,
                    "stagingCapacity": "20Gi",
                    "storageClass": "ibmc-file-retain-bronze"
                  },
                  "initializedBlock": {
                    "enable": false,
                    "stagingCapacity": "20Gi",
                    "storageClass": "ibmc-block-retain-bronze"
                  },
                  "rawBlock": {
                    "backupCapacity": "20Gi",
                    "enable": false
                  }
                },
                "stagingCapacity": "20Gi",
                "stagingStorageClass": "ibmc-file-retain-bronze"
              },
              "serviceName": "vprotect-node",
              "singleDeduplicatedSpace": {
                "capacity": "20Gi",
                "enable": false
              }
            },
            "server": {
              "image": "registry.connect.redhat.com/storware/vprotect-server@sha256:25422d5fffc9d24b9b49fc23e65a9a8c1feb45a084760feca5bbcffd443b8483",
              "ingress": {
                "enabled": false,
                "subDomain": "my-cluster.containers.appdomain.cloud"
              },
              "replicaCount": 1,
              "routes": {
                "insecureRoute": {
                  "enabled": false,
                  "name": "vprotect-server-http-route"
                },
                "secureRoute": {
                  "enabled": false,
                  "name": "vprotect-server-https-route"
                }
              },
              "serviceName": "vprotect-server"
            },
            "useImagePullSecret": false
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/storware/vprotect-operator-bundle@sha256:002c65bdfb18012ca8d860bc3877d19dabbd81cf32705003c35e96c5a3c76ba3",
      "bundle_path_digest": "sha256:002c65bdfb18012ca8d860bc3877d19dabbd81cf32705003c35e96c5a3c76ba3",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-03-02T01:15:17.241000+00:00",
      "csv_description": "The operator allows you to deploy:\n* MariaDB\n* vProtect Server\n* vProtect Node\nin one go.\n\nThe operator can monitor to see if the components are present. If they're not,\nthe operator will install the  MariaDB, vProtect Server and vProtect Node correctly without any user interaction!\n\nAll you have to do is install the operator and create an instance of MariaDB, vProtect Server and vProtect Node by creating a custom resource of type VProtectDBServerNode.\n\n\n**How to get the Application Images from registry?**\n-----\n\n- First Login to redhat catalogue webpage using your credentials.\n- Search for the Operator.\n- Click on the Operator.\n- There is a description that redirects you (upon clicking) to page that explains how to create service accounts.\n- Create a Service Account. Refer page : <https://access.redhat.com/terms-based-registry/#/accounts>\n- Once a service account is created , you can click on it and then navigate to tab Openshift Secret to get the yaml file for your ImagePullSecret.\n- Download the Secret. Create the secret using command\n\n```sh\n    kubectl create -f <secretfile.yml> --namespace=NAMESPACEHERE\n```\n- Use the name of the created secret in the CR file.\n- For all the application images we would need the secret name to be passed in the CR Spec.\n\n\n**CR Spec Details**\n----------------------\n**General Specs**\n--------\n\n  Spec                       |            Details\n-----------------------------|-----------------------------\nuseImagePullSecret:          | True if using a Secret to pull application images\nimagePullSecretsName:        | Secret name to pull images from private repository\ninitcontainerimage:          | Init container image repository URL\n\n\n**MariaDB**\n--------\n\n  Spec             |            Details\n-------------------|-----------------------------\nDBImage:           | The URL to DB image\nreplicaCount:      | Number of replicas for DB\ncpu:               | CPU configuration\nmemory:            | Memory configuration\nport:              | DB Port number\nserviceName:       | Service name for DB\npvcStorageCapacity:| Volume Capacity\nstorageClassName:  | Storage Class Name of the Volume to be claimed\nMYSQL_PASSWORD:    | DB User Password\nMYSQL_USER:        | DB User\n\n\n**vProtect Server**\n--------\n\n  Spec                       |            Details\n-----------------------------|-----------------------------\nreplicaCount:                | Number of replicas for vProtect Server\nimage:                       | vProtect Server Image URL\nserviceName:                 | vProtect Server Service name\nserviceType:                 | vProtect Server Service Type (Example : NodePort, ClusterIP etc)\ningress.enabled:             | Set to true if you need to create an Ingress\ningress.subDomain:           | Cluster Subdomain\nroutes.insecureRoute.enabled:| Set to true if you want to create an insecure route\nroutes.insecureRoute.name:   | Insecure Route name\nroutes.secureRoute.enabled:  | Set to true if you want to create an secure route\nroutes.secureRoute.name:    | Secure Route name\n\n\n**vProtect Node**\n--------\n\n  Spec                       |            Details\n-----------------------------|-----------------------------\nprovisionNode:               | Set to true if you want to provision a vProtect Node\nreplicaCount:                | Number of replicas for vProtect Node\nimage:                       | vProtect Node Image URL\ncpu:                         | CPU configuration\nmemory:                      | Memory Configuration\ncontainerPort:               | Node Container port\nserviceName:                 | Node Service Name\n\n**vProtect Node Staging Space and Backup Options** :\n--------\n  **For an instance of vProtect Node only one option can be set to true.**\n\n  Staging and Backup Space Option |            Details\n----------------------------------|-----------------------------\n**onlyStagingSpace:**             | If set to true (onlyStagingSpace.enable: true), this will create a staging space with a file type of volume mounted at /vprotect-data.\n                                  | User should provide onlyStagingSpace.stagingCapacity and onlyStagingSpace.stagingCapacity if set to true.\n                                  |\n**singleDeduplicatedSpace:**      | If set to true (singleDeduplicatedSpace.enable: true) , this will create:\n                                  | 1) emptyDir: {} at /vprotect-data\n                                  | 2) RAW Block available at /dev/sda\n                                  |\n**separateStagingAndBackupSpace:**| This allows user to choose separate space for staging and backup.\n                                  | **Staging** : A Staging space is created with a file type of volume mounted at /vprotect-data.\n                                  |               User should provide separateStagingAndBackupSpace.stagingCapacity and\n                                  |               separateStagingAndBackupSpace.stagingStorageClass of file type.\n                                  |\n                                  | **Backup**: User can backup to any one of the below options:\n                                  | 1) **RAW Block** : If set to true separateStagingAndBackupSpace.backupTo.rawBlock\n                                  |                    Creates a RAW Block available at /dev/sda.\n                                  |                    User should provide separateStagingAndBackupSpace.backupTo.rawBlock.backupCapacity\n                                  | 2) **File volume**: If set to true separateStagingAndBackupSpace.backupTo.file\n                                  |                    User should provide separateStagingAndBackupSpace.backupTo.file.backupCapacity\n                                  |                    User should provide separateStagingAndBackupSpace.backupTo.file.storageClass of type file\n                                  |                    User should provide separateStagingAndBackupSpace.backupTo.file.backupMountPath to mount the volume.\n                                  |                    If mount path is kept blank then volume will be mounted to default location - /vprotect_data/backupsDestination\n                                  | 3) **Initialized Block Volume**: If set to true separateStagingAndBackupSpace.backupTo.initializedBlock\n                                  |                    User should provide separateStagingAndBackupSpace.backupTo.initializedBlock.backupCapacity\n                                  |                    User should provide separateStagingAndBackupSpace.backupTo.initializedBlock.storageClass of type block\n                                  |                    User should provide separateStagingAndBackupSpace.backupTo.initializedBlock.backupMountPath to mount the volume\n                                  |                    If mount path is kept blank then volume will be mounted to default location - /vprotect_data/backupsDestination\n                                  |\n**Only emptyDir: {} Volume**      | If none of the above options are set to true , operator creates an emptyDir: {} at /vprotect-data\n\n**Deployment on Kubernetes:**\n-----------------------\n\n```sh\n# Let the cluster know about our new custom resource VProtectDBServerNode\nkubectl create -f deploy/crds/vprotect.storware.com_vprotectdbservernodes_crd.yaml\n# Create the 'vProtect' namespace\nkubectl apply -f deploy/namespace.yaml\n# Create necessary user and permissions to make things happen\nkubectl create -f deploy/service_account.yaml\nkubectl create -f deploy/role.yaml\nkubectl create -f deploy/role_binding.yaml\nkubectl create -f deploy/clusterrole.yaml\nkubectl create -f deploy/clusterrole_binding.yaml\n# Deploy the operator container as a pod\nkubectl apply -f deploy/operator.yaml\nkubectl create -f deploy/crds/vprotect.storware.com_v1alpha1_vprotectdbservernode_cr.yaml\n```\n",
      "csv_display_name": "vProtect Operator",
      "csv_metadata_description": "Storware vProtect is an enterprise backup solution for virtual environments. It facilitates the implementation of virtual machine backup running on every major virtualization, container or cloud platform. It supports multiple backup providers:  file system-based, object storage or enterprise grade backup providers.",
      "csv_name": "vprotect-operator.v0.0.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:11:03.730000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "vprotect-operator",
      "provided_apis": [
        {
          "group": "vprotect.storware.com",
          "kind": "VProtectDBServerNode",
          "plural": "vprotectdbservernodes",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:442a73a6bfa760430a4a6561f0c68fb783983e0f2f6dee2b3e9b010d76226430",
          "image": "registry.connect.redhat.com/storware/vprotect-operator@sha256:442a73a6bfa760430a4a6561f0c68fb783983e0f2f6dee2b3e9b010d76226430",
          "name": "vprotect-operator-442a73a6bfa760430a4a6561f0c68fb783983e0f2f6dee2b3e9b010d76226430-annotation"
        },
        {
          "digest": "sha256:442a73a6bfa760430a4a6561f0c68fb783983e0f2f6dee2b3e9b010d76226430",
          "image": "registry.connect.redhat.com/storware/vprotect-operator@sha256:442a73a6bfa760430a4a6561f0c68fb783983e0f2f6dee2b3e9b010d76226430",
          "name": "vprotect-operator"
        },
        {
          "digest": "sha256:6934718d927eafa76117e810ba1f79ef2c909fbd57c810484b23367cc52ceb46",
          "image": "registry.redhat.io/rhel8/mariadb-103@sha256:6934718d927eafa76117e810ba1f79ef2c909fbd57c810484b23367cc52ceb46",
          "name": "db"
        },
        {
          "digest": "sha256:694be1eccbc2abc8ddbf1216f940ed24e472610c91d6f2c32cf30a05c09128f2",
          "image": "registry.connect.redhat.com/storware/vprotect-init@sha256:694be1eccbc2abc8ddbf1216f940ed24e472610c91d6f2c32cf30a05c09128f2",
          "name": "initcontainer"
        },
        {
          "digest": "sha256:25422d5fffc9d24b9b49fc23e65a9a8c1feb45a084760feca5bbcffd443b8483",
          "image": "registry.connect.redhat.com/storware/vprotect-server@sha256:25422d5fffc9d24b9b49fc23e65a9a8c1feb45a084760feca5bbcffd443b8483",
          "name": "server"
        },
        {
          "digest": "sha256:f87aae0422c2550aef30ae9610b40fd6341b883cdab69068180b450c3d3069be",
          "image": "registry.connect.redhat.com/storware/vprotect-node@sha256:f87aae0422c2550aef30ae9610b40fd6341b883cdab69068180b450c3d3069be",
          "name": "node"
        },
        {
          "digest": "sha256:f87aae0422c2550aef30ae9610b40fd6341b883cdab69068180b450c3d3069be",
          "image": "registry.connect.redhat.com/storware/vprotect-node@sha256:f87aae0422c2550aef30ae9610b40fd6341b883cdab69068180b450c3d3069be",
          "name": "vprotect-node-f87aae0422c2550aef30ae9610b40fd6341b883cdab69068180b450c3d3069be-annotation"
        },
        {
          "digest": "sha256:25422d5fffc9d24b9b49fc23e65a9a8c1feb45a084760feca5bbcffd443b8483",
          "image": "registry.connect.redhat.com/storware/vprotect-server@sha256:25422d5fffc9d24b9b49fc23e65a9a8c1feb45a084760feca5bbcffd443b8483",
          "name": "vprotect-server-25422d5fffc9d24b9b49fc23e65a9a8c1feb45a084760feca5bbcffd443b8483-annotation"
        },
        {
          "digest": "sha256:694be1eccbc2abc8ddbf1216f940ed24e472610c91d6f2c32cf30a05c09128f2",
          "image": "registry.connect.redhat.com/storware/vprotect-init@sha256:694be1eccbc2abc8ddbf1216f940ed24e472610c91d6f2c32cf30a05c09128f2",
          "name": "vprotect-init-694be1eccbc2abc8ddbf1216f940ed24e472610c91d6f2c32cf30a05c09128f2-annotation"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.0.6",
      "version_original": "0.0.6"
    },
    {
      "_id": "6040fdc65a00810ecaf7bae4",
      "alm_examples": [
        {
          "kind": "Certifai",
          "metadata": {
            "name": "default-certifai"
          },
          "spec": {
            "console": {
              "authorization-type": "none",
              "azure": {
                "account-key": "your account key",
                "account-name": "your account name",
                "sas-token": "your SAS token"
              },
              "create-ingress": true,
              "gcs": {
                "application-credentials": "{\n  \"type\": \"\",\n  \"project_id\": \"\",\n  \"private_key_id\": \"\",\n  \"private_key\": \"\",\n  \"client_email\": \"\",\n  \"client_id\": \"\",\n  \"auth_uri\": \"\",\n  \"token_uri\": \"\",\n  \"auth_provider_x509_cert_url\": \"\",\n  \"client_x509_cert_url\": \"\"\n}\n"
              },
              "replicas": 1,
              "route-type": "none",
              "s3": {
                "access-key": "your access key",
                "endpoint": "https://s3.amazonaws.com",
                "secret-key": "your secret key",
                "verify-cert": false
              },
              "scan-dir": ""
            },
            "deployment-type": "openshift",
            "dex": {
              "connector": {
                "add-config": "orgs:\n- name: my-org\n",
                "client-id": "clientid",
                "client-secret": "clientsecret",
                "name": "Github",
                "type": "github"
              },
              "create-ingress": true,
              "enabled": false,
              "replicas": 1
            },
            "policy": {
              "authorization-type": "none",
              "azure": {
                "account-key": "your account key",
                "account-name": "your account name",
                "sas-token": "your SAS token"
              },
              "create-ingress": true,
              "enabled": false,
              "gcs": {
                "application-credentials": "{\n  \"type\": \"\",\n  \"project_id\": \"\",\n  \"private_key_id\": \"\",\n  \"private_key\": \"\",\n  \"client_email\": \"\",\n  \"client_id\": \"\",\n  \"auth_uri\": \"\",\n  \"token_uri\": \"\",\n  \"auth_provider_x509_cert_url\": \"\",\n  \"client_x509_cert_url\": \"\"\n}\n"
              },
              "questionnaire-dir": "",
              "replicas": 1,
              "route-type": "none",
              "s3": {
                "access-key": "your access key",
                "endpoint": "https://s3.amazonaws.com",
                "secret-key": "your secret key",
                "verify-cert": false
              }
            },
            "reference-model": {
              "enabled": true
            },
            "reporting": {
              "db-conn-str": "postgresql://user:password@service:port/db",
              "enabled": true,
              "period": "*/15 * * * *"
            }
          }
        },
        {
          "kind": "CertifaiScan",
          "metadata": {
            "name": "example-certifai-scan",
            "namespace": "certifai"
          },
          "spec": {
            "scanconfig": {
              "concurrency": 4,
              "requests": {
                "cpu": "800m",
                "memory": "800Mi"
              },
              "scanargs": "command line args here",
              "scandef": "definition file text here"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/c12e/cortex-certifai-operator-bundle@sha256:d69cb1d66cba931eb04310b8917a41cf427ba70ad5f422478d812b303391a8c0",
      "bundle_path_digest": "sha256:d69cb1d66cba931eb04310b8917a41cf427ba70ad5f422478d812b303391a8c0",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-03-04T15:33:26.751000+00:00",
      "csv_description": "Cortex Certifai empowers enterprises to identify and mitigate risk and vulnerabilities within AI and deploy trusted AI systems into production. It evaluates AI models and allows users to compare different models or model versions for the following qualities.\n* **Robustness:** measures how well models retain an outcome given changes to the data feature values. The more robust a model is, the greater the changes required to alter the outcome.\n* **Fairness by group:** measures the difference required to change the outcome for different groups implicit in a feature given the same model and dataset. For example, implicit groups male, female, and nonbinary belong to the feature, \u201cgender\u201d. A fair model shows that all 3 groups require a similar amount of change to alter the results.\n* **Explainability:** measures the average simplicity of counterfactual explanations provided for each model. An explanation that requires a single changed feature will score 100%. Explanations that require more changed features will score lower.\n* **Explanations:** display the prediction provided through the generation of counterfactuals for the change that must occur in a dataset with given restrictions to obtain a different outcome. Users can explore the entire dataset one observation at a time to understand what features changed and by how much to obtain a different result.\nSee our [documentation](https://cognitivescale.github.io/cortex-certifai/) for information about how to deploy the Certifai Operator and how to get started using our toolkit.\n## License Copyright 2020 Cognitive Scale, Inc. All Rights Reserved.\nBy downloading you agree to the terms of CognitiveScale's [End User License Agreement](https://www.cognitivescale.com/legal-information/).\n",
      "csv_display_name": "Cortex Certifai Operator",
      "csv_metadata_description": "Cortex Certifai empowers enterprises to identify and mitigate risk and vulnerabilities within AI and deploy trusted AI systems into production.",
      "csv_name": "cortex-certifai-operator.v1.3.9",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:22:07.977000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "cortex-certifai-operator",
      "provided_apis": [
        {
          "group": "cortex.cognitivescale.com",
          "kind": "Certifai",
          "version": "v1"
        },
        {
          "group": "cortex.cognitivescale.com",
          "kind": "CertifaiScan",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:4ac0c60eaa087209a7944212a29b5b23bdb946b6139d28ae4f999c3440709879",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-operator@sha256:4ac0c60eaa087209a7944212a29b5b23bdb946b6139d28ae4f999c3440709879",
          "name": "cortex-certifai-operator-4ac0c60eaa087209a7944212a29b5b23bdb946b6139d28ae4f999c3440709879-annotation"
        },
        {
          "digest": "sha256:2d5d2ba922fd72180f8b229b1e03c2e46cc507ed33c498be0d02b2f26f83fde5",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-operator@sha256:2d5d2ba922fd72180f8b229b1e03c2e46cc507ed33c498be0d02b2f26f83fde5",
          "name": "cortex-certifai-operator"
        },
        {
          "digest": "sha256:e0b34632bffe7d9ea186e7412030e404d081adb4216145f676cddda46a8746fa",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-reference-model-server@sha256:e0b34632bffe7d9ea186e7412030e404d081adb4216145f676cddda46a8746fa",
          "name": "refmodel"
        },
        {
          "digest": "sha256:24c1eb9363cfde9fdabf605fb8d26c45ccc4610a975b15fa810fc44bebb11abd",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-console@sha256:24c1eb9363cfde9fdabf605fb8d26c45ccc4610a975b15fa810fc44bebb11abd",
          "name": "console"
        },
        {
          "digest": "sha256:d679d761cad6bfdbcaa4d9c8009324f5280f1fd5bf1a9dfbd6cbf9117d12dadf",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-policy-chooser@sha256:d679d761cad6bfdbcaa4d9c8009324f5280f1fd5bf1a9dfbd6cbf9117d12dadf",
          "name": "policy_chooser"
        },
        {
          "digest": "sha256:d4480188b4f76b3137783661a98d7cbede29ec9347458f691113190fc4f2b9c5",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-scanner@sha256:d4480188b4f76b3137783661a98d7cbede29ec9347458f691113190fc4f2b9c5",
          "name": "scanner"
        },
        {
          "digest": "sha256:876a55d1c93905a8993568700c38601aff47b5cd07bf67cc70a75d4bf4fd4e0c",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-reporting-etl@sha256:876a55d1c93905a8993568700c38601aff47b5cd07bf67cc70a75d4bf4fd4e0c",
          "name": "reporting_etl"
        },
        {
          "digest": "sha256:a6e75a40feea7b838071c4fcb7933eec29955bf5fe7d874400d6a00e2709031f",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:a6e75a40feea7b838071c4fcb7933eec29955bf5fe7d874400d6a00e2709031f",
          "name": "oauth_proxy"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.3.9",
      "version_original": "1.3.9"
    },
    {
      "_id": "6040fdc75a00810ecaf7bae5",
      "alm_examples": [
        {
          "kind": "Certifai",
          "metadata": {
            "name": "default-certifai"
          },
          "spec": {
            "console": {
              "authorization-type": "none",
              "azure": {
                "account-key": "your account key",
                "account-name": "your account name",
                "sas-token": "your SAS token"
              },
              "create-ingress": true,
              "gcs": {
                "application-credentials": "{\n  \"type\": \"\",\n  \"project_id\": \"\",\n  \"private_key_id\": \"\",\n  \"private_key\": \"\",\n  \"client_email\": \"\",\n  \"client_id\": \"\",\n  \"auth_uri\": \"\",\n  \"token_uri\": \"\",\n  \"auth_provider_x509_cert_url\": \"\",\n  \"client_x509_cert_url\": \"\"\n}\n"
              },
              "replicas": 1,
              "route-type": "none",
              "s3": {
                "access-key": "your access key",
                "endpoint": "https://s3.amazonaws.com",
                "secret-key": "your secret key",
                "verify-cert": false
              },
              "scan-dir": ""
            },
            "deployment-type": "openshift",
            "dex": {
              "connector": {
                "add-config": "orgs:\n- name: my-org\n",
                "client-id": "clientid",
                "client-secret": "clientsecret",
                "name": "Github",
                "type": "github"
              },
              "create-ingress": true,
              "enabled": false,
              "replicas": 1
            },
            "policy": {
              "authorization-type": "none",
              "azure": {
                "account-key": "your account key",
                "account-name": "your account name",
                "sas-token": "your SAS token"
              },
              "create-ingress": true,
              "enabled": false,
              "gcs": {
                "application-credentials": "{\n  \"type\": \"\",\n  \"project_id\": \"\",\n  \"private_key_id\": \"\",\n  \"private_key\": \"\",\n  \"client_email\": \"\",\n  \"client_id\": \"\",\n  \"auth_uri\": \"\",\n  \"token_uri\": \"\",\n  \"auth_provider_x509_cert_url\": \"\",\n  \"client_x509_cert_url\": \"\"\n}\n"
              },
              "questionnaire-dir": "",
              "replicas": 1,
              "route-type": "none",
              "s3": {
                "access-key": "your access key",
                "endpoint": "https://s3.amazonaws.com",
                "secret-key": "your secret key",
                "verify-cert": false
              }
            },
            "reference-model": {
              "enabled": true
            },
            "reporting": {
              "db-conn-str": "postgresql://user:password@service:port/db",
              "enabled": true,
              "period": "*/15 * * * *"
            }
          }
        },
        {
          "kind": "CertifaiScan",
          "metadata": {
            "name": "example-certifai-scan",
            "namespace": "certifai"
          },
          "spec": {
            "scanconfig": {
              "concurrency": 4,
              "requests": {
                "cpu": "800m",
                "memory": "800Mi"
              },
              "scanargs": "command line args here",
              "scandef": "definition file text here"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/c12e/cortex-certifai-operator-bundle@sha256:d69cb1d66cba931eb04310b8917a41cf427ba70ad5f422478d812b303391a8c0",
      "bundle_path_digest": "sha256:d69cb1d66cba931eb04310b8917a41cf427ba70ad5f422478d812b303391a8c0",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-03-04T15:33:27.801000+00:00",
      "csv_description": "Cortex Certifai empowers enterprises to identify and mitigate risk and vulnerabilities within AI and deploy trusted AI systems into production. It evaluates AI models and allows users to compare different models or model versions for the following qualities.\n* **Robustness:** measures how well models retain an outcome given changes to the data feature values. The more robust a model is, the greater the changes required to alter the outcome.\n* **Fairness by group:** measures the difference required to change the outcome for different groups implicit in a feature given the same model and dataset. For example, implicit groups male, female, and nonbinary belong to the feature, \u201cgender\u201d. A fair model shows that all 3 groups require a similar amount of change to alter the results.\n* **Explainability:** measures the average simplicity of counterfactual explanations provided for each model. An explanation that requires a single changed feature will score 100%. Explanations that require more changed features will score lower.\n* **Explanations:** display the prediction provided through the generation of counterfactuals for the change that must occur in a dataset with given restrictions to obtain a different outcome. Users can explore the entire dataset one observation at a time to understand what features changed and by how much to obtain a different result.\nSee our [documentation](https://cognitivescale.github.io/cortex-certifai/) for information about how to deploy the Certifai Operator and how to get started using our toolkit.\n## License Copyright 2020 Cognitive Scale, Inc. All Rights Reserved.\nBy downloading you agree to the terms of CognitiveScale's [End User License Agreement](https://www.cognitivescale.com/legal-information/).\n",
      "csv_display_name": "Cortex Certifai Operator",
      "csv_metadata_description": "Cortex Certifai empowers enterprises to identify and mitigate risk and vulnerabilities within AI and deploy trusted AI systems into production.",
      "csv_name": "cortex-certifai-operator.v1.3.9",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:19:35.495000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "cortex-certifai-operator",
      "provided_apis": [
        {
          "group": "cortex.cognitivescale.com",
          "kind": "Certifai",
          "version": "v1"
        },
        {
          "group": "cortex.cognitivescale.com",
          "kind": "CertifaiScan",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:4ac0c60eaa087209a7944212a29b5b23bdb946b6139d28ae4f999c3440709879",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-operator@sha256:4ac0c60eaa087209a7944212a29b5b23bdb946b6139d28ae4f999c3440709879",
          "name": "cortex-certifai-operator-4ac0c60eaa087209a7944212a29b5b23bdb946b6139d28ae4f999c3440709879-annotation"
        },
        {
          "digest": "sha256:2d5d2ba922fd72180f8b229b1e03c2e46cc507ed33c498be0d02b2f26f83fde5",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-operator@sha256:2d5d2ba922fd72180f8b229b1e03c2e46cc507ed33c498be0d02b2f26f83fde5",
          "name": "cortex-certifai-operator"
        },
        {
          "digest": "sha256:e0b34632bffe7d9ea186e7412030e404d081adb4216145f676cddda46a8746fa",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-reference-model-server@sha256:e0b34632bffe7d9ea186e7412030e404d081adb4216145f676cddda46a8746fa",
          "name": "refmodel"
        },
        {
          "digest": "sha256:24c1eb9363cfde9fdabf605fb8d26c45ccc4610a975b15fa810fc44bebb11abd",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-console@sha256:24c1eb9363cfde9fdabf605fb8d26c45ccc4610a975b15fa810fc44bebb11abd",
          "name": "console"
        },
        {
          "digest": "sha256:d679d761cad6bfdbcaa4d9c8009324f5280f1fd5bf1a9dfbd6cbf9117d12dadf",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-policy-chooser@sha256:d679d761cad6bfdbcaa4d9c8009324f5280f1fd5bf1a9dfbd6cbf9117d12dadf",
          "name": "policy_chooser"
        },
        {
          "digest": "sha256:d4480188b4f76b3137783661a98d7cbede29ec9347458f691113190fc4f2b9c5",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-scanner@sha256:d4480188b4f76b3137783661a98d7cbede29ec9347458f691113190fc4f2b9c5",
          "name": "scanner"
        },
        {
          "digest": "sha256:876a55d1c93905a8993568700c38601aff47b5cd07bf67cc70a75d4bf4fd4e0c",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-reporting-etl@sha256:876a55d1c93905a8993568700c38601aff47b5cd07bf67cc70a75d4bf4fd4e0c",
          "name": "reporting_etl"
        },
        {
          "digest": "sha256:a6e75a40feea7b838071c4fcb7933eec29955bf5fe7d874400d6a00e2709031f",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:a6e75a40feea7b838071c4fcb7933eec29955bf5fe7d874400d6a00e2709031f",
          "name": "oauth_proxy"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.3.9",
      "version_original": "1.3.9"
    },
    {
      "_id": "60410499122bd89307e0087e",
      "alm_examples": [
        {
          "kind": "Certifai",
          "metadata": {
            "name": "default-certifai"
          },
          "spec": {
            "console": {
              "authorization-type": "none",
              "azure": {
                "account-key": "your account key",
                "account-name": "your account name",
                "sas-token": "your SAS token"
              },
              "create-ingress": true,
              "gcs": {
                "application-credentials": "{\n  \"type\": \"\",\n  \"project_id\": \"\",\n  \"private_key_id\": \"\",\n  \"private_key\": \"\",\n  \"client_email\": \"\",\n  \"client_id\": \"\",\n  \"auth_uri\": \"\",\n  \"token_uri\": \"\",\n  \"auth_provider_x509_cert_url\": \"\",\n  \"client_x509_cert_url\": \"\"\n}\n"
              },
              "replicas": 1,
              "route-type": "none",
              "s3": {
                "access-key": "your access key",
                "endpoint": "https://s3.amazonaws.com",
                "secret-key": "your secret key",
                "verify-cert": false
              },
              "scan-dir": ""
            },
            "deployment-type": "openshift",
            "dex": {
              "connector": {
                "add-config": "orgs:\n- name: my-org\n",
                "client-id": "clientid",
                "client-secret": "clientsecret",
                "name": "Github",
                "type": "github"
              },
              "create-ingress": true,
              "enabled": false,
              "replicas": 1
            },
            "policy": {
              "authorization-type": "none",
              "azure": {
                "account-key": "your account key",
                "account-name": "your account name",
                "sas-token": "your SAS token"
              },
              "create-ingress": true,
              "enabled": false,
              "gcs": {
                "application-credentials": "{\n  \"type\": \"\",\n  \"project_id\": \"\",\n  \"private_key_id\": \"\",\n  \"private_key\": \"\",\n  \"client_email\": \"\",\n  \"client_id\": \"\",\n  \"auth_uri\": \"\",\n  \"token_uri\": \"\",\n  \"auth_provider_x509_cert_url\": \"\",\n  \"client_x509_cert_url\": \"\"\n}\n"
              },
              "questionnaire-dir": "",
              "replicas": 1,
              "route-type": "none",
              "s3": {
                "access-key": "your access key",
                "endpoint": "https://s3.amazonaws.com",
                "secret-key": "your secret key",
                "verify-cert": false
              }
            },
            "reference-model": {
              "enabled": true
            },
            "reporting": {
              "db-conn-str": "postgresql://user:password@service:port/db",
              "enabled": true,
              "period": "*/15 * * * *"
            }
          }
        },
        {
          "kind": "CertifaiScan",
          "metadata": {
            "name": "example-certifai-scan",
            "namespace": "certifai"
          },
          "spec": {
            "scanconfig": {
              "concurrency": 4,
              "requests": {
                "cpu": "800m",
                "memory": "800Mi"
              },
              "scanargs": "command line args here",
              "scandef": "definition file text here"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/c12e/cortex-certifai-operator-bundle@sha256:d69cb1d66cba931eb04310b8917a41cf427ba70ad5f422478d812b303391a8c0",
      "bundle_path_digest": "sha256:d69cb1d66cba931eb04310b8917a41cf427ba70ad5f422478d812b303391a8c0",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-03-04T16:02:33.664000+00:00",
      "csv_description": "Cortex Certifai empowers enterprises to identify and mitigate risk and vulnerabilities within AI and deploy trusted AI systems into production. It evaluates AI models and allows users to compare different models or model versions for the following qualities.\n* **Robustness:** measures how well models retain an outcome given changes to the data feature values. The more robust a model is, the greater the changes required to alter the outcome.\n* **Fairness by group:** measures the difference required to change the outcome for different groups implicit in a feature given the same model and dataset. For example, implicit groups male, female, and nonbinary belong to the feature, \u201cgender\u201d. A fair model shows that all 3 groups require a similar amount of change to alter the results.\n* **Explainability:** measures the average simplicity of counterfactual explanations provided for each model. An explanation that requires a single changed feature will score 100%. Explanations that require more changed features will score lower.\n* **Explanations:** display the prediction provided through the generation of counterfactuals for the change that must occur in a dataset with given restrictions to obtain a different outcome. Users can explore the entire dataset one observation at a time to understand what features changed and by how much to obtain a different result.\nSee our [documentation](https://cognitivescale.github.io/cortex-certifai/) for information about how to deploy the Certifai Operator and how to get started using our toolkit.\n## License Copyright 2020 Cognitive Scale, Inc. All Rights Reserved.\nBy downloading you agree to the terms of CognitiveScale's [End User License Agreement](https://www.cognitivescale.com/legal-information/).\n",
      "csv_display_name": "Cortex Certifai Operator",
      "csv_metadata_description": "Cortex Certifai empowers enterprises to identify and mitigate risk and vulnerabilities within AI and deploy trusted AI systems into production.",
      "csv_name": "cortex-certifai-operator.v1.3.9",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-04T14:48:24.621000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "cortex-certifai-operator",
      "provided_apis": [],
      "related_images": [
        {
          "digest": "sha256:4ac0c60eaa087209a7944212a29b5b23bdb946b6139d28ae4f999c3440709879",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-operator@sha256:4ac0c60eaa087209a7944212a29b5b23bdb946b6139d28ae4f999c3440709879",
          "name": "cortex-certifai-operator-4ac0c60eaa087209a7944212a29b5b23bdb946b6139d28ae4f999c3440709879-annotation"
        },
        {
          "digest": "sha256:2d5d2ba922fd72180f8b229b1e03c2e46cc507ed33c498be0d02b2f26f83fde5",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-operator@sha256:2d5d2ba922fd72180f8b229b1e03c2e46cc507ed33c498be0d02b2f26f83fde5",
          "name": "cortex-certifai-operator"
        },
        {
          "digest": "sha256:e0b34632bffe7d9ea186e7412030e404d081adb4216145f676cddda46a8746fa",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-reference-model-server@sha256:e0b34632bffe7d9ea186e7412030e404d081adb4216145f676cddda46a8746fa",
          "name": "refmodel"
        },
        {
          "digest": "sha256:24c1eb9363cfde9fdabf605fb8d26c45ccc4610a975b15fa810fc44bebb11abd",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-console@sha256:24c1eb9363cfde9fdabf605fb8d26c45ccc4610a975b15fa810fc44bebb11abd",
          "name": "console"
        },
        {
          "digest": "sha256:d679d761cad6bfdbcaa4d9c8009324f5280f1fd5bf1a9dfbd6cbf9117d12dadf",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-policy-chooser@sha256:d679d761cad6bfdbcaa4d9c8009324f5280f1fd5bf1a9dfbd6cbf9117d12dadf",
          "name": "policy_chooser"
        },
        {
          "digest": "sha256:d4480188b4f76b3137783661a98d7cbede29ec9347458f691113190fc4f2b9c5",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-scanner@sha256:d4480188b4f76b3137783661a98d7cbede29ec9347458f691113190fc4f2b9c5",
          "name": "scanner"
        },
        {
          "digest": "sha256:876a55d1c93905a8993568700c38601aff47b5cd07bf67cc70a75d4bf4fd4e0c",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-reporting-etl@sha256:876a55d1c93905a8993568700c38601aff47b5cd07bf67cc70a75d4bf4fd4e0c",
          "name": "reporting_etl"
        },
        {
          "digest": "sha256:a6e75a40feea7b838071c4fcb7933eec29955bf5fe7d874400d6a00e2709031f",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:a6e75a40feea7b838071c4fcb7933eec29955bf5fe7d874400d6a00e2709031f",
          "name": "oauth_proxy"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.3.9",
      "version_original": "1.3.9"
    },
    {
      "_id": "6041049a5a00810ecaf7baf7",
      "alm_examples": [
        {
          "kind": "Certifai",
          "metadata": {
            "name": "default-certifai"
          },
          "spec": {
            "console": {
              "authorization-type": "none",
              "azure": {
                "account-key": "your account key",
                "account-name": "your account name",
                "sas-token": "your SAS token"
              },
              "create-ingress": true,
              "gcs": {
                "application-credentials": "{\n  \"type\": \"\",\n  \"project_id\": \"\",\n  \"private_key_id\": \"\",\n  \"private_key\": \"\",\n  \"client_email\": \"\",\n  \"client_id\": \"\",\n  \"auth_uri\": \"\",\n  \"token_uri\": \"\",\n  \"auth_provider_x509_cert_url\": \"\",\n  \"client_x509_cert_url\": \"\"\n}\n"
              },
              "replicas": 1,
              "route-type": "none",
              "s3": {
                "access-key": "your access key",
                "endpoint": "https://s3.amazonaws.com",
                "secret-key": "your secret key",
                "verify-cert": false
              },
              "scan-dir": ""
            },
            "deployment-type": "openshift",
            "dex": {
              "connector": {
                "add-config": "orgs:\n- name: my-org\n",
                "client-id": "clientid",
                "client-secret": "clientsecret",
                "name": "Github",
                "type": "github"
              },
              "create-ingress": true,
              "enabled": false,
              "replicas": 1
            },
            "policy": {
              "authorization-type": "none",
              "azure": {
                "account-key": "your account key",
                "account-name": "your account name",
                "sas-token": "your SAS token"
              },
              "create-ingress": true,
              "enabled": false,
              "gcs": {
                "application-credentials": "{\n  \"type\": \"\",\n  \"project_id\": \"\",\n  \"private_key_id\": \"\",\n  \"private_key\": \"\",\n  \"client_email\": \"\",\n  \"client_id\": \"\",\n  \"auth_uri\": \"\",\n  \"token_uri\": \"\",\n  \"auth_provider_x509_cert_url\": \"\",\n  \"client_x509_cert_url\": \"\"\n}\n"
              },
              "questionnaire-dir": "",
              "replicas": 1,
              "route-type": "none",
              "s3": {
                "access-key": "your access key",
                "endpoint": "https://s3.amazonaws.com",
                "secret-key": "your secret key",
                "verify-cert": false
              }
            },
            "reference-model": {
              "enabled": true
            },
            "reporting": {
              "db-conn-str": "postgresql://user:password@service:port/db",
              "enabled": true,
              "period": "*/15 * * * *"
            }
          }
        },
        {
          "kind": "CertifaiScan",
          "metadata": {
            "name": "example-certifai-scan",
            "namespace": "certifai"
          },
          "spec": {
            "scanconfig": {
              "concurrency": 4,
              "requests": {
                "cpu": "800m",
                "memory": "800Mi"
              },
              "scanargs": "command line args here",
              "scandef": "definition file text here"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/c12e/cortex-certifai-operator-bundle@sha256:d69cb1d66cba931eb04310b8917a41cf427ba70ad5f422478d812b303391a8c0",
      "bundle_path_digest": "sha256:d69cb1d66cba931eb04310b8917a41cf427ba70ad5f422478d812b303391a8c0",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-03-04T16:02:34.652000+00:00",
      "csv_description": "Cortex Certifai empowers enterprises to identify and mitigate risk and vulnerabilities within AI and deploy trusted AI systems into production. It evaluates AI models and allows users to compare different models or model versions for the following qualities.\n* **Robustness:** measures how well models retain an outcome given changes to the data feature values. The more robust a model is, the greater the changes required to alter the outcome.\n* **Fairness by group:** measures the difference required to change the outcome for different groups implicit in a feature given the same model and dataset. For example, implicit groups male, female, and nonbinary belong to the feature, \u201cgender\u201d. A fair model shows that all 3 groups require a similar amount of change to alter the results.\n* **Explainability:** measures the average simplicity of counterfactual explanations provided for each model. An explanation that requires a single changed feature will score 100%. Explanations that require more changed features will score lower.\n* **Explanations:** display the prediction provided through the generation of counterfactuals for the change that must occur in a dataset with given restrictions to obtain a different outcome. Users can explore the entire dataset one observation at a time to understand what features changed and by how much to obtain a different result.\nSee our [documentation](https://cognitivescale.github.io/cortex-certifai/) for information about how to deploy the Certifai Operator and how to get started using our toolkit.\n## License Copyright 2020 Cognitive Scale, Inc. All Rights Reserved.\nBy downloading you agree to the terms of CognitiveScale's [End User License Agreement](https://www.cognitivescale.com/legal-information/).\n",
      "csv_display_name": "Cortex Certifai Operator",
      "csv_metadata_description": "Cortex Certifai empowers enterprises to identify and mitigate risk and vulnerabilities within AI and deploy trusted AI systems into production.",
      "csv_name": "cortex-certifai-operator.v1.3.9",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:33:41.840000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "cortex-certifai-operator",
      "provided_apis": [],
      "related_images": [
        {
          "digest": "sha256:4ac0c60eaa087209a7944212a29b5b23bdb946b6139d28ae4f999c3440709879",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-operator@sha256:4ac0c60eaa087209a7944212a29b5b23bdb946b6139d28ae4f999c3440709879",
          "name": "cortex-certifai-operator-4ac0c60eaa087209a7944212a29b5b23bdb946b6139d28ae4f999c3440709879-annotation"
        },
        {
          "digest": "sha256:2d5d2ba922fd72180f8b229b1e03c2e46cc507ed33c498be0d02b2f26f83fde5",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-operator@sha256:2d5d2ba922fd72180f8b229b1e03c2e46cc507ed33c498be0d02b2f26f83fde5",
          "name": "cortex-certifai-operator"
        },
        {
          "digest": "sha256:e0b34632bffe7d9ea186e7412030e404d081adb4216145f676cddda46a8746fa",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-reference-model-server@sha256:e0b34632bffe7d9ea186e7412030e404d081adb4216145f676cddda46a8746fa",
          "name": "refmodel"
        },
        {
          "digest": "sha256:24c1eb9363cfde9fdabf605fb8d26c45ccc4610a975b15fa810fc44bebb11abd",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-console@sha256:24c1eb9363cfde9fdabf605fb8d26c45ccc4610a975b15fa810fc44bebb11abd",
          "name": "console"
        },
        {
          "digest": "sha256:d679d761cad6bfdbcaa4d9c8009324f5280f1fd5bf1a9dfbd6cbf9117d12dadf",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-policy-chooser@sha256:d679d761cad6bfdbcaa4d9c8009324f5280f1fd5bf1a9dfbd6cbf9117d12dadf",
          "name": "policy_chooser"
        },
        {
          "digest": "sha256:d4480188b4f76b3137783661a98d7cbede29ec9347458f691113190fc4f2b9c5",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-scanner@sha256:d4480188b4f76b3137783661a98d7cbede29ec9347458f691113190fc4f2b9c5",
          "name": "scanner"
        },
        {
          "digest": "sha256:876a55d1c93905a8993568700c38601aff47b5cd07bf67cc70a75d4bf4fd4e0c",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-reporting-etl@sha256:876a55d1c93905a8993568700c38601aff47b5cd07bf67cc70a75d4bf4fd4e0c",
          "name": "reporting_etl"
        },
        {
          "digest": "sha256:a6e75a40feea7b838071c4fcb7933eec29955bf5fe7d874400d6a00e2709031f",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:a6e75a40feea7b838071c4fcb7933eec29955bf5fe7d874400d6a00e2709031f",
          "name": "oauth_proxy"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.3.9",
      "version_original": "1.3.9"
    },
    {
      "_id": "60411673122bd89307e00891",
      "alm_examples": [
        {
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "dcgmExporter": {
              "affinity": {},
              "image": "dcgm-exporter",
              "imagePullSecrets": [],
              "nodeSelector": {},
              "podSecurityContext": {},
              "repository": "nvcr.io/nvidia/k8s",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:ced606933cd2210768ee8488b624c64ac0bdce6f05d9c4b4210e251370a14ff8"
            },
            "devicePlugin": {
              "affinity": {},
              "args": [
                "--mig-strategy=single",
                "--pass-device-specs=true",
                "--fail-on-init-error=true",
                "--device-list-strategy=envvar",
                "--nvidia-driver-root=/run/nvidia/driver"
              ],
              "image": "k8s-device-plugin",
              "imagePullSecrets": [],
              "nodeSelector": {},
              "podSecurityContext": {},
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:ea353fe57628f4d3c3e1cda126455d02f2277e3ee92fa9da441d409d76b2ac92"
            },
            "driver": {
              "affinity": {},
              "image": "driver",
              "imagePullSecrets": [],
              "licensingConfig": {
                "configMapName": ""
              },
              "nodeSelector": {},
              "podSecurityContext": {},
              "repoConfig": {
                "configMapName": "",
                "destinationDir": ""
              },
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:017d2e2a1bc410e9d2ac116683fc49a6f28e935cadee86e712cc147ea0239469"
            },
            "gfd": {
              "affinity": {},
              "image": "gpu-feature-discovery",
              "imagePullSecrets": [],
              "migStrategy": "single",
              "nodeSelector": {},
              "podSecurityContext": {},
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "sleepInterval": "60s",
              "tolerations": [],
              "version": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f"
            },
            "operator": {
              "defaultRuntime": "crio",
              "deployGFD": true,
              "validator": {
                "image": "cuda-sample",
                "imagePullSecrets": [],
                "repository": "nvcr.io/nvidia/k8s",
                "version": "sha256:2a30fe7e23067bc2c3f8f62a6867702a016af2b80b9f6ce861f3fea4dfd85bc2"
              }
            },
            "toolkit": {
              "affinity": {},
              "image": "container-toolkit",
              "imagePullSecrets": [],
              "nodeSelector": {},
              "podSecurityContext": {},
              "repository": "nvcr.io/nvidia/k8s",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:1cba398a04ec14a5dc3c6229e3674436fdcb574c329cff9ce5048099c8ff2fad"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:85938bd7029d5816889869378c47e9843f12431ba93e27f19c6e777f9ee5a11d",
      "bundle_path_digest": "sha256:85938bd7029d5816889869378c47e9843f12431ba93e27f19c6e777f9ee5a11d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-03-04T17:18:43.349000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://coreos.com/blog/introducing-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/kubernetes/openshift-on-gpu-install-guide/index.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.6.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-04T14:53:05.260000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:cde4d202a0773a9cd6d4e8266982eae0bfc358a49862fcfcfe8609e344acafa1",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:cde4d202a0773a9cd6d4e8266982eae0bfc358a49862fcfcfe8609e344acafa1",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:ced606933cd2210768ee8488b624c64ac0bdce6f05d9c4b4210e251370a14ff8",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:ced606933cd2210768ee8488b624c64ac0bdce6f05d9c4b4210e251370a14ff8",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:1cba398a04ec14a5dc3c6229e3674436fdcb574c329cff9ce5048099c8ff2fad",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:1cba398a04ec14a5dc3c6229e3674436fdcb574c329cff9ce5048099c8ff2fad",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:017d2e2a1bc410e9d2ac116683fc49a6f28e935cadee86e712cc147ea0239469",
          "image": "nvcr.io/nvidia/driver@sha256:017d2e2a1bc410e9d2ac116683fc49a6f28e935cadee86e712cc147ea0239469",
          "name": "driver-image"
        },
        {
          "digest": "sha256:ea353fe57628f4d3c3e1cda126455d02f2277e3ee92fa9da441d409d76b2ac92",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:ea353fe57628f4d3c3e1cda126455d02f2277e3ee92fa9da441d409d76b2ac92",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:2a30fe7e23067bc2c3f8f62a6867702a016af2b80b9f6ce861f3fea4dfd85bc2",
          "image": "nvcr.io/nvidia/k8s/cuda-sample@sha256:2a30fe7e23067bc2c3f8f62a6867702a016af2b80b9f6ce861f3fea4dfd85bc2",
          "name": "cuda-sample-image"
        },
        {
          "digest": "sha256:ed723a1339cddd75eb9f2be2f3476edf497a1b189c10c9bf9eb8da4a16a51a59",
          "image": "nvcr.io/nvidia/cuda@sha256:ed723a1339cddd75eb9f2be2f3476edf497a1b189c10c9bf9eb8da4a16a51a59",
          "name": "dcgm-init-container-image"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.6.0",
      "version_original": "1.6.0"
    },
    {
      "_id": "6041246cdbb14c0b8248b3b1",
      "alm_examples": [
        {
          "kind": "NastelNavigator",
          "metadata": {
            "name": "nastelnavigator"
          },
          "spec": {
            "cep-wgs": {
              "replicaCount": 1,
              "resources": {},
              "service": {
                "licenseName": "AutoPilotWMQ_MQM.lic"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "domain": {
              "replicaCount": 1,
              "resources": {},
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "dbPort": 3306,
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud",
              "type": "ClusterIP"
            },
            "navigator": {
              "replicaCount": 1,
              "resources": {}
            },
            "nsqcm": {
              "replicaCount": 1,
              "resources": {}
            },
            "wgs-mysql": {
              "replicaCount": 1,
              "resources": {},
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/navigator-operator-bundle@sha256:23ff7b07e342df2a21652e3d58cd0d02d8f699a05a1258e1926215caf6c59768",
      "bundle_path_digest": "sha256:23ff7b07e342df2a21652e3d58cd0d02d8f699a05a1258e1926215caf6c59768",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-03-04T18:18:20.157000+00:00",
      "csv_description": "The operator deploys Nastel Navigator component containers:\n  * Nastel Domain Server\n  * Nastel Workgroup Server\n  * MySQL database (MariaDB) instance\n  * Connection Manager\n  * Navigator WebApp\n\nin one go.\n\n[Nastel Navigator](https://www.nastel.com/nastel-navigator/) allows you to manage, audit and administrate instances of IBM MQ, EMS and\nKafka middleware.\n",
      "csv_display_name": "Nastel Navigator Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel Navigator",
      "csv_name": "nastel-navigator-operator.v1.100105.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:35:14.982000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "nastel-navigator-operator-certified",
      "provided_apis": [
        {
          "group": "navigator.nastel.com",
          "kind": "NastelNavigator",
          "plural": "nastelnavigators",
          "version": "v1alpha6"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:2cb7b4a30a658648083e42b47ef7f11c2b1c103393060321bfee708a7a5e6863",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:2cb7b4a30a658648083e42b47ef7f11c2b1c103393060321bfee708a7a5e6863",
          "name": "navigator-operator-2cb7b4a30a658648083e42b47ef7f11c2b1c103393060321bfee708a7a5e6863-annotation"
        },
        {
          "digest": "sha256:2cb7b4a30a658648083e42b47ef7f11c2b1c103393060321bfee708a7a5e6863",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:2cb7b4a30a658648083e42b47ef7f11c2b1c103393060321bfee708a7a5e6863",
          "name": "nastel-navigator-operator"
        },
        {
          "digest": "sha256:1b261239a0e3ed7a179d77baaa5f5b0f495aa3a950265f49ce02117e23691377",
          "image": "registry.connect.redhat.com/nastel/nastel-domain@sha256:1b261239a0e3ed7a179d77baaa5f5b0f495aa3a950265f49ce02117e23691377",
          "name": "domain"
        },
        {
          "digest": "sha256:0321c6bc819a79adc64c0ba449d4f7bb6d66994c80dba1880085557cd82f4b71",
          "image": "registry.connect.redhat.com/nastel/navigator-cm@sha256:0321c6bc819a79adc64c0ba449d4f7bb6d66994c80dba1880085557cd82f4b71",
          "name": "cm"
        },
        {
          "digest": "sha256:ebe44066c9e279ce4d3c43db2ebc799e0d07c89e4a31625a83a65eea6ab06d9f",
          "image": "registry.connect.redhat.com/nastel/navigator-wgs@sha256:ebe44066c9e279ce4d3c43db2ebc799e0d07c89e4a31625a83a65eea6ab06d9f",
          "name": "wgs"
        },
        {
          "digest": "sha256:454dde4c410c26110e2b82138ef4834f8f3dd137b41c269cca0426827f0c7a1a",
          "image": "registry.connect.redhat.com/nastel/navigator-ui@sha256:454dde4c410c26110e2b82138ef4834f8f3dd137b41c269cca0426827f0c7a1a",
          "name": "navigator"
        },
        {
          "digest": "sha256:fea36a643c08f86b56e735b064e72fc8151fba921a2596a4f0b493561e182337",
          "image": "registry.redhat.io/rhel8/mariadb-103@sha256:fea36a643c08f86b56e735b064e72fc8151fba921a2596a4f0b493561e182337",
          "name": "mysql"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.100105.6",
      "version_original": "1.100105.6"
    },
    {
      "_id": "60412b8b5a00810ecaf7bb21",
      "alm_examples": [
        {
          "kind": "OpenshiftArtifactoryHa",
          "metadata": {
            "name": "openshiftartifactoryha"
          },
          "spec": {
            "artifactory-ha": {
              "artifactory": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/artifactory-pro",
                  "tag": "7.15.3-1"
                },
                "joinKey": "OVERRIDE",
                "masterKey": "OVERRIDE",
                "node": {
                  "replicaCount": 2,
                  "waitForPrimaryStartup": {
                    "enabled": false
                  }
                },
                "uid": "1000721030"
              },
              "database": {
                "driver": "OVERRIDE",
                "password": "OVERRIDE",
                "type": "OVERRIDE",
                "url": "OVERRIDE",
                "user": "OVERRIDE"
              },
              "databaseUpgradeReady": true,
              "initContainerImage": "registry.connect.redhat.com/jfrog/init@sha256:b25f66d4bbc0c2e7a62d7ef2ce2c52289d65314e02e17a4ba9dfc2f29cb084ff",
              "nginx": {
                "gid": "1000720107",
                "http": {
                  "externalPort": 80,
                  "internalPort": 8080
                },
                "https": {
                  "externalPort": 443,
                  "internalPort": 8443
                },
                "image": {
                  "registry": "registry.redhat.io",
                  "repository": "rhel8/nginx-116",
                  "tag": "latest"
                },
                "service": {
                  "ssloffload": false
                },
                "tlsSecretName": "OVERRIDE",
                "uid": "1000720104"
              },
              "postgresql": {
                "enabled": false
              },
              "waitForDatabase": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jfrog/artifactory-operator-bundle@sha256:6a998ac372b5b63e022db600ca799c275c90c12f7b630c0fa588d1169ce850ef",
      "bundle_path_digest": "sha256:6a998ac372b5b63e022db600ca799c275c90c12f7b630c0fa588d1169ce850ef",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-03-04T18:48:43.511000+00:00",
      "csv_description": "## Overview\nOpenshift Operator to deploy JFrog Artifactory Enterprise into your Openshift cluster.\n## Security Context Constraints\nTo deploy this helm chart you will need to be a cluster admin w/ access to the anyuid scc and add the operator service account to the anyuid scc.\n```\noc adm policy add-scc-to-user anyuid -z artifactory-ha-operator -n openshift-operators\n```\nAdd the service account for the Artifactory chart to deploy successfully:\n``` oc adm policy add-scc-to-user anyuid -z openshiftartifactoryha-artifactory-ha -n artifactory ```\n## Usage\n\nAn external DB is required. The operator will not deploy a DB but will require you to specify the configuration values to connect to it.\n\nSearch for JFrog and click JFrog Artifactory Enterprise Operator to install.\n\nGo to the Installed Operators.\n\nWait for the JFrog Artifactory Enterprise Operator to complete the installation.\n\nOpen the Operator and click on the provided API: Artifactory HA.\n\nClick Create New Instance and provide the following parameters for your DB configuration:\n\n```\nDATABASE_TYPE\nDATABASE_DRIVER\nDATABASE_URL\nDATABASE_USER\nDATABASE_PASSWORD\n```\nMaster key and Join key must be supplied. To generate a new key for each run the command below:\n\n```\n# Create a key\nexport JOIN_KEY=$(openssl rand -hex 32)\necho ${JOIN_KEY}\n```\n\nTo use TLS you will need to first create a k8s tls secret to store your .crt and .key file into.\nThen supply the value of this k8s secret into the TLS_SECRET field.\n``` oc create secret tls my_tls_secret --cert=tls.crt --key=tls.key --namespace=my_namespace ```\nClick Create for Artifactory Enterprise to deploy into OpenShift and connect to it on the external IP exposed by the load balancer.\n# Create a route\nTo expose Artifactory from Openshift we recommend you create a new route in Openshift.\nYou can either use the oc command line tool or the Openshift web console to generate a new route.\nDepending upon where you terminate TLS you will need to either specify pass through or edge.\nCommand Line (Edge):\n``` oc create route edge --service=openshiftartifactory-ha --cert=tls.crt --key=tls.key --ca-cert=ca.crt --hostname=www.example.com ```\nOr for more information visit the official Openshift documentation on routes here:\nhttps://docs.openshift.com/container-platform/4.6/networking/routes/route-configuration.html\n\n",
      "csv_display_name": "JFrog Artifactory Enterprise Operator",
      "csv_metadata_description": "JFrog Artifactory Enterprise deploys Artifactory in a high availability environment across multiple pods",
      "csv_name": "artifactory-ha-operator.v1.1.9",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:36:43.361000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "openshiftartifactoryha-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "OpenshiftArtifactoryHa",
          "plural": "openshiftartifactoryhas",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:88f7183dd5d83da9e85ce1f7cf121c7953449644809f8abc5a0ab81f2b5d3781",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:88f7183dd5d83da9e85ce1f7cf121c7953449644809f8abc5a0ab81f2b5d3781",
          "name": "artifactory-operator-88f7183dd5d83da9e85ce1f7cf121c7953449644809f8abc5a0ab81f2b5d3781-annotation"
        },
        {
          "digest": "sha256:88f7183dd5d83da9e85ce1f7cf121c7953449644809f8abc5a0ab81f2b5d3781",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:88f7183dd5d83da9e85ce1f7cf121c7953449644809f8abc5a0ab81f2b5d3781",
          "name": "artifactory-ha-operator"
        },
        {
          "digest": "sha256:9f563f01beaca8573f2440bbe019fe050d836e875f549d0bef5e12258b78224c",
          "image": "registry.connect.redhat.com/jfrog/artifactory-pro@sha256:9f563f01beaca8573f2440bbe019fe050d836e875f549d0bef5e12258b78224c",
          "name": "artifactory_image_repository"
        },
        {
          "digest": "sha256:741a7f40737b3b54ac5ca1a1f15148ff07004b9df86db801e9f0f9b461e1ea72",
          "image": "registry.redhat.io/rhel8/nginx-116@sha256:741a7f40737b3b54ac5ca1a1f15148ff07004b9df86db801e9f0f9b461e1ea72",
          "name": "nginx_image_repository"
        },
        {
          "digest": "sha256:b25f66d4bbc0c2e7a62d7ef2ce2c52289d65314e02e17a4ba9dfc2f29cb084ff",
          "image": "registry.connect.redhat.com/jfrog/init@sha256:b25f66d4bbc0c2e7a62d7ef2ce2c52289d65314e02e17a4ba9dfc2f29cb084ff",
          "name": "init-b25f66d4bbc0c2e7a62d7ef2ce2c52289d65314e02e17a4ba9dfc2f29cb084ff-annotation"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.1.9",
      "version_original": "1.1.9"
    },
    {
      "_id": "60412b95122bd89307e008a8",
      "alm_examples": [
        {
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {
            "autopilot": {
              "enabled": false
            }
          }
        },
        {
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:fc7bc43b6a932255f45e1ef8b72f906919fdf222487ccf3227fd1b1840187b5c",
      "bundle_path_digest": "sha256:fc7bc43b6a932255f45e1ef8b72f906919fdf222487ccf3227fd1b1840187b5c",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-03-04T18:48:53.717000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.4.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-04T14:50:13.550000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:941286782f3cde05f5ddc40001416596693edc2f6c61638b74f7fcb0a817fe98",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:941286782f3cde05f5ddc40001416596693edc2f6c61638b74f7fcb0a817fe98",
          "name": "openstorage-operator-941286782f3cde05f5ddc40001416596693edc2f6c61638b74f7fcb0a817fe98-annotation"
        },
        {
          "digest": "sha256:941286782f3cde05f5ddc40001416596693edc2f6c61638b74f7fcb0a817fe98",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:941286782f3cde05f5ddc40001416596693edc2f6c61638b74f7fcb0a817fe98",
          "name": "portworx-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.4.3",
      "version_original": "1.4.3"
    },
    {
      "_id": "60412b97dbb14c0b8248b3bb",
      "alm_examples": [
        {
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {
            "autopilot": {
              "enabled": false
            }
          }
        },
        {
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:fc7bc43b6a932255f45e1ef8b72f906919fdf222487ccf3227fd1b1840187b5c",
      "bundle_path_digest": "sha256:fc7bc43b6a932255f45e1ef8b72f906919fdf222487ccf3227fd1b1840187b5c",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2021-03-04T18:48:55.039000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.4.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:43:27.678000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:941286782f3cde05f5ddc40001416596693edc2f6c61638b74f7fcb0a817fe98",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:941286782f3cde05f5ddc40001416596693edc2f6c61638b74f7fcb0a817fe98",
          "name": "openstorage-operator-941286782f3cde05f5ddc40001416596693edc2f6c61638b74f7fcb0a817fe98-annotation"
        },
        {
          "digest": "sha256:941286782f3cde05f5ddc40001416596693edc2f6c61638b74f7fcb0a817fe98",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:941286782f3cde05f5ddc40001416596693edc2f6c61638b74f7fcb0a817fe98",
          "name": "portworx-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.4.3",
      "version_original": "1.4.3"
    },
    {
      "_id": "60412bab6280a414853ebef3",
      "alm_examples": [
        {
          "kind": "SeldonDeployment",
          "metadata": {
            "labels": {
              "app": "seldon",
              "app.kubernetes.io/instance": "seldon1",
              "app.kubernetes.io/name": "seldon",
              "app.kubernetes.io/version": "v0.5"
            },
            "name": "seldon-model"
          },
          "spec": {
            "name": "test-deployment",
            "predictors": [
              {
                "componentSpecs": [
                  {
                    "spec": {
                      "containers": [
                        {
                          "image": "seldonio/mock_classifier:1.6.0",
                          "name": "classifier"
                        }
                      ]
                    }
                  }
                ],
                "graph": {
                  "children": [],
                  "name": "classifier",
                  "type": "MODEL"
                },
                "name": "example",
                "replicas": 1
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/seldonio/seldon-core-operator-bundle@sha256:01aed6c653b9cd10b942981218ae777c9326a7f18011e52e2fa125beafaa1268",
      "bundle_path_digest": "sha256:01aed6c653b9cd10b942981218ae777c9326a7f18011e52e2fa125beafaa1268",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-03-04T18:49:15.217000+00:00",
      "csv_description": "The Seldon operator enables for native operation of production machine learning workloads, including monitoring and operations of language-agnostic models with the benefits of real-time metrics and log analysis.\n   \n## Overview\nSeldon Core is an open source platform for deploying machine learning models on a Kubernetes cluster.\n\n* Deploy machine learning models in the cloud or on-premise.\n* Get metrics and ensure proper governance and compliance for your running machine learning models.\n* Create powerful inference graphs made up of multiple components.\n* Provide a consistent serving layer for models built using heterogeneous ML toolkits.\n\nYou can get started by following the guides in our documentation at https://docs.seldon.io/projects/seldon-core/en/latest/workflow/README.html\n",
      "csv_display_name": "Seldon Operator",
      "csv_metadata_description": "The Seldon operator for management, monitoring and operations of machine learning systems through the Seldon Engine. Once installed, the Seldon Operator provides multiple functions which facilitate the productisation, monitoring and maintenance of machine learning systems at scale.",
      "csv_name": "seldon-operator.v1.6.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:44:01.040000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "seldon-operator-certified",
      "provided_apis": [
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1"
        },
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1alpha2"
        },
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1alpha3"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:4b3554037789b7e833322ae267eafdbc7cc8639dbac414f05f3397006f1660c4",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-operator@sha256:4b3554037789b7e833322ae267eafdbc7cc8639dbac414f05f3397006f1660c4",
          "name": "seldon-core-operator-4b3554037789b7e833322ae267eafdbc7cc8639dbac414f05f3397006f1660c4-annotation"
        },
        {
          "digest": "sha256:4b3554037789b7e833322ae267eafdbc7cc8639dbac414f05f3397006f1660c4",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-operator@sha256:4b3554037789b7e833322ae267eafdbc7cc8639dbac414f05f3397006f1660c4",
          "name": "manager"
        },
        {
          "digest": "sha256:eae693e38a86b428682867b3b54cc3c02ee91c4c2c777e3cb1469e8ebb044ffb",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-executor@sha256:eae693e38a86b428682867b3b54cc3c02ee91c4c2c777e3cb1469e8ebb044ffb",
          "name": "executor"
        },
        {
          "digest": "sha256:d37dad7c0e66ae8d8a9bd31998d5f6320ca66720cb83ee22970fb721a6ab3238",
          "image": "registry.connect.redhat.com/seldonio/seldon-engine@sha256:d37dad7c0e66ae8d8a9bd31998d5f6320ca66720cb83ee22970fb721a6ab3238",
          "name": "engine"
        },
        {
          "digest": "sha256:2ab2776b3b54c09c558cc962659b5f4927c06a5d02fd169abf58ac6ddc8a8479",
          "image": "registry.connect.redhat.com/seldonio/storage-initializer@sha256:2ab2776b3b54c09c558cc962659b5f4927c06a5d02fd169abf58ac6ddc8a8479",
          "name": "storage_initializer"
        },
        {
          "digest": "sha256:1155a06aa8903e8436aaccbad64bd864a4a480b625466f6033dd08af7748d42a",
          "image": "registry.connect.redhat.com/seldonio/sklearnserver@sha256:1155a06aa8903e8436aaccbad64bd864a4a480b625466f6033dd08af7748d42a",
          "name": "sklearnserver"
        },
        {
          "digest": "sha256:967b68af58f555ef9c552b707a9c1776b32c680d92e827e4b3fc0526f03408e9",
          "image": "registry.connect.redhat.com/seldonio/xgboostserver@sha256:967b68af58f555ef9c552b707a9c1776b32c680d92e827e4b3fc0526f03408e9",
          "name": "xgboostserver"
        },
        {
          "digest": "sha256:2f75440a406740cfc3ae15309b207720b539f647a2aacad79b51c1b5957aa598",
          "image": "registry.connect.redhat.com/seldonio/mlflowserver@sha256:2f75440a406740cfc3ae15309b207720b539f647a2aacad79b51c1b5957aa598",
          "name": "mlflowserver"
        },
        {
          "digest": "sha256:b118f6da8495425aaaeadf93c0e1f9d374df6819591972cea5683075e9f76054",
          "image": "registry.connect.redhat.com/seldonio/tfproxy@sha256:b118f6da8495425aaaeadf93c0e1f9d374df6819591972cea5683075e9f76054",
          "name": "tfproxy"
        },
        {
          "digest": "sha256:1dc53edc5c8d1b151782f8386c0770d0358c6397eaf42ec55ebd18f331c5ef9e",
          "image": "registry.connect.redhat.com/seldonio/tensorflow-serving@sha256:1dc53edc5c8d1b151782f8386c0770d0358c6397eaf42ec55ebd18f331c5ef9e",
          "name": "tensorflow"
        },
        {
          "digest": "sha256:21e12fe1f4ad29700b6bc3a094bce5303fe28e9b29bd3436c716c53c1a0f8699",
          "image": "registry.connect.redhat.com/seldonio/alibiexplainer@sha256:21e12fe1f4ad29700b6bc3a094bce5303fe28e9b29bd3436c716c53c1a0f8699",
          "name": "explainer"
        },
        {
          "digest": "sha256:efbfbd3709b3ccb738c0cf471101d13c1aaa6ee873614e4913b2360136ab1911",
          "image": "registry.connect.redhat.com/seldonio/mock-classifier@sha256:efbfbd3709b3ccb738c0cf471101d13c1aaa6ee873614e4913b2360136ab1911",
          "name": "mock_classifier"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.6.0",
      "version_original": "1.6.0"
    },
    {
      "_id": "60412bbd5a00810ecaf7bb22",
      "alm_examples": [
        {
          "kind": "VProtectDBServerNode",
          "metadata": {
            "name": "example-vprotectdbservernode"
          },
          "spec": {
            "imagePullSecretsName": "",
            "initcontainerimage": "registry.connect.redhat.com/storware/vprotect-init@sha256:694be1eccbc2abc8ddbf1216f940ed24e472610c91d6f2c32cf30a05c09128f2",
            "mariadb": {
              "DBImage": "registry.redhat.io/rhel8/mariadb-103",
              "MYSQL_PASSWORD": "vprotect",
              "MYSQL_USER": "vprotect",
              "cpu": "300m",
              "memory": "512Mi",
              "port": 3306,
              "pvcStorageCapacity": "20Gi",
              "replicaCount": 1,
              "serviceName": "mariadb",
              "storageClassName": "ibmc-block-gold"
            },
            "node": {
              "containerPort": 15700,
              "cpu": "500m",
              "image": "registry.connect.redhat.com/storware/vprotect-node@sha256:f87aae0422c2550aef30ae9610b40fd6341b883cdab69068180b450c3d3069be",
              "memory": "1Gi",
              "onlyStagingSpace": {
                "enable": true,
                "stagingCapacity": "20Gi",
                "storageClass": "ibmc-file-retain-bronze"
              },
              "provisionNode": true,
              "replicaCount": 1,
              "separateStagingAndBackupSpace": {
                "backupTo": {
                  "file": {
                    "enable": false,
                    "stagingCapacity": "20Gi",
                    "storageClass": "ibmc-file-retain-bronze"
                  },
                  "initializedBlock": {
                    "enable": false,
                    "stagingCapacity": "20Gi",
                    "storageClass": "ibmc-block-retain-bronze"
                  },
                  "rawBlock": {
                    "backupCapacity": "20Gi",
                    "enable": false
                  }
                },
                "stagingCapacity": "20Gi",
                "stagingStorageClass": "ibmc-file-retain-bronze"
              },
              "serviceName": "vprotect-node",
              "singleDeduplicatedSpace": {
                "capacity": "20Gi",
                "enable": false
              }
            },
            "server": {
              "image": "registry.connect.redhat.com/storware/vprotect-server@sha256:25422d5fffc9d24b9b49fc23e65a9a8c1feb45a084760feca5bbcffd443b8483",
              "ingress": {
                "enabled": false,
                "subDomain": "my-cluster.containers.appdomain.cloud"
              },
              "replicaCount": 1,
              "routes": {
                "insecureRoute": {
                  "enabled": false,
                  "name": "vprotect-server-http-route"
                },
                "secureRoute": {
                  "enabled": false,
                  "name": "vprotect-server-https-route"
                }
              },
              "serviceName": "vprotect-server"
            },
            "useImagePullSecret": false
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/storware/vprotect-operator-bundle@sha256:002c65bdfb18012ca8d860bc3877d19dabbd81cf32705003c35e96c5a3c76ba3",
      "bundle_path_digest": "sha256:002c65bdfb18012ca8d860bc3877d19dabbd81cf32705003c35e96c5a3c76ba3",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-03-04T18:49:33.349000+00:00",
      "csv_description": "The operator allows you to deploy:\n* MariaDB\n* vProtect Server\n* vProtect Node\nin one go.\n\nThe operator can monitor to see if the components are present. If they're not,\nthe operator will install the  MariaDB, vProtect Server and vProtect Node correctly without any user interaction!\n\nAll you have to do is install the operator and create an instance of MariaDB, vProtect Server and vProtect Node by creating a custom resource of type VProtectDBServerNode.\n\n\n**How to get the Application Images from registry?**\n-----\n\n- First Login to redhat catalogue webpage using your credentials.\n- Search for the Operator.\n- Click on the Operator.\n- There is a description that redirects you (upon clicking) to page that explains how to create service accounts.\n- Create a Service Account. Refer page : <https://access.redhat.com/terms-based-registry/#/accounts>\n- Once a service account is created , you can click on it and then navigate to tab Openshift Secret to get the yaml file for your ImagePullSecret.\n- Download the Secret. Create the secret using command\n\n```sh\n    kubectl create -f <secretfile.yml> --namespace=NAMESPACEHERE\n```\n- Use the name of the created secret in the CR file.\n- For all the application images we would need the secret name to be passed in the CR Spec.\n\n\n**CR Spec Details**\n----------------------\n**General Specs**\n--------\n\n  Spec                       |            Details\n-----------------------------|-----------------------------\nuseImagePullSecret:          | True if using a Secret to pull application images\nimagePullSecretsName:        | Secret name to pull images from private repository\ninitcontainerimage:          | Init container image repository URL\n\n\n**MariaDB**\n--------\n\n  Spec             |            Details\n-------------------|-----------------------------\nDBImage:           | The URL to DB image\nreplicaCount:      | Number of replicas for DB\ncpu:               | CPU configuration\nmemory:            | Memory configuration\nport:              | DB Port number\nserviceName:       | Service name for DB\npvcStorageCapacity:| Volume Capacity\nstorageClassName:  | Storage Class Name of the Volume to be claimed\nMYSQL_PASSWORD:    | DB User Password\nMYSQL_USER:        | DB User\n\n\n**vProtect Server**\n--------\n\n  Spec                       |            Details\n-----------------------------|-----------------------------\nreplicaCount:                | Number of replicas for vProtect Server\nimage:                       | vProtect Server Image URL\nserviceName:                 | vProtect Server Service name\nserviceType:                 | vProtect Server Service Type (Example : NodePort, ClusterIP etc)\ningress.enabled:             | Set to true if you need to create an Ingress\ningress.subDomain:           | Cluster Subdomain\nroutes.insecureRoute.enabled:| Set to true if you want to create an insecure route\nroutes.insecureRoute.name:   | Insecure Route name\nroutes.secureRoute.enabled:  | Set to true if you want to create an secure route\nroutes.secureRoute.name:    | Secure Route name\n\n\n**vProtect Node**\n--------\n\n  Spec                       |            Details\n-----------------------------|-----------------------------\nprovisionNode:               | Set to true if you want to provision a vProtect Node\nreplicaCount:                | Number of replicas for vProtect Node\nimage:                       | vProtect Node Image URL\ncpu:                         | CPU configuration\nmemory:                      | Memory Configuration\ncontainerPort:               | Node Container port\nserviceName:                 | Node Service Name\n\n**vProtect Node Staging Space and Backup Options** :\n--------\n  **For an instance of vProtect Node only one option can be set to true.**\n\n  Staging and Backup Space Option |            Details\n----------------------------------|-----------------------------\n**onlyStagingSpace:**             | If set to true (onlyStagingSpace.enable: true), this will create a staging space with a file type of volume mounted at /vprotect-data.\n                                  | User should provide onlyStagingSpace.stagingCapacity and onlyStagingSpace.stagingCapacity if set to true.\n                                  |\n**singleDeduplicatedSpace:**      | If set to true (singleDeduplicatedSpace.enable: true) , this will create:\n                                  | 1) emptyDir: {} at /vprotect-data\n                                  | 2) RAW Block available at /dev/sda\n                                  |\n**separateStagingAndBackupSpace:**| This allows user to choose separate space for staging and backup.\n                                  | **Staging** : A Staging space is created with a file type of volume mounted at /vprotect-data.\n                                  |               User should provide separateStagingAndBackupSpace.stagingCapacity and\n                                  |               separateStagingAndBackupSpace.stagingStorageClass of file type.\n                                  |\n                                  | **Backup**: User can backup to any one of the below options:\n                                  | 1) **RAW Block** : If set to true separateStagingAndBackupSpace.backupTo.rawBlock\n                                  |                    Creates a RAW Block available at /dev/sda.\n                                  |                    User should provide separateStagingAndBackupSpace.backupTo.rawBlock.backupCapacity\n                                  | 2) **File volume**: If set to true separateStagingAndBackupSpace.backupTo.file\n                                  |                    User should provide separateStagingAndBackupSpace.backupTo.file.backupCapacity\n                                  |                    User should provide separateStagingAndBackupSpace.backupTo.file.storageClass of type file\n                                  |                    User should provide separateStagingAndBackupSpace.backupTo.file.backupMountPath to mount the volume.\n                                  |                    If mount path is kept blank then volume will be mounted to default location - /vprotect_data/backupsDestination\n                                  | 3) **Initialized Block Volume**: If set to true separateStagingAndBackupSpace.backupTo.initializedBlock\n                                  |                    User should provide separateStagingAndBackupSpace.backupTo.initializedBlock.backupCapacity\n                                  |                    User should provide separateStagingAndBackupSpace.backupTo.initializedBlock.storageClass of type block\n                                  |                    User should provide separateStagingAndBackupSpace.backupTo.initializedBlock.backupMountPath to mount the volume\n                                  |                    If mount path is kept blank then volume will be mounted to default location - /vprotect_data/backupsDestination\n                                  |\n**Only emptyDir: {} Volume**      | If none of the above options are set to true , operator creates an emptyDir: {} at /vprotect-data\n\n**Deployment on Kubernetes:**\n-----------------------\n\n```sh\n# Let the cluster know about our new custom resource VProtectDBServerNode\nkubectl create -f deploy/crds/vprotect.storware.com_vprotectdbservernodes_crd.yaml\n# Create the 'vProtect' namespace\nkubectl apply -f deploy/namespace.yaml\n# Create necessary user and permissions to make things happen\nkubectl create -f deploy/service_account.yaml\nkubectl create -f deploy/role.yaml\nkubectl create -f deploy/role_binding.yaml\nkubectl create -f deploy/clusterrole.yaml\nkubectl create -f deploy/clusterrole_binding.yaml\n# Deploy the operator container as a pod\nkubectl apply -f deploy/operator.yaml\nkubectl create -f deploy/crds/vprotect.storware.com_v1alpha1_vprotectdbservernode_cr.yaml\n```\n",
      "csv_display_name": "vProtect Operator",
      "csv_metadata_description": "Storware vProtect is an enterprise backup solution for virtual environments. It facilitates the implementation of virtual machine backup running on every major virtualization, container or cloud platform. It supports multiple backup providers:  file system-based, object storage or enterprise grade backup providers.",
      "csv_name": "vprotect-operator.v0.0.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:45:53.851000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "vprotect-operator",
      "provided_apis": [
        {
          "group": "vprotect.storware.com",
          "kind": "VProtectDBServerNode",
          "plural": "vprotectdbservernodes",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:442a73a6bfa760430a4a6561f0c68fb783983e0f2f6dee2b3e9b010d76226430",
          "image": "registry.connect.redhat.com/storware/vprotect-operator@sha256:442a73a6bfa760430a4a6561f0c68fb783983e0f2f6dee2b3e9b010d76226430",
          "name": "vprotect-operator-442a73a6bfa760430a4a6561f0c68fb783983e0f2f6dee2b3e9b010d76226430-annotation"
        },
        {
          "digest": "sha256:442a73a6bfa760430a4a6561f0c68fb783983e0f2f6dee2b3e9b010d76226430",
          "image": "registry.connect.redhat.com/storware/vprotect-operator@sha256:442a73a6bfa760430a4a6561f0c68fb783983e0f2f6dee2b3e9b010d76226430",
          "name": "vprotect-operator"
        },
        {
          "digest": "sha256:6934718d927eafa76117e810ba1f79ef2c909fbd57c810484b23367cc52ceb46",
          "image": "registry.redhat.io/rhel8/mariadb-103@sha256:6934718d927eafa76117e810ba1f79ef2c909fbd57c810484b23367cc52ceb46",
          "name": "db"
        },
        {
          "digest": "sha256:694be1eccbc2abc8ddbf1216f940ed24e472610c91d6f2c32cf30a05c09128f2",
          "image": "registry.connect.redhat.com/storware/vprotect-init@sha256:694be1eccbc2abc8ddbf1216f940ed24e472610c91d6f2c32cf30a05c09128f2",
          "name": "initcontainer"
        },
        {
          "digest": "sha256:25422d5fffc9d24b9b49fc23e65a9a8c1feb45a084760feca5bbcffd443b8483",
          "image": "registry.connect.redhat.com/storware/vprotect-server@sha256:25422d5fffc9d24b9b49fc23e65a9a8c1feb45a084760feca5bbcffd443b8483",
          "name": "server"
        },
        {
          "digest": "sha256:f87aae0422c2550aef30ae9610b40fd6341b883cdab69068180b450c3d3069be",
          "image": "registry.connect.redhat.com/storware/vprotect-node@sha256:f87aae0422c2550aef30ae9610b40fd6341b883cdab69068180b450c3d3069be",
          "name": "node"
        },
        {
          "digest": "sha256:f87aae0422c2550aef30ae9610b40fd6341b883cdab69068180b450c3d3069be",
          "image": "registry.connect.redhat.com/storware/vprotect-node@sha256:f87aae0422c2550aef30ae9610b40fd6341b883cdab69068180b450c3d3069be",
          "name": "vprotect-node-f87aae0422c2550aef30ae9610b40fd6341b883cdab69068180b450c3d3069be-annotation"
        },
        {
          "digest": "sha256:25422d5fffc9d24b9b49fc23e65a9a8c1feb45a084760feca5bbcffd443b8483",
          "image": "registry.connect.redhat.com/storware/vprotect-server@sha256:25422d5fffc9d24b9b49fc23e65a9a8c1feb45a084760feca5bbcffd443b8483",
          "name": "vprotect-server-25422d5fffc9d24b9b49fc23e65a9a8c1feb45a084760feca5bbcffd443b8483-annotation"
        },
        {
          "digest": "sha256:694be1eccbc2abc8ddbf1216f940ed24e472610c91d6f2c32cf30a05c09128f2",
          "image": "registry.connect.redhat.com/storware/vprotect-init@sha256:694be1eccbc2abc8ddbf1216f940ed24e472610c91d6f2c32cf30a05c09128f2",
          "name": "vprotect-init-694be1eccbc2abc8ddbf1216f940ed24e472610c91d6f2c32cf30a05c09128f2-annotation"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.0.6",
      "version_original": "0.0.6"
    },
    {
      "_id": "604139cb8985fcd889e7885f",
      "alm_examples": [
        {
          "kind": "NastelNavigator",
          "metadata": {
            "name": "nastelnavigator"
          },
          "spec": {
            "cep-wgs": {
              "replicaCount": 1,
              "resources": {},
              "service": {
                "licenseName": "AutoPilotWMQ_MQM.lic"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "domain": {
              "replicaCount": 1,
              "resources": {},
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "dbPort": 3306,
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud",
              "type": "ClusterIP"
            },
            "navigator": {
              "replicaCount": 1,
              "resources": {}
            },
            "nsqcm": {
              "replicaCount": 1,
              "resources": {}
            },
            "wgs-mysql": {
              "replicaCount": 1,
              "resources": {},
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/navigator-operator-bundle@sha256:23ff7b07e342df2a21652e3d58cd0d02d8f699a05a1258e1926215caf6c59768",
      "bundle_path_digest": "sha256:23ff7b07e342df2a21652e3d58cd0d02d8f699a05a1258e1926215caf6c59768",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-03-04T19:49:31.154000+00:00",
      "csv_description": "The operator deploys Nastel Navigator component containers:\n  * Nastel Domain Server\n  * Nastel Workgroup Server\n  * MySQL database (MariaDB) instance\n  * Connection Manager\n  * Navigator WebApp\n\nin one go.\n\n[Nastel Navigator](https://www.nastel.com/nastel-navigator/) allows you to manage, audit and administrate instances of IBM MQ, EMS and\nKafka middleware.\n",
      "csv_display_name": "Nastel Navigator Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel Navigator",
      "csv_name": "nastel-navigator-operator.v1.100105.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:21:21.409000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "nastel-navigator-operator-certified",
      "provided_apis": [
        {
          "group": "navigator.nastel.com",
          "kind": "NastelNavigator",
          "plural": "nastelnavigators",
          "version": "v1alpha6"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:2cb7b4a30a658648083e42b47ef7f11c2b1c103393060321bfee708a7a5e6863",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:2cb7b4a30a658648083e42b47ef7f11c2b1c103393060321bfee708a7a5e6863",
          "name": "navigator-operator-2cb7b4a30a658648083e42b47ef7f11c2b1c103393060321bfee708a7a5e6863-annotation"
        },
        {
          "digest": "sha256:2cb7b4a30a658648083e42b47ef7f11c2b1c103393060321bfee708a7a5e6863",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:2cb7b4a30a658648083e42b47ef7f11c2b1c103393060321bfee708a7a5e6863",
          "name": "nastel-navigator-operator"
        },
        {
          "digest": "sha256:1b261239a0e3ed7a179d77baaa5f5b0f495aa3a950265f49ce02117e23691377",
          "image": "registry.connect.redhat.com/nastel/nastel-domain@sha256:1b261239a0e3ed7a179d77baaa5f5b0f495aa3a950265f49ce02117e23691377",
          "name": "domain"
        },
        {
          "digest": "sha256:0321c6bc819a79adc64c0ba449d4f7bb6d66994c80dba1880085557cd82f4b71",
          "image": "registry.connect.redhat.com/nastel/navigator-cm@sha256:0321c6bc819a79adc64c0ba449d4f7bb6d66994c80dba1880085557cd82f4b71",
          "name": "cm"
        },
        {
          "digest": "sha256:ebe44066c9e279ce4d3c43db2ebc799e0d07c89e4a31625a83a65eea6ab06d9f",
          "image": "registry.connect.redhat.com/nastel/navigator-wgs@sha256:ebe44066c9e279ce4d3c43db2ebc799e0d07c89e4a31625a83a65eea6ab06d9f",
          "name": "wgs"
        },
        {
          "digest": "sha256:454dde4c410c26110e2b82138ef4834f8f3dd137b41c269cca0426827f0c7a1a",
          "image": "registry.connect.redhat.com/nastel/navigator-ui@sha256:454dde4c410c26110e2b82138ef4834f8f3dd137b41c269cca0426827f0c7a1a",
          "name": "navigator"
        },
        {
          "digest": "sha256:fea36a643c08f86b56e735b064e72fc8151fba921a2596a4f0b493561e182337",
          "image": "registry.redhat.io/rhel8/mariadb-103@sha256:fea36a643c08f86b56e735b064e72fc8151fba921a2596a4f0b493561e182337",
          "name": "mysql"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.100105.6",
      "version_original": "1.100105.6"
    },
    {
      "_id": "604147df5a00810ecaf7bb43",
      "alm_examples": [
        {
          "kind": "SeldonDeployment",
          "metadata": {
            "labels": {
              "app": "seldon",
              "app.kubernetes.io/instance": "seldon1",
              "app.kubernetes.io/name": "seldon",
              "app.kubernetes.io/version": "v0.5"
            },
            "name": "seldon-model"
          },
          "spec": {
            "name": "test-deployment",
            "predictors": [
              {
                "componentSpecs": [
                  {
                    "spec": {
                      "containers": [
                        {
                          "image": "seldonio/mock_classifier:1.6.0",
                          "name": "classifier"
                        }
                      ]
                    }
                  }
                ],
                "graph": {
                  "children": [],
                  "name": "classifier",
                  "type": "MODEL"
                },
                "name": "example",
                "replicas": 1
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/seldonio/seldon-core-operator-bundle@sha256:01aed6c653b9cd10b942981218ae777c9326a7f18011e52e2fa125beafaa1268",
      "bundle_path_digest": "sha256:01aed6c653b9cd10b942981218ae777c9326a7f18011e52e2fa125beafaa1268",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-03-04T20:49:35.722000+00:00",
      "csv_description": "The Seldon operator enables for native operation of production machine learning workloads, including monitoring and operations of language-agnostic models with the benefits of real-time metrics and log analysis.\n   \n## Overview\nSeldon Core is an open source platform for deploying machine learning models on a Kubernetes cluster.\n\n* Deploy machine learning models in the cloud or on-premise.\n* Get metrics and ensure proper governance and compliance for your running machine learning models.\n* Create powerful inference graphs made up of multiple components.\n* Provide a consistent serving layer for models built using heterogeneous ML toolkits.\n\nYou can get started by following the guides in our documentation at https://docs.seldon.io/projects/seldon-core/en/latest/workflow/README.html\n",
      "csv_display_name": "Seldon Operator",
      "csv_metadata_description": "The Seldon operator for management, monitoring and operations of machine learning systems through the Seldon Engine. Once installed, the Seldon Operator provides multiple functions which facilitate the productisation, monitoring and maintenance of machine learning systems at scale.",
      "csv_name": "seldon-operator.v1.6.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:56:52.470000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "seldon-operator-certified",
      "provided_apis": [
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1"
        },
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1alpha2"
        },
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1alpha3"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:4b3554037789b7e833322ae267eafdbc7cc8639dbac414f05f3397006f1660c4",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-operator@sha256:4b3554037789b7e833322ae267eafdbc7cc8639dbac414f05f3397006f1660c4",
          "name": "seldon-core-operator-4b3554037789b7e833322ae267eafdbc7cc8639dbac414f05f3397006f1660c4-annotation"
        },
        {
          "digest": "sha256:4b3554037789b7e833322ae267eafdbc7cc8639dbac414f05f3397006f1660c4",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-operator@sha256:4b3554037789b7e833322ae267eafdbc7cc8639dbac414f05f3397006f1660c4",
          "name": "manager"
        },
        {
          "digest": "sha256:eae693e38a86b428682867b3b54cc3c02ee91c4c2c777e3cb1469e8ebb044ffb",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-executor@sha256:eae693e38a86b428682867b3b54cc3c02ee91c4c2c777e3cb1469e8ebb044ffb",
          "name": "executor"
        },
        {
          "digest": "sha256:d37dad7c0e66ae8d8a9bd31998d5f6320ca66720cb83ee22970fb721a6ab3238",
          "image": "registry.connect.redhat.com/seldonio/seldon-engine@sha256:d37dad7c0e66ae8d8a9bd31998d5f6320ca66720cb83ee22970fb721a6ab3238",
          "name": "engine"
        },
        {
          "digest": "sha256:2ab2776b3b54c09c558cc962659b5f4927c06a5d02fd169abf58ac6ddc8a8479",
          "image": "registry.connect.redhat.com/seldonio/storage-initializer@sha256:2ab2776b3b54c09c558cc962659b5f4927c06a5d02fd169abf58ac6ddc8a8479",
          "name": "storage_initializer"
        },
        {
          "digest": "sha256:1155a06aa8903e8436aaccbad64bd864a4a480b625466f6033dd08af7748d42a",
          "image": "registry.connect.redhat.com/seldonio/sklearnserver@sha256:1155a06aa8903e8436aaccbad64bd864a4a480b625466f6033dd08af7748d42a",
          "name": "sklearnserver"
        },
        {
          "digest": "sha256:967b68af58f555ef9c552b707a9c1776b32c680d92e827e4b3fc0526f03408e9",
          "image": "registry.connect.redhat.com/seldonio/xgboostserver@sha256:967b68af58f555ef9c552b707a9c1776b32c680d92e827e4b3fc0526f03408e9",
          "name": "xgboostserver"
        },
        {
          "digest": "sha256:2f75440a406740cfc3ae15309b207720b539f647a2aacad79b51c1b5957aa598",
          "image": "registry.connect.redhat.com/seldonio/mlflowserver@sha256:2f75440a406740cfc3ae15309b207720b539f647a2aacad79b51c1b5957aa598",
          "name": "mlflowserver"
        },
        {
          "digest": "sha256:b118f6da8495425aaaeadf93c0e1f9d374df6819591972cea5683075e9f76054",
          "image": "registry.connect.redhat.com/seldonio/tfproxy@sha256:b118f6da8495425aaaeadf93c0e1f9d374df6819591972cea5683075e9f76054",
          "name": "tfproxy"
        },
        {
          "digest": "sha256:1dc53edc5c8d1b151782f8386c0770d0358c6397eaf42ec55ebd18f331c5ef9e",
          "image": "registry.connect.redhat.com/seldonio/tensorflow-serving@sha256:1dc53edc5c8d1b151782f8386c0770d0358c6397eaf42ec55ebd18f331c5ef9e",
          "name": "tensorflow"
        },
        {
          "digest": "sha256:21e12fe1f4ad29700b6bc3a094bce5303fe28e9b29bd3436c716c53c1a0f8699",
          "image": "registry.connect.redhat.com/seldonio/alibiexplainer@sha256:21e12fe1f4ad29700b6bc3a094bce5303fe28e9b29bd3436c716c53c1a0f8699",
          "name": "explainer"
        },
        {
          "digest": "sha256:efbfbd3709b3ccb738c0cf471101d13c1aaa6ee873614e4913b2360136ab1911",
          "image": "registry.connect.redhat.com/seldonio/mock-classifier@sha256:efbfbd3709b3ccb738c0cf471101d13c1aaa6ee873614e4913b2360136ab1911",
          "name": "mock_classifier"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.6.0",
      "version_original": "1.6.0"
    },
    {
      "_id": "6045f2e46280a414853ec39b",
      "alm_examples": [
        {
          "kind": "License",
          "metadata": {
            "name": "triliovault-license"
          },
          "spec": {
            "key": "xLkNDgwKD3jafZJNb8IwDIbv+RWRdo6Uj5a2SD1MwKRtjE0bsLOTuiISpFWaovHv145NQy3iPcb249d27j6xoE/tnkpJOZ/KaBrFVHLJycwjBFu5OQSk/8r7IOMJk5IsCttn0IHyB4+49hb2BEywR6SjjOBbJHtr0DW4Rd9cUnJJXsC6gA6cwcVXbf3pbKLvrRhPmersVYca3GlEfsdiB4Gs2oNG/1pumo5+EWaCfKA/on+cDysh5gWokjOjU8WEQGBaQMSM0DrDiTKTpCterOgV5d07+wXIm4Dleehh+3y9vd8s138MdduEqWq8YsLBAZsaDBbkudW4Gc1Ic56ITHMwrEwTwSIlY5bqLGGGx1kW6QQzUZKfncPotJfrf2u92UGDN37HDDorNgxPlAtOe3d0VRXYfAMj8ZzrMEYCIQCVaI/QJN+2M/QJWimd28dWOi/6o5s5I5+z30JrmzwGnQIhAKrSu8NeUIqXGEBTQvPKe3n2U0LNPht/ZAQIs5CZNeWlX02gk"
          }
        },
        {
          "kind": "Target",
          "metadata": {
            "labels": {
              "app": "triliovault"
            },
            "name": "triliovault-target"
          },
          "spec": {
            "nfsCredentials": {
              "nfsExport": "00.00.00.00:/src/nfs/kubedata",
              "nfsOptions": "nfsvers=4"
            },
            "type": "NFS",
            "vendor": "Other"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/trilio/r-3445381-bundle@sha256:d27785567c5e0db70d99ed7e220a5a58e6466384cd6103849ff0dea6bcfe5c57",
      "bundle_path_digest": "sha256:d27785567c5e0db70d99ed7e220a5a58e6466384cd6103849ff0dea6bcfe5c57",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "cluster",
      "creation_date": "2021-03-08T09:48:20.093000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-cluster.v2.0.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:39:14.778000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "k8s-triliovault",
      "provided_apis": [],
      "related_images": [
        {
          "digest": "sha256:15f9fb9a10efc823e1510b168f393c7b3131c178722a79271d169af96abd015f",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:15f9fb9a10efc823e1510b168f393c7b3131c178722a79271d169af96abd015f",
          "name": "control-plane-15f9fb9a10efc823e1510b168f393c7b3131c178722a79271d169af96abd015f-annotation"
        },
        {
          "digest": "sha256:15f9fb9a10efc823e1510b168f393c7b3131c178722a79271d169af96abd015f",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:15f9fb9a10efc823e1510b168f393c7b3131c178722a79271d169af96abd015f",
          "name": "k8s-triliovault-control-plane"
        },
        {
          "digest": "sha256:45d7e9d6532c45383f7ddde956d9b6602431e0aebb55341ae0b70a5e15af80fa",
          "image": "registry.connect.redhat.com/trilio/trilio-admission-webhook@sha256:45d7e9d6532c45383f7ddde956d9b6602431e0aebb55341ae0b70a5e15af80fa",
          "name": "triliovault-admission-webhook"
        },
        {
          "digest": "sha256:443ae1da2c4243d7950aa3e7d8d6829c6c49cbe18f0503482ffdf1177ad402ff",
          "image": "registry.connect.redhat.com/trilio/exporter@sha256:443ae1da2c4243d7950aa3e7d8d6829c6c49cbe18f0503482ffdf1177ad402ff",
          "name": "triliovault-exporter"
        },
        {
          "digest": "sha256:61df15c402a06bc6a1b25df5b731cf31c2eb0fd02f07d906b0ba6da0122385eb",
          "image": "registry.connect.redhat.com/trilio/web@sha256:61df15c402a06bc6a1b25df5b731cf31c2eb0fd02f07d906b0ba6da0122385eb",
          "name": "triliovault-web"
        },
        {
          "digest": "sha256:dd7426da65c2d16ad6373cee40118ecf184c95d150d9770f4c881e8f3886c5e6",
          "image": "registry.connect.redhat.com/trilio/web-backend@sha256:dd7426da65c2d16ad6373cee40118ecf184c95d150d9770f4c881e8f3886c5e6",
          "name": "triliovault-backend"
        },
        {
          "digest": "sha256:876f99e094e1cb1e2c82062063271f40f91a231efbad9395e4cc8c1c9474cff3",
          "image": "registry.connect.redhat.com/trilio/control-plane-init@sha256:876f99e094e1cb1e2c82062063271f40f91a231efbad9395e4cc8c1c9474cff3",
          "name": "control-plane-init"
        },
        {
          "digest": "sha256:b4a565dad5973560787e1921851fa0d93c421e0301820521edf0c0062dbf7e12",
          "image": "registry.connect.redhat.com/trilio/trilio-webhook-init@sha256:b4a565dad5973560787e1921851fa0d93c421e0301820521edf0c0062dbf7e12",
          "name": "webhook-init"
        },
        {
          "digest": "sha256:b1c435a51bdb89dcbf6152c608a35546238f01d2e926f786a8d5193e1e769e1f",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:b1c435a51bdb89dcbf6152c608a35546238f01d2e926f786a8d5193e1e769e1f",
          "name": "metamover"
        },
        {
          "digest": "sha256:08e9846430811df28f49ca07948dd452c7cdf3c8c6677098f5ecdbd78a885e96",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:08e9846430811df28f49ca07948dd452c7cdf3c8c6677098f5ecdbd78a885e96",
          "name": "datamover"
        },
        {
          "digest": "sha256:fb91dfa73078a1f609dab7d98ca9595d9cc31a2c3f634f3720afd67ce66e9810",
          "image": "registry.connect.redhat.com/trilio/datastore-attacher@sha256:fb91dfa73078a1f609dab7d98ca9595d9cc31a2c3f634f3720afd67ce66e9810",
          "name": "datastore_attacher"
        },
        {
          "digest": "sha256:555c2a5ea7f53b0b8a7e5146461927df26f43462bde5f2bf6f708d95d5ef1215",
          "image": "registry.connect.redhat.com/trilio/backup-scheduler@sha256:555c2a5ea7f53b0b8a7e5146461927df26f43462bde5f2bf6f708d95d5ef1215",
          "name": "backup_scheduler"
        },
        {
          "digest": "sha256:2a8d0acb05465fbde28c2c4f4807fbefdc787e198d9700a39c812fdd1d68f952",
          "image": "registry.connect.redhat.com/trilio/backup-cleaner@sha256:2a8d0acb05465fbde28c2c4f4807fbefdc787e198d9700a39c812fdd1d68f952",
          "name": "backup_cleaner"
        },
        {
          "digest": "sha256:2a277d07e7b11ddeb971c5a60e2977e8eeaac4b1ccef941e7ec1d940f973110e",
          "image": "registry.connect.redhat.com/trilio/backup-retention@sha256:2a277d07e7b11ddeb971c5a60e2977e8eeaac4b1ccef941e7ec1d940f973110e",
          "name": "backup_retention"
        },
        {
          "digest": "sha256:7bc80d3d1b8a63fbd17fe594889923aeae12e72029ee8eb91dd0ed407ae54ec5",
          "image": "registry.connect.redhat.com/trilio/target-browser@sha256:7bc80d3d1b8a63fbd17fe594889923aeae12e72029ee8eb91dd0ed407ae54ec5",
          "name": "target_browser"
        },
        {
          "digest": "sha256:0dc1454d82b448c5aeb9a45dc4920d00639cd028d1cb657d476a8db17af1019e",
          "image": "registry.connect.redhat.com/trilio/hook-executor@sha256:0dc1454d82b448c5aeb9a45dc4920d00639cd028d1cb657d476a8db17af1019e",
          "name": "hook"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "2.0.3",
      "version_original": "2.0.3"
    },
    {
      "_id": "6045fd75dbb14c0b8248b906",
      "alm_examples": [
        {
          "kind": "License",
          "metadata": {
            "name": "triliovault-license"
          },
          "spec": {
            "key": "xLkNDgwKD3jafZJNb8IwDIbv+RWRdo6Uj5a2SD1MwKRtjE0bsLOTuiISpFWaovHv145NQy3iPcb249d27j6xoE/tnkpJOZ/KaBrFVHLJycwjBFu5OQSk/8r7IOMJk5IsCttn0IHyB4+49hb2BEywR6SjjOBbJHtr0DW4Rd9cUnJJXsC6gA6cwcVXbf3pbKLvrRhPmersVYca3GlEfsdiB4Gs2oNG/1pumo5+EWaCfKA/on+cDysh5gWokjOjU8WEQGBaQMSM0DrDiTKTpCterOgV5d07+wXIm4Dleehh+3y9vd8s138MdduEqWq8YsLBAZsaDBbkudW4Gc1Ic56ITHMwrEwTwSIlY5bqLGGGx1kW6QQzUZKfncPotJfrf2u92UGDN37HDDorNgxPlAtOe3d0VRXYfAMj8ZzrMEYCIQCVaI/QJN+2M/QJWimd28dWOi/6o5s5I5+z30JrmzwGnQIhAKrSu8NeUIqXGEBTQvPKe3n2U0LNPht/ZAQIs5CZNeWlX02gk"
          }
        },
        {
          "kind": "Target",
          "metadata": {
            "labels": {
              "app": "triliovault"
            },
            "name": "triliovault-target"
          },
          "spec": {
            "nfsCredentials": {
              "nfsExport": "00.00.00.00:/src/nfs/kubedata",
              "nfsOptions": "nfsvers=4"
            },
            "type": "NFS",
            "vendor": "Other"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/trilio/r-3445381-bundle@sha256:d27785567c5e0db70d99ed7e220a5a58e6466384cd6103849ff0dea6bcfe5c57",
      "bundle_path_digest": "sha256:d27785567c5e0db70d99ed7e220a5a58e6466384cd6103849ff0dea6bcfe5c57",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "cluster",
      "creation_date": "2021-03-08T10:33:25.631000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-cluster.v2.0.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:14:36.012000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "k8s-triliovault",
      "provided_apis": [
        {
          "group": "triliovault.trilio.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1alpha1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Hook",
          "plural": "hooks",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Hook",
          "plural": "hooks",
          "version": "v1alpha1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "License",
          "plural": "licenses",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "BackupPlan",
          "plural": "backupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "BackupPlan",
          "plural": "backupplans",
          "version": "v1alpha1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Target",
          "plural": "targets",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Target",
          "plural": "targets",
          "version": "v1alpha1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1alpha1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Restore",
          "plural": "restores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Restore",
          "plural": "restores",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:15f9fb9a10efc823e1510b168f393c7b3131c178722a79271d169af96abd015f",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:15f9fb9a10efc823e1510b168f393c7b3131c178722a79271d169af96abd015f",
          "name": "control-plane-15f9fb9a10efc823e1510b168f393c7b3131c178722a79271d169af96abd015f-annotation"
        },
        {
          "digest": "sha256:15f9fb9a10efc823e1510b168f393c7b3131c178722a79271d169af96abd015f",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:15f9fb9a10efc823e1510b168f393c7b3131c178722a79271d169af96abd015f",
          "name": "k8s-triliovault-control-plane"
        },
        {
          "digest": "sha256:45d7e9d6532c45383f7ddde956d9b6602431e0aebb55341ae0b70a5e15af80fa",
          "image": "registry.connect.redhat.com/trilio/trilio-admission-webhook@sha256:45d7e9d6532c45383f7ddde956d9b6602431e0aebb55341ae0b70a5e15af80fa",
          "name": "triliovault-admission-webhook"
        },
        {
          "digest": "sha256:443ae1da2c4243d7950aa3e7d8d6829c6c49cbe18f0503482ffdf1177ad402ff",
          "image": "registry.connect.redhat.com/trilio/exporter@sha256:443ae1da2c4243d7950aa3e7d8d6829c6c49cbe18f0503482ffdf1177ad402ff",
          "name": "triliovault-exporter"
        },
        {
          "digest": "sha256:61df15c402a06bc6a1b25df5b731cf31c2eb0fd02f07d906b0ba6da0122385eb",
          "image": "registry.connect.redhat.com/trilio/web@sha256:61df15c402a06bc6a1b25df5b731cf31c2eb0fd02f07d906b0ba6da0122385eb",
          "name": "triliovault-web"
        },
        {
          "digest": "sha256:dd7426da65c2d16ad6373cee40118ecf184c95d150d9770f4c881e8f3886c5e6",
          "image": "registry.connect.redhat.com/trilio/web-backend@sha256:dd7426da65c2d16ad6373cee40118ecf184c95d150d9770f4c881e8f3886c5e6",
          "name": "triliovault-backend"
        },
        {
          "digest": "sha256:876f99e094e1cb1e2c82062063271f40f91a231efbad9395e4cc8c1c9474cff3",
          "image": "registry.connect.redhat.com/trilio/control-plane-init@sha256:876f99e094e1cb1e2c82062063271f40f91a231efbad9395e4cc8c1c9474cff3",
          "name": "control-plane-init"
        },
        {
          "digest": "sha256:b4a565dad5973560787e1921851fa0d93c421e0301820521edf0c0062dbf7e12",
          "image": "registry.connect.redhat.com/trilio/trilio-webhook-init@sha256:b4a565dad5973560787e1921851fa0d93c421e0301820521edf0c0062dbf7e12",
          "name": "webhook-init"
        },
        {
          "digest": "sha256:b1c435a51bdb89dcbf6152c608a35546238f01d2e926f786a8d5193e1e769e1f",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:b1c435a51bdb89dcbf6152c608a35546238f01d2e926f786a8d5193e1e769e1f",
          "name": "metamover"
        },
        {
          "digest": "sha256:08e9846430811df28f49ca07948dd452c7cdf3c8c6677098f5ecdbd78a885e96",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:08e9846430811df28f49ca07948dd452c7cdf3c8c6677098f5ecdbd78a885e96",
          "name": "datamover"
        },
        {
          "digest": "sha256:fb91dfa73078a1f609dab7d98ca9595d9cc31a2c3f634f3720afd67ce66e9810",
          "image": "registry.connect.redhat.com/trilio/datastore-attacher@sha256:fb91dfa73078a1f609dab7d98ca9595d9cc31a2c3f634f3720afd67ce66e9810",
          "name": "datastore_attacher"
        },
        {
          "digest": "sha256:555c2a5ea7f53b0b8a7e5146461927df26f43462bde5f2bf6f708d95d5ef1215",
          "image": "registry.connect.redhat.com/trilio/backup-scheduler@sha256:555c2a5ea7f53b0b8a7e5146461927df26f43462bde5f2bf6f708d95d5ef1215",
          "name": "backup_scheduler"
        },
        {
          "digest": "sha256:2a8d0acb05465fbde28c2c4f4807fbefdc787e198d9700a39c812fdd1d68f952",
          "image": "registry.connect.redhat.com/trilio/backup-cleaner@sha256:2a8d0acb05465fbde28c2c4f4807fbefdc787e198d9700a39c812fdd1d68f952",
          "name": "backup_cleaner"
        },
        {
          "digest": "sha256:2a277d07e7b11ddeb971c5a60e2977e8eeaac4b1ccef941e7ec1d940f973110e",
          "image": "registry.connect.redhat.com/trilio/backup-retention@sha256:2a277d07e7b11ddeb971c5a60e2977e8eeaac4b1ccef941e7ec1d940f973110e",
          "name": "backup_retention"
        },
        {
          "digest": "sha256:7bc80d3d1b8a63fbd17fe594889923aeae12e72029ee8eb91dd0ed407ae54ec5",
          "image": "registry.connect.redhat.com/trilio/target-browser@sha256:7bc80d3d1b8a63fbd17fe594889923aeae12e72029ee8eb91dd0ed407ae54ec5",
          "name": "target_browser"
        },
        {
          "digest": "sha256:0dc1454d82b448c5aeb9a45dc4920d00639cd028d1cb657d476a8db17af1019e",
          "image": "registry.connect.redhat.com/trilio/hook-executor@sha256:0dc1454d82b448c5aeb9a45dc4920d00639cd028d1cb657d476a8db17af1019e",
          "name": "hook"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.0.3",
      "version_original": "2.0.3"
    },
    {
      "_id": "604704ae5a00810ecaf7c404",
      "alm_examples": [
        {
          "kind": "AciContainersOperator",
          "metadata": {
            "name": "acicnioperator",
            "namespace": "aci-containers-system"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/noiro/aci-operator-bundle@sha256:246f4479569bff74a54ffb0f19b6fec8f99839d0629c7ef9bf2f1c8ea2316e65",
      "bundle_path_digest": "sha256:246f4479569bff74a54ffb0f19b6fec8f99839d0629c7ef9bf2f1c8ea2316e65",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-03-09T05:16:30.561000+00:00",
      "csv_description": "## ACI CNI Plugin\n\nThe Cisco Application Centric Infrastructure (ACI) CNI plugin brings the ACI Networking and Policy model to Kubernetes clusters that reside on-prem or in the cloud. It is fully open source and relies on the Opflex Protocol to program Open vSwitch instances running on the Kubernetes nodes. It provides IP address management, L2/L3 networking, load balancing, and security functions for container workloads.\n\nFeatures of Cisco ACI?\nLinks to learn more about the Plugin?\n## ACI Containers Operator\n\nHow does the Operator work?\nWhat does the Operator do?\nLinks to learn more about the Operator?\n## Prerequisites for enabling this Operator\n\nPlease describe any steps a user needs to take prior to enabling this Operator (e.g. any Secrets or ConfigMaps that need to be in place upfront).\n",
      "csv_display_name": "Cisco ACI Containers Operator",
      "csv_metadata_description": "The Cisco Application Centric Infrastructure (ACI) Containers Operator brings the ACI CNI Plugin and Policy model to Kubernetes clusters.",
      "csv_name": "aci-containers-operator.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:12:02.320000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "aci-containers-operator",
      "provided_apis": [
        {
          "group": "aci.ctrl",
          "kind": "AciContainersOperator",
          "plural": "acicontainersoperators",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:0db556fc8f188159fbb18797d8fcbd96303176d7803acaaf6bf604de8dcc0fd0",
          "image": "quay.io/noiro/aci-containers-operator@sha256:0db556fc8f188159fbb18797d8fcbd96303176d7803acaaf6bf604de8dcc0fd0",
          "name": "aci-containers-operator-0db556fc8f188159fbb18797d8fcbd96303176d7803acaaf6bf604de8dcc0fd0-annotation"
        },
        {
          "digest": "sha256:0db556fc8f188159fbb18797d8fcbd96303176d7803acaaf6bf604de8dcc0fd0",
          "image": "quay.io/noiro/aci-containers-operator@sha256:0db556fc8f188159fbb18797d8fcbd96303176d7803acaaf6bf604de8dcc0fd0",
          "name": "aci-containers-operator"
        },
        {
          "digest": "sha256:0fc4c11704dd26a3b10e73cbffca34addc1a968e7b55032533717c70696db2ab",
          "image": "quay.io/noiro/acc-provision-operator@sha256:0fc4c11704dd26a3b10e73cbffca34addc1a968e7b55032533717c70696db2ab",
          "name": "acc-provision-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "604704af6280a414853ec505",
      "alm_examples": [
        {
          "kind": "AkkaCluster",
          "metadata": {
            "name": "akka-cluster-demo"
          },
          "spec": {
            "replicas": 3,
            "template": {
              "spec": {
                "containers": [
                  {
                    "image": "registry.connect.redhat.com/lightbend/akka-cluster-demo@sha256:aae3723581db383d7a9440892d252d0b057936224c7eaabe418ac88f046c460d",
                    "livenessProbe": {
                      "failureThreshold": 10,
                      "httpGet": {
                        "path": "/alive",
                        "port": "management"
                      },
                      "initialDelaySeconds": 20,
                      "periodSeconds": 10
                    },
                    "name": "main",
                    "ports": [
                      {
                        "containerPort": 8080,
                        "name": "http"
                      },
                      {
                        "containerPort": 2552,
                        "name": "remoting"
                      },
                      {
                        "containerPort": 8558,
                        "name": "management"
                      }
                    ],
                    "readinessProbe": {
                      "failureThreshold": 10,
                      "httpGet": {
                        "path": "/ready",
                        "port": "management"
                      },
                      "initialDelaySeconds": 20,
                      "periodSeconds": 10
                    }
                  }
                ]
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/lightbend/akka-cluster-operator-certified-bundle@sha256:e7dc6a53e75a9416f0619998cb1ab12aef98f2e4cbd8f10bc4f60bfefa553e82",
      "bundle_path_digest": "sha256:e7dc6a53e75a9416f0619998cb1ab12aef98f2e4cbd8f10bc4f60bfefa553e82",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2021-03-09T05:16:31.652000+00:00",
      "csv_description": "The Akka Cluster Operator allows you to manage applications designed for\n[Akka Cluster](https://doc.akka.io/docs/akka/current/common/cluster.html).\nClustering with [Akka](https://doc.akka.io/docs/akka/current/guide/introduction.html) provides a\nfault-tolerant, decentralized, peer-to-peer based cluster\nfor building stateful, distributed applications with no single point of failure.\nDevelopers should use Akka Management v1.x or newer, with both Bootstrap and HTTP modules enabled.\nWhen deploying using the Akka Cluster Operator, only the `management port` needs to be defined.\nDefaults are provided by the Operator for all other required configuration.\nThe Akka Cluster Operator provides scalability control and membership status information\nfor deployed applications using Akka Cluster. As part of supervising membership of running clusters,\nthis Operator creates a pod-listing ServiceAccount, Role, and RoleBinding suitable for\neach application. See the project [Readme](https://github.com/lightbend/akka-cluster-operator/blob/master/README.md)\nfor more information and details.\n",
      "csv_display_name": "Akka Cluster Operator",
      "csv_metadata_description": "Run Akka Cluster applications on Kubernetes.",
      "csv_name": "akka-cluster-operator-certified.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:16:19.251000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "akka-cluster-operator-certified",
      "provided_apis": [
        {
          "group": "app.lightbend.com",
          "kind": "AkkaCluster",
          "plural": "akkaclusters",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:d816e89965b92049bfe4a86294a62d3e72045ada4a424073abed1f99d3290f5e",
          "image": "registry.connect.redhat.com/lightbend/akka-cluster-operator-certified@sha256:d816e89965b92049bfe4a86294a62d3e72045ada4a424073abed1f99d3290f5e",
          "name": "akka-cluster-operator-certified-d816e89965b92049bfe4a86294a62d3e72045ada4a424073abed1f99d3290f5e-annotation"
        },
        {
          "digest": "sha256:d816e89965b92049bfe4a86294a62d3e72045ada4a424073abed1f99d3290f5e",
          "image": "registry.connect.redhat.com/lightbend/akka-cluster-operator-certified@sha256:d816e89965b92049bfe4a86294a62d3e72045ada4a424073abed1f99d3290f5e",
          "name": "akka-cluster-operator"
        },
        {
          "digest": "sha256:d816e89965b92049bfe4a86294a62d3e72045ada4a424073abed1f99d3290f5e",
          "image": "registry.connect.redhat.com/lightbend/akka-cluster-operator-certified@sha256:d816e89965b92049bfe4a86294a62d3e72045ada4a424073abed1f99d3290f5e",
          "name": "controller"
        },
        {
          "digest": "sha256:aae3723581db383d7a9440892d252d0b057936224c7eaabe418ac88f046c460d",
          "image": "registry.connect.redhat.com/lightbend/akka-cluster-demo@sha256:aae3723581db383d7a9440892d252d0b057936224c7eaabe418ac88f046c460d",
          "name": "akka-cluster-demo-aae3723581db383d7a9440892d252d0b057936224c7eaabe418ac88f046c460d-annotation"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "604704b05a00810ecaf7c405",
      "alm_examples": [
        {
          "kind": "Kaudit",
          "metadata": {
            "name": "example-kaudit"
          },
          "spec": {
            "aks": {
              "consumerGroupName": "",
              "eventHubName": "",
              "eventHubconnectionString": ""
            },
            "alcide": {},
            "aws": {
              "accessKeyId": "",
              "kinesisStreamName": "",
              "region": "",
              "s3BucketName": "",
              "s3ResourceKeyPrefix": "",
              "secretAccessKey": ""
            },
            "clusterName": "mycluster",
            "gke": {
              "projectId": "",
              "pubsubSubscriptionId": "",
              "storageType": "pd-ssd",
              "token": ""
            },
            "image": {
              "kaudit": "docker.io/alcide/kaudit@sha256:d4a63f95af86b0215d42002adedd54570796458e5c653961f24414d6dbdae189",
              "pullPolicy": "Always",
              "pullSecretToken": "GetYourTokenFromAlcide"
            },
            "ingress": {
              "enable": false,
              "ingressControllerClass": "kaudit-ingress",
              "subDomain": "secops.mycompany.io"
            },
            "k8s": {
              "mode": "auditsink"
            },
            "k8sAuditEnvironment": "k8s",
            "kauditPolicyFile": "kaudit-policy/default-policy.yaml",
            "namespace": "alcide-kaudit",
            "prometheus": {},
            "resources": {
              "cpuLimit": "2",
              "cpuRequest": "1",
              "javaXmX": "7G",
              "memoryLimit": "8Gi",
              "memoryRequest": "2Gi"
            },
            "runOptions": {
              "activateAnalysis": true,
              "enableStateApi": false,
              "eulaSign": false
            },
            "storage": {
              "size": "100Gi"
            },
            "tls": {
              "mode": "self-signed",
              "selfSigned": {
                "alternativeNames": []
              }
            },
            "vault": {
              "image": "vault:1.3.2",
              "mode": "none",
              "vaultServer": "http://vault.demo:8200"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/alcide/kaudit-operator-bundle@sha256:8b95b3769017ae44a5ba4bfaac8bccc07d11f2afcff0ce03af46e71cb440f9f2",
      "bundle_path_digest": "sha256:8b95b3769017ae44a5ba4bfaac8bccc07d11f2afcff0ce03af46e71cb440f9f2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-03-09T05:16:32.824000+00:00",
      "csv_description": "Alcide kAudit Operator",
      "csv_display_name": "Alcide kAudit Operator",
      "csv_metadata_description": "Automatically analyze your Kubernetes audit logs, focusing on Kubernetes breaches and incidents while reducing detection time.",
      "csv_name": "alcide-kaudit-operator.v0.0.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:21:22.901000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "alcide-kaudit-operator",
      "provided_apis": [
        {
          "group": "kaudit.alcide.com",
          "kind": "Kaudit",
          "plural": "kaudits",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:afe2337dd7c0efb7bc02cc5d24df71edcb916f80986f025f04fd2349c1c79fbd",
          "image": "docker.io/alcide/kaudit-operator@sha256:afe2337dd7c0efb7bc02cc5d24df71edcb916f80986f025f04fd2349c1c79fbd",
          "name": "kaudit-operator-afe2337dd7c0efb7bc02cc5d24df71edcb916f80986f025f04fd2349c1c79fbd-annotation"
        },
        {
          "digest": "sha256:afe2337dd7c0efb7bc02cc5d24df71edcb916f80986f025f04fd2349c1c79fbd",
          "image": "docker.io/alcide/kaudit-operator@sha256:afe2337dd7c0efb7bc02cc5d24df71edcb916f80986f025f04fd2349c1c79fbd",
          "name": "alcide-kaudit-operator"
        },
        {
          "digest": "sha256:d4a63f95af86b0215d42002adedd54570796458e5c653961f24414d6dbdae189",
          "image": "docker.io/alcide/kaudit@sha256:d4a63f95af86b0215d42002adedd54570796458e5c653961f24414d6dbdae189",
          "name": "kaudit"
        },
        {
          "digest": "sha256:d4a63f95af86b0215d42002adedd54570796458e5c653961f24414d6dbdae189",
          "image": "docker.io/alcide/kaudit@sha256:d4a63f95af86b0215d42002adedd54570796458e5c653961f24414d6dbdae189",
          "name": "kaudit-d4a63f95af86b0215d42002adedd54570796458e5c653961f24414d6dbdae189-annotation"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.3",
      "version_original": "0.0.3"
    },
    {
      "_id": "604704b16280a414853ec506",
      "alm_examples": [
        {
          "kind": "AnacondaTeamEdition",
          "metadata": {
            "name": "example-anacondateamedition"
          },
          "spec": {
            "api": {
              "replicas": 1
            },
            "dispatcher": {
              "replicas": 2
            },
            "postgres": {
              "storage": {
                "request": "100Gi"
              }
            },
            "proxy": {
              "replicas": 1
            },
            "redis": {
              "storage": {
                "request": "10Gi"
              }
            },
            "route": {
              "host": "anaconda-team-edition.apps.ocp.dev.localdomain.com",
              "scheme": "http"
            },
            "storage": {
              "request": "500Gi",
              "storageclassname": "standard"
            },
            "worker": {
              "replicas": 2
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/anaconda/anaconda-team-edition-bundle@sha256:43327356ec622d12126d5d13ae9c968dd7cc9e8555eadbb8e212d0b37cfb25a3",
      "bundle_path_digest": "sha256:43327356ec622d12126d5d13ae9c968dd7cc9e8555eadbb8e212d0b37cfb25a3",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-03-09T05:16:33.938000+00:00",
      "csv_description": "Anaconda harnesses the power of open-source innovation, empowering more than 19 million users to do breakthrough data science. We deliver enterprise grade solutions to support the use of open-source technology across the machine learning life cycle, and we are the originators of the Anaconda Individual Edition (Distribution), the platform for Python-based data science.\n\n**Anaconda Team Edition is now available on RedHat OpenShift.**\n\n**Prerequisites:**\n\n- Dynamic PersistentVolume support with RWX (ReadWriteMany) PVC capability.\n- Defined hostname (FQDN) for the application's ingress.\n\n**Installation:**\n\n1. Install the operator globally or into a specific namespace on the cluster.\n2. Create an instance of the operator.\n3. Update the **`route.host`** value in the YAML definition to match the hostname created for the application.\n4. Update the **`storage.storageclassname`** value in the YAML definition to match your desired RWX `StorageClass`.\n\n**Log in via the host assigned to your ingress with the following credentials:**\n\n**Username:** anaconda-admin\n\n**Password:** password\n\n[To create additional users,](https://team-docs.anaconda.com/en/latest/admin/access_key.html) log into Keycloak with the following credentials:\n\n**Username:** admin\n\n**Password:** admin\n\nComplete Anaconda Team Edition documentation [can be found here.](https://team-docs.anaconda.com)\n",
      "csv_display_name": "Anaconda Team Edition",
      "csv_metadata_description": "Operator for Anaconda Team Edition",
      "csv_name": "anaconda-team-edition.v6.1.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:14:34.282000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "anaconda-team-edition",
      "provided_apis": [
        {
          "group": "anaconda.com",
          "kind": "AnacondaTeamEdition",
          "plural": "anacondateameditions",
          "version": "v1beta1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:8e012398f111ec4f1c9a824d5223a9dc1150450c78b490b9efb6d96c91f24dfd",
          "image": "registry.connect.redhat.com/anaconda/anaconda-team-edition@sha256:8e012398f111ec4f1c9a824d5223a9dc1150450c78b490b9efb6d96c91f24dfd",
          "name": "anaconda-team-edition-8e012398f111ec4f1c9a824d5223a9dc1150450c78b490b9efb6d96c91f24dfd-annotation"
        },
        {
          "digest": "sha256:8e012398f111ec4f1c9a824d5223a9dc1150450c78b490b9efb6d96c91f24dfd",
          "image": "registry.connect.redhat.com/anaconda/anaconda-team-edition@sha256:8e012398f111ec4f1c9a824d5223a9dc1150450c78b490b9efb6d96c91f24dfd",
          "name": "anaconda-team-edition"
        },
        {
          "digest": "sha256:927dc498cfd19cff986037d752382f2b1bfc8c6f557107843eee1704a28aa365",
          "image": "registry.connect.redhat.com/anaconda/repo@sha256:927dc498cfd19cff986037d752382f2b1bfc8c6f557107843eee1704a28aa365",
          "name": "repo"
        },
        {
          "digest": "sha256:c420f10686aeff012ebae164b191644cb93113954c277a37035b265f1b2b543b",
          "image": "registry.connect.redhat.com/anaconda/repo@sha256:c420f10686aeff012ebae164b191644cb93113954c277a37035b265f1b2b543b",
          "name": "repo_dbmigrator"
        },
        {
          "digest": "sha256:deb744eae1c7a7e39d3d44cf431234026648d97ce7ab4c86780629431437e2b6",
          "image": "registry.connect.redhat.com/anaconda/repo-proxy@sha256:deb744eae1c7a7e39d3d44cf431234026648d97ce7ab4c86780629431437e2b6",
          "name": "repo_proxy"
        },
        {
          "digest": "sha256:376550580c39dcc9c480ce4715ed99523439618b29fdbf1d0cbb6bce074bd7d5",
          "image": "registry.connect.redhat.com/anaconda/repo-keycloak@sha256:376550580c39dcc9c480ce4715ed99523439618b29fdbf1d0cbb6bce074bd7d5",
          "name": "repo_keycloak"
        },
        {
          "digest": "sha256:96d642e056deee7b38e5ea71f411c42a5d10d8ec774d88fda002f6d7277436fd",
          "image": "registry.connect.redhat.com/anaconda/nginx-proxy@sha256:96d642e056deee7b38e5ea71f411c42a5d10d8ec774d88fda002f6d7277436fd",
          "name": "nginx_proxy"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.1.3",
      "version_original": "6.1.3"
    },
    {
      "_id": "604704bbdbb14c0b8248bab3",
      "alm_examples": [
        {
          "kind": "BackupStorageLocation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "objectStorage": {
              "bucket": "aps-bucket-store"
            },
            "provider": "gcp"
          }
        },
        {
          "kind": "VolumeSnapshotLocation",
          "metadata": {
            "name": "gcp-default"
          },
          "spec": {
            "provider": "gcp"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/appranix/apx-operator-bundle@sha256:0722fe603686fa004bc0047f4535435ab9005ef4e9fd96820d330c1c17908259",
      "bundle_path_digest": "sha256:0722fe603686fa004bc0047f4535435ab9005ef4e9fd96820d330c1c17908259",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "deprecated",
      "creation_date": "2021-03-09T05:16:43.057000+00:00",
      "csv_description": "## About this Operator\n\nAppranix helps you to securely backup and restore, perform a disaster\nrecovery and migrate Kubernetes/OpenShift cluster resources and persistent\nvolumes.\n\nThe operator works with Appranix to:\n\n- Install and initiate Appranix controller on your cluster\n\n- Take backups of your cluster and restore it in case of loss.\n\n- Migrate cluster resources to other clusters.\n\n- Replicate your production cluster to development and testing clusters.\n\n## Prerequisites\n\n- A storage bucket in GCP or AWS & credentials to access it\n- Appranix token generated for your cluster from the Appranix console\n- A Configmap and Secret in your cluster for the bucket config and credentials\n\n#### Step 1: Creating a storage bucket\n\nNote: Currently only Google Storage bucket is supported, support for AWS Elastic Bucket Store will be available in a future release.\n\n- You can create a bucket through the GCP console or by running the following command in [Google Cloud Shell](https://cloud.google.com/shell/)\n\n```shell\nAX_CPS_BUCKET_NAME=<bucket_name>\ngsutil mb -b on gs://$AX_CPS_BUCKET_NAME/\ngcloud iam service-accounts create appranix --display-name \"Appranix service account\"\nAX_SERVICE_ACCOUNT_EMAIL=$(gcloud iam service-accounts list --filter=\"displayName:Appranix service account\" --format 'value(email)')\ngsutil iam ch serviceAccount:$AX_SERVICE_ACCOUNT_EMAIL:objectAdmin gs://${AX_CPS_BUCKET_NAME}\ngcloud iam service-accounts keys create ax_service_account.json --iam-account $AX_SERVICE_ACCOUNT_EMAIL\n```\n\n\n#### Step 2: Obtaining the Appranix token for the cluster\n\n- Log in to your Appranix console and create a cluster. After the cluster creation copy the token generated for that cluster.\n\n#### Step 3: Creating the Configmap and Secret in the cluster\n\nA Configmap and Secret which contains the credetianls and bucket configuration has to be created before instaling the operator. It can be done by running the following command against your cluster.\n\nNote: Replace **token**, **bucket_name**, **bucket_provider** accordingly.\n\n\n```shell\nAX_TOKEN=<token>\nAX_CPS_BUCKET_NAME=<bucket_name>\nAX_CPS_BUCKET_PROVIDER=<bucket_provider>\nAX_SERVICE_ACCOUNT=$(cat ax_service_account.json | base64 -w 0)\n# Run only for a Kubernetes cluster\ncurl -Ls -H \"Content-Type: application/json\" https://us-central1-appranix-dev-07.cloudfunctions.net/gen-setup  -d '{\"token\": \"'$AX_TOKEN'\", \"bucket\": \"'$AX_CPS_BUCKET_NAME'\", \"cloud\": \"'$AX_CPS_BUCKET_PROVIDER'\", \"secret\": \"'$AX_SERVICE_ACCOUNT'\"}' | kubectl apply -f -\n# Run only for an OpenShift cluster\ncurl -Ls -H \"Content-Type: application/json\" https://us-central1-appranix-dev-07.cloudfunctions.net/gen-setup  -d '{\"token\": \"'$AX_TOKEN'\", \"bucket\": \"'$AX_CPS_BUCKET_NAME'\", \"cloud\": \"'$AX_CPS_BUCKET_PROVIDER'\", \"secret\": \"'$AX_SERVICE_ACCOUNT'\"}' | oc apply -f -\n```\n\n**After performing the above prerequisites you can proceed to install the Appranix Operator from OperatorHub**",
      "csv_display_name": "Appranix APS Operator",
      "csv_metadata_description": "The Appranix operator enables you to back up and restore your OpenShift cluster resources and persistent volumes.",
      "csv_name": "appranix.v2.3.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:13:37.977000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "appranix-cps",
      "provided_apis": [
        {
          "group": "aps.appranix.com",
          "kind": "BackupStorageLocation",
          "version": "v1"
        },
        {
          "group": "aps.appranix.com",
          "kind": "VolumeSnapshotLocation",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:017264471c37bdf49864452fdccd59541254c4762a747c924d551d91605938c5",
          "image": "registry.connect.redhat.com/appranix/apx-operator@sha256:017264471c37bdf49864452fdccd59541254c4762a747c924d551d91605938c5",
          "name": "apx-operator-017264471c37bdf49864452fdccd59541254c4762a747c924d551d91605938c5-annotation"
        },
        {
          "digest": "sha256:017264471c37bdf49864452fdccd59541254c4762a747c924d551d91605938c5",
          "image": "registry.connect.redhat.com/appranix/apx-operator@sha256:017264471c37bdf49864452fdccd59541254c4762a747c924d551d91605938c5",
          "name": "ax-ansible"
        },
        {
          "digest": "sha256:017264471c37bdf49864452fdccd59541254c4762a747c924d551d91605938c5",
          "image": "registry.connect.redhat.com/appranix/apx-operator@sha256:017264471c37bdf49864452fdccd59541254c4762a747c924d551d91605938c5",
          "name": "ax-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.3.0",
      "version_original": "2.3.0"
    },
    {
      "_id": "604704bd122bd89307e01054",
      "alm_examples": [
        {
          "kind": "AppsodyApplication",
          "metadata": {
            "name": "example-appsodyapplication"
          },
          "spec": {
            "applicationImage": "registry.connect.redhat.com/ibm/open-liberty-samples@sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
            "stack": "java-openliberty"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/appsody-operator-certified-bundle@sha256:6eae693fe4d14a6f72ff49e151aa5fa9bd0ebd75fab08effff7c55aa3c1ad55c",
      "bundle_path_digest": "sha256:6eae693fe4d14a6f72ff49e151aa5fa9bd0ebd75fab08effff7c55aa3c1ad55c",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2021-03-09T05:16:45.819000+00:00",
      "csv_description": "The Appsody Operator allows easy deployment of applications developed with [Appsody](https://appsody.dev) to Kubernetes environments. The operator provides the following key features:\n\n#### Routing\n\nExpose your application to external users via a single toggle to create a Route on OpenShift or an Ingress on other Kubernetes environments. Advanced configuration, such as TLS settings, are also easily enabled.  Expiring Route certificates are re-issued.\n\n#### High Availability\n\nRun multiple instances of your application for high availability. Either specify a static number of replicas or easily configure auto scaling to create (and delete) instances based on resource consumption.\n\n#### Persistence\n\nEnable persistence for your application by specifying storage requirements.\n\n#### Service Binding\n\nEasily bind to available services in your cluster.\n\n#### Knative\n\nDeploy your serverless application on [Knative](https://knative.dev) using a single toggle.\n\n#### Integration with OpenShift's Certificate Manager\nThe Appsody Operator takes advantage of the [cert-manager tool](https://cert-manager.io/), if it is installed on the cluster. This allows the operator to automatically provision TLS certificates for pods as well as routes.\n\n#### Kubernetes Application Navigator (kAppNav)\n\nAutomatically configures the Kubernetes resources for integration with [kAppNav](https://kappnav.io/).\n\nSee our [**documentation**](https://github.com/appsody/appsody-operator/tree/master/doc/) for more information.\n",
      "csv_display_name": "Appsody Operator",
      "csv_metadata_description": "Deploys Appsody based applications",
      "csv_name": "appsody-operator.v0.6.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:16:22.052000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "appsody-operator-certified",
      "provided_apis": [
        {
          "group": "appsody.dev",
          "kind": "AppsodyApplication",
          "plural": "appsodyapplications",
          "version": "v1beta1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:870318a851e513b536cfaa1cfc8bfd79c55990663cb972dd27c92bd0e06b9fba",
          "image": "registry.connect.redhat.com/ibm/appsody-application-operator@sha256:870318a851e513b536cfaa1cfc8bfd79c55990663cb972dd27c92bd0e06b9fba",
          "name": "appsody-application-operator-870318a851e513b536cfaa1cfc8bfd79c55990663cb972dd27c92bd0e06b9fba-annotation"
        },
        {
          "digest": "sha256:870318a851e513b536cfaa1cfc8bfd79c55990663cb972dd27c92bd0e06b9fba",
          "image": "registry.connect.redhat.com/ibm/appsody-application-operator@sha256:870318a851e513b536cfaa1cfc8bfd79c55990663cb972dd27c92bd0e06b9fba",
          "name": "appsody-operator"
        },
        {
          "digest": "sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
          "image": "registry.connect.redhat.com/ibm/open-liberty-samples@sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
          "name": "open-liberty-samples-8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4-annotation"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.6.1",
      "version_original": "0.6.1"
    },
    {
      "_id": "604704bf122bd89307e01056",
      "alm_examples": [
        {
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "db-password",
                "name": "aqua-database-password"
              },
              "dbDiskSize": 10
            },
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "namespace": "aqua",
              "requirements": true,
              "serviceAccount": "aqua-sa",
              "version": "5.3"
            },
            "route": true,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "5.3"
            }
          }
        },
        {
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "5.3"
            },
            "token": "<<your-token>>"
          }
        },
        {
          "kind": "AquaKubeEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "config": {
              "cluster_name": "aqua-secure",
              "gateway_address": "aqua-gateway.aqua:8443"
            },
            "token": "<<KUBE_ENFORCER_GROUP_TOKEN>>"
          }
        },
        {
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "5.3"
            }
          }
        },
        {
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "5.3"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "<<YOUR AQUA USER PASSWORD>>",
              "username": "<<YOUR AQUA USER NAME>>"
            }
          }
        },
        {
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "5.3"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:c367a6e2000ff5eb18363b3008930e86623a1ef74d0236cdb9423b63468fdfc2",
      "bundle_path_digest": "sha256:c367a6e2000ff5eb18363b3008930e86623a1ef74d0236cdb9423b63468fdfc2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "5.3",
      "creation_date": "2021-03-09T05:16:47.081000+00:00",
      "csv_description": "The Aqua Security Operator is used to deploy and manage the Aqua Cloud Native Security Platform (CSP) and its components:\n* Server (aka \"console\")\n* Database (optional; you can map an external database as well)\n* Gateway\n* Enforcer\n* KubeEnforcer\n* Scanner\n\nUse the Aqua Operator to:\n* Deploy Aqua CSP on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua CSP components\n* Automatically scale the number of Aqua scanners based on the number of images in the scan queue\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/master/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nThere are only 3 prerequisites:\n1. Make sure you have a license and to obtain one, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n2. Create a new project for aqua\n\n    ```oc new-project aqua```\n3. Create the secret for Aqua Database password\n\n    ```oc create secret generic aqua-database-password --from-literal=db-password=<password>```\n    \nPlease note that for the certified operator, the Docker registry secret is NOT needed. For the Red Hat certified operator, the Aqua application images are stored in the Red Hat Connect registry and will be automatically pulled by the Aqua operator.\n\n## Choosing the right channel\n\nChannels are a flexible publishing mechanism that offers you three different Aqua versions to deploy, at any point. These channels map to their respective Aqua versions, describing the maturity based on where they are in their lifecycle:\n* latest: This maps to the Aqua version 4.6.0\n* alpha: This maps to the Aqua version 5.0.0\n* 5.3: This is the latest and greatest version of Aqua (default)\n\n## Deploying the Aqua Operator\n\nAqua Operator follows an easy push button deployment that installs the operator in its own aqua namespace.\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/5.3.0/docs/DeployOpenShiftOperator.md).\n\n## Configuring the Aqua Operator\n\nOperators leverage CRDs as a configuration mechanism for the application. Aqua offers a number of CRDs that can be tweaked and configured as per your needs. Please refer to this [link](https://github.com/aquasecurity/aqua-operator/blob/5.3.0/docs/DeployOpenShiftOperator.md#aquacsp-crds) for Custom Resource examples for popular scenarios.\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v5.3.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:21:54.442000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "plural": "aquacsps",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "plural": "aquadatabases",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "plural": "aquaenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "plural": "aquagateways",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaKubeEnforcer",
          "plural": "aquakubeenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "plural": "aquascanners",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "plural": "aquaservers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:5232320700d92814955daee9588845b6d57ff499d24406e34c86cb2264df7e17",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:5232320700d92814955daee9588845b6d57ff499d24406e34c86cb2264df7e17",
          "name": "aquasec-5232320700d92814955daee9588845b6d57ff499d24406e34c86cb2264df7e17-annotation"
        },
        {
          "digest": "sha256:5232320700d92814955daee9588845b6d57ff499d24406e34c86cb2264df7e17",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:5232320700d92814955daee9588845b6d57ff499d24406e34c86cb2264df7e17",
          "name": "aqua-operator"
        },
        {
          "digest": "sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "image": "registry.connect.redhat.com/aquasec/database@sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "name": "database"
        },
        {
          "digest": "sha256:5e3f0ceb3805eb556a270ff6dd24f38b7363af635be67a07537537fdcea91a59",
          "image": "registry.connect.redhat.com/aquasec/gateway@sha256:5e3f0ceb3805eb556a270ff6dd24f38b7363af635be67a07537537fdcea91a59",
          "name": "gateway"
        },
        {
          "digest": "sha256:736ebc8d15add4f82999d0d4cd95f0d7ddf4d4459496718c1482716841750dd9",
          "image": "registry.connect.redhat.com/aquasec/console@sha256:736ebc8d15add4f82999d0d4cd95f0d7ddf4d4459496718c1482716841750dd9",
          "name": "server"
        },
        {
          "digest": "sha256:03669814dfa811b54116ce9c7481c6594f44058593ab50f8549beeef9ed0e54c",
          "image": "registry.connect.redhat.com/aquasec/scanner@sha256:03669814dfa811b54116ce9c7481c6594f44058593ab50f8549beeef9ed0e54c",
          "name": "scanner"
        },
        {
          "digest": "sha256:6617cc185815d883ef25d40d0ba02e00bd39224c9431d36ecbf2254690206230",
          "image": "registry.connect.redhat.com/aquasec/enforcer@sha256:6617cc185815d883ef25d40d0ba02e00bd39224c9431d36ecbf2254690206230",
          "name": "enforcer"
        },
        {
          "digest": "sha256:a132492d9678275c250aaddcdf9af4fea551e79d6aaf95682f457edf8f92af50",
          "image": "registry.connect.redhat.com/aquasec/kube-enforcer@sha256:a132492d9678275c250aaddcdf9af4fea551e79d6aaf95682f457edf8f92af50",
          "name": "kube_enforcer"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "5.3.0",
      "version_original": "5.3.0"
    },
    {
      "_id": "604704c06280a414853ec509",
      "alm_examples": [
        {
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "adminPassword": "Password1",
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "enforcer": {
              "enforceMode": true
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "platform": "openshift",
              "requirements": true
            },
            "route": true,
            "runAsNonRoot": false,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "platform": "openshift",
              "serviceAccount": "aqua-sa"
            },
            "runAsNonRoot": false
          }
        },
        {
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa"
            },
            "token": "token"
          }
        },
        {
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "password",
                "name": "aqua-aqua-db"
              }
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "aqua-db",
              "port": 5432,
              "username": "postgres"
            },
            "infra": {
              "namespace": "aqua",
              "platform": "openshift",
              "serviceAccount": "aqua-sa"
            },
            "runAsNonRoot": false
          }
        },
        {
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "Password1",
              "username": "administrator"
            },
            "runAsNonRoot": false
          }
        },
        {
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "adminPassword": "Password1",
            "common": {
              "databaseSecret": {
                "key": "password",
                "name": "aqua-aqua-db"
              }
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "aqua-db",
              "port": 5432,
              "username": "postgres"
            },
            "infra": {
              "namespace": "aqua",
              "platform": "openshift",
              "serviceAccount": "aqua-sa"
            },
            "runAsNonRoot": false
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:e3b33c305cd178151b2d61fe3fd7e17285179087e65fc7d9ff710b37fcecc256",
      "bundle_path_digest": "sha256:e3b33c305cd178151b2d61fe3fd7e17285179087e65fc7d9ff710b37fcecc256",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-03-09T05:16:48.311000+00:00",
      "csv_description": "The Aqua Security Operator is used to deploy and manage the Aqua Cloud Native Security Platform (CSP) and its components:\n* Server (aka \"console\")\n* Database (optional; you can map an external database as well)\n* Gateway\n* Enforcer\n* Scanner\n\nUse the Aqua Operator to:\n* Deploy Aqua CSP on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua CSP components\n* Automatically scale the number of Aqua scanners based on the number of images in the scan queue\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/master/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nMake sure you have a license and access to the Aqua registry. To obtain a license, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n\nIt is advised that you read about the [Aqua Environment and Configuration](https://docs.aquasec.com/docs/purpose-of-this-section) before deploying and using the Operator.\n\n## Deploying the Aqua Operator\n\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/master/docs/DeployOpenShiftOperator.md).\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v5.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:14:02.973000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "plural": "aquaservers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "plural": "aquacsps",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "plural": "aquadatabases",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "plural": "aquaenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "plural": "aquagateways",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "plural": "aquascanners",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:498825a0deb6405ba9d92a447768f93961590616229688aba5161c639e9798c3",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:498825a0deb6405ba9d92a447768f93961590616229688aba5161c639e9798c3",
          "name": "aquasec-498825a0deb6405ba9d92a447768f93961590616229688aba5161c639e9798c3-annotation"
        },
        {
          "digest": "sha256:498825a0deb6405ba9d92a447768f93961590616229688aba5161c639e9798c3",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:498825a0deb6405ba9d92a447768f93961590616229688aba5161c639e9798c3",
          "name": "aqua-operator"
        },
        {
          "digest": "sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "image": "registry.connect.redhat.com/aquasec/database@sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "name": "database"
        },
        {
          "digest": "sha256:4c1613f7205ea53880ee2d0e1952c081aea6e69404c607d1aaa07521791de4af",
          "image": "registry.connect.redhat.com/aquasec/gateway@sha256:4c1613f7205ea53880ee2d0e1952c081aea6e69404c607d1aaa07521791de4af",
          "name": "gateway"
        },
        {
          "digest": "sha256:3fbb9a05010ddce79ded29a5ed52aa25c17e60eede24d964599f2025c1f5d53a",
          "image": "registry.connect.redhat.com/aquasec/console@sha256:3fbb9a05010ddce79ded29a5ed52aa25c17e60eede24d964599f2025c1f5d53a",
          "name": "server"
        },
        {
          "digest": "sha256:aa02423c62b7d7ec56439c263761dbf975901bf3b6cd0c61f10833bc42329633",
          "image": "registry.connect.redhat.com/aquasec/scanner@sha256:aa02423c62b7d7ec56439c263761dbf975901bf3b6cd0c61f10833bc42329633",
          "name": "scanner"
        },
        {
          "digest": "sha256:b9d24aeaff3074e345eb9ccd694d480cc92e457ca4bcbe96e80051c2d06ead44",
          "image": "registry.connect.redhat.com/aquasec/enforcer@sha256:b9d24aeaff3074e345eb9ccd694d480cc92e457ca4bcbe96e80051c2d06ead44",
          "name": "enforcer"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "5.0.0",
      "version_original": "5.0.0"
    },
    {
      "_id": "604704c1dbb14c0b8248bab4",
      "alm_examples": [
        {
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "adminPassword": "Password1",
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "enforcer": {
              "enforceMode": true
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "platform": "openshift",
              "requirements": true
            },
            "route": true,
            "runAsNonRoot": false,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "platform": "openshift",
              "serviceAccount": "aqua-sa"
            },
            "runAsNonRoot": false
          }
        },
        {
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa"
            },
            "token": "token"
          }
        },
        {
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "password",
                "name": "aqua-aqua-db"
              }
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "aqua-db",
              "port": 5432,
              "username": "postgres"
            },
            "infra": {
              "namespace": "aqua",
              "platform": "openshift",
              "serviceAccount": "aqua-sa"
            },
            "runAsNonRoot": false
          }
        },
        {
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "Password1",
              "username": "administrator"
            },
            "runAsNonRoot": false
          }
        },
        {
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "adminPassword": "Password1",
            "common": {
              "databaseSecret": {
                "key": "password",
                "name": "aqua-aqua-db"
              }
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "aqua-db",
              "port": 5432,
              "username": "postgres"
            },
            "infra": {
              "namespace": "aqua",
              "platform": "openshift",
              "serviceAccount": "aqua-sa"
            },
            "runAsNonRoot": false
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:7efc06dd8e946188593079d6100187034f39298bce2c13ab50cb1e0747a9e608",
      "bundle_path_digest": "sha256:7efc06dd8e946188593079d6100187034f39298bce2c13ab50cb1e0747a9e608",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "latest",
      "creation_date": "2021-03-09T05:16:49.391000+00:00",
      "csv_description": "The Aqua Security Operator is used to deploy and manage the Aqua Cloud Native Security Platform (CSP) and its components:\n* Server (aka \"console\")\n* Database (optional; you can map an external database as well)\n* Gateway\n* Enforcer\n* Scanner\n\nUse the Aqua Operator to:\n* Deploy Aqua CSP on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua CSP components\n* Automatically scale the number of Aqua scanners based on the number of images in the scan queue\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/master/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nMake sure you have a license and access to the Aqua registry. To obtain a license, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n\nIt is advised that you read about the [Aqua Environment and Configuration](https://docs.aquasec.com/docs/purpose-of-this-section) before deploying and using the Operator.\n\n## Deploying the Aqua Operator\n\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/master/docs/DeployOpenShiftOperator.md).\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v1.0.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:22:13.998000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "plural": "aquacsps",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "plural": "aquadatabases",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "plural": "aquaenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "plural": "aquagateways",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "plural": "aquascanners",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "plural": "aquaservers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:498825a0deb6405ba9d92a447768f93961590616229688aba5161c639e9798c3",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:498825a0deb6405ba9d92a447768f93961590616229688aba5161c639e9798c3",
          "name": "aquasec-498825a0deb6405ba9d92a447768f93961590616229688aba5161c639e9798c3-annotation"
        },
        {
          "digest": "sha256:498825a0deb6405ba9d92a447768f93961590616229688aba5161c639e9798c3",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:498825a0deb6405ba9d92a447768f93961590616229688aba5161c639e9798c3",
          "name": "aqua-operator"
        },
        {
          "digest": "sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "image": "registry.connect.redhat.com/aquasec/database@sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "name": "database"
        },
        {
          "digest": "sha256:5a7b602be960b1ff7d9f53800fd1023eda0966cd26f3e82b13ac3d030f72e641",
          "image": "registry.connect.redhat.com/aquasec/gateway@sha256:5a7b602be960b1ff7d9f53800fd1023eda0966cd26f3e82b13ac3d030f72e641",
          "name": "gateway"
        },
        {
          "digest": "sha256:5c421aa97605ad32a1f4b6019eaca28543752e505a3d699b13b515ace098873f",
          "image": "registry.connect.redhat.com/aquasec/console@sha256:5c421aa97605ad32a1f4b6019eaca28543752e505a3d699b13b515ace098873f",
          "name": "server"
        },
        {
          "digest": "sha256:66e8665eb1290152b3f995e2d7256bf400ce5968813f1db0307f906036dfa72f",
          "image": "registry.connect.redhat.com/aquasec/scanner@sha256:66e8665eb1290152b3f995e2d7256bf400ce5968813f1db0307f906036dfa72f",
          "name": "scanner"
        },
        {
          "digest": "sha256:4ebd38f8fe0b6c57d47e2a7e7bc557b8d8a54b61501669e0584306119413f0b6",
          "image": "registry.connect.redhat.com/aquasec/enforcer@sha256:4ebd38f8fe0b6c57d47e2a7e7bc557b8d8a54b61501669e0584306119413f0b6",
          "name": "enforcer"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.4",
      "version_original": "1.0.4"
    },
    {
      "_id": "604704c2dbb14c0b8248bab5",
      "alm_examples": [
        {
          "kind": "SpinnakerService",
          "metadata": {
            "name": "spinnaker"
          },
          "spec": {
            "expose": {
              "service": {
                "type": "LoadBalancer"
              },
              "type": "service"
            },
            "spinnakerConfig": {
              "config": {
                "persistentStorage": {
                  "persistentStoreType": "s3",
                  "s3": {
                    "bucket": "mybucket",
                    "rootFolder": "front50"
                  }
                },
                "version": "2.21.4-ubi"
              }
            },
            "validation": {
              "persistentStorage": {
                "s3": {
                  "enabled": false
                }
              },
              "providers": {
                "docker": {
                  "enabled": false
                },
                "kubernetes": {
                  "enabled": false
                }
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/armory/armory-operator-bundle@sha256:f652675af906bff73b5658d588070328aa9c3fd1f460c35c72e12de504a3050e",
      "bundle_path_digest": "sha256:f652675af906bff73b5658d588070328aa9c3fd1f460c35c72e12de504a3050e",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1alpha2",
      "creation_date": "2021-03-09T05:16:50.552000+00:00",
      "csv_description": "## Overview\n\nOperator-based Armory installation. Spinnaker is an open sourced Continuous Delivery (CD) platform. It works as a workflow engine to build out pipelines to deploy your workloads to your OpenShift and other cloud environments. Armory is the enterprise distribution of Spinnaker provided by Armory, Inc with Pipelines as Code, Terraform Integration, Policy Engine, and Secrets Management.\n\nArmory gives your developers the power to deploy, instantly and to any cloud, with built-in guardrails to ensure best practices, resiliency, security, and compliance.\n\n## Features and benefits\n\n### Armory Pipeline as Code\n\nPipeline as Code (Dinghy) allows you to store Spinnaker pipelines in Github and manage them like you would manage code, including version control, templatization, and modularization. Spinnaker pipelines are flexible and customizable series of deployment stages. Combine all these to rapidly and repeatably scale pipelines in your Spinnaker deployment. \u2022 Dynamically create and store Spinnaker pipelines (in JSON, HashiCorp Configuration Language or YAML) in a Git repository \u2022 Enables version control, templates, and modularization in your pipelines as well as repeatable, scalable pipelines by avoiding the need to use the Spinnaker user interface (UI).\n\n### Policy Engine\n\nPolicy Engine helps you meet compliance requirements based on custom policies you set. You can configure the Policy Engine to verify that your pipelines meet certain requirements at save time or at runtime. \u2022 Codify and automate your security & compliance requirements and best practices \u2022 Execution features allow policies to be run before and after pipeline stages.\n\n### Terraform Integration\n\nTerraform integration allows you to use your existing Terraform scripts to plan and create infrastructure as part a Spinnaker pipeline. You can deploy your application and infrastructure all in a single pipeline. \u2022 Seamless integration of Spinnaker with Terraform \u2022 Run Terraform plan, apply, destroy, and output stages as part of your Spinnaker pipeline to fully align your infrastructure with your deployments\n\n### Pipelines as CRD (PaCRD)\n\nPipelines as CRD (PaCRD) is a Kubernetes controller that manages the lifecycle of Armory applications and pipelines as objects within your cluster. PaCRD extends Kubernetes functionality to support Spinnaker Application and Pipeline objects that can be observed for changes through a mature lifecycle management API.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
      "csv_display_name": "Armory Operator",
      "csv_metadata_description": "Armory provides an enterprise-grade distribution of Spinnaker, the world\u2019s leading continuous delivery platform.",
      "csv_name": "armory-operator.v1.2.0-ubi",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:14:40.028000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "armory-operator",
      "provided_apis": [
        {
          "group": "spinnaker.armory.io",
          "kind": "SpinnakerService",
          "plural": "spinnakerservices",
          "version": "v1alpha2"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:213dd75d10a5141573c447d784725d934b33102a8dc1b11a46f5dcd0d1659acd",
          "image": "registry.connect.redhat.com/armory/armory-operator@sha256:213dd75d10a5141573c447d784725d934b33102a8dc1b11a46f5dcd0d1659acd",
          "name": "armory-operator-213dd75d10a5141573c447d784725d934b33102a8dc1b11a46f5dcd0d1659acd-annotation"
        },
        {
          "digest": "sha256:213dd75d10a5141573c447d784725d934b33102a8dc1b11a46f5dcd0d1659acd",
          "image": "registry.connect.redhat.com/armory/armory-operator@sha256:213dd75d10a5141573c447d784725d934b33102a8dc1b11a46f5dcd0d1659acd",
          "name": "spinnaker-operator"
        },
        {
          "digest": "sha256:8732281f5df995dc535dbc1114068453c9c43972b0ffe2f0f3b8043ef9481e11",
          "image": "registry.connect.redhat.com/armory/halyard-armory@sha256:8732281f5df995dc535dbc1114068453c9c43972b0ffe2f0f3b8043ef9481e11",
          "name": "halyard"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.2.0-ubi",
      "version_original": "1.2.0-ubi"
    },
    {
      "_id": "604704c56280a414853ec50b",
      "alm_examples": [
        {
          "kind": "Atomicorp",
          "metadata": {
            "name": "atomicorp"
          },
          "spec": {
            "image": "registry.connect.redhat.com/atomicorp/atomicorp-aeo-v6@sha256:35aa52b7e65ced1738d828f16862ec39dded0d8b7b91c8508c0b1aea67120aa4",
            "imagePullSecrets": [
              {
                "name": ""
              }
            ],
            "resources": {
              "limits": {
                "cpu": 3,
                "memory": "4Gi"
              }
            },
            "routes": {
              "endpointDefenderEnabled": true,
              "endpointDefenderName": "endpoint-defender",
              "ossecArchivesEnabled": true,
              "ossecArchivesName": "ossec-archive"
            },
            "service": {
              "name": "atomicorp-svc"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/atomicorp/atomicorp-aeo-hub-bundle@sha256:5eda67f2842f0ceb90979716597e1c3d94eddcad67e1014bbe56f7e8474d8d71",
      "bundle_path_digest": "sha256:5eda67f2842f0ceb90979716597e1c3d94eddcad67e1014bbe56f7e8474d8d71",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-03-09T05:16:53.206000+00:00",
      "csv_description": "Atomic Enterprise OSSEC provides intrusion detection, file integrity monitoring, log management, compliance reporting, vulnerability scanning, active-response and more.\n\n**1. Log Based Intrusion Detection and Prevention**\n-----\n Using agents, or our agentless ingestion Atomic Enterprise OSSEC can perform high-fidelity Intrusion Detection across hundreds of operating systems, applications, and services.\n**2. Vulnerability Scanning**\n-----\nPerforms host-based vulnerability scanning in 3 seconds or less, on Windows, RedHat, Centos, Debian, and Ubuntu. Our no-risk vulnerability scanning system runs hourly, and imparts no load on the targeted system.\n**3. Compliance scanner**\n-----\nSupporting PCI-DSS, CIS, NIST-800-53, HIPAA and many others, our agent based compliance scanner can track overall workload compliance with one or more standards concurrently on a continuous cycle.\n\n----------\n\n **How to get the Application Images from registry?**\n-----\n- First Login to redhat catalogue webpage using your credentials.\n- Search for the Operator.\n- Click on the Operator.\n- There is a description that redirects you (upon clicking) to page that explains how to create service accounts.\n- Create a Service Account. Refer page : <https://access.redhat.com/terms-based-registry/#/accounts>\n- Once a service account is created , you can click on it and then navigate to tab Openshift Secret to get the yaml file for your ImagePullSecret.\n- Download the Secret. Create the secret using command\n```sh\n    kubectl create -f <secretfile.yml> --namespace=<namespace>\n```\n- Use the name of the created secret in the CR file.\n- For all the application images we would need the secret name to be passed in the CR Spec.\n\n----------\n\n**CR Spec Details**\n-----\n  Spec                         |            Details\n-------------------------------|-----------------------------\nimage                          | URL to the application image\nimagePullSecretsName:          | Secret name to pull images from private repository\nresources.limits.cpu           | Number of CPUs. Minimum required is 3.\nresources.limits.memory        | Memory in Gi or Mi. Minimum required is 4 Gi\nroutes.endpointDefenderEnabled | true or false depending on route to Defender is to be created or not.\nroutes.endpointDefenderName    | If enabled, name of the Defender route\nroutes.ossecArchivesEnabled    | true or false depending on route to Archives is to be created or not.\nroutes.ossecArchivesName       | If enabled, name of the Archives route\nservice.name                   | Name of the service resource\nservice.type                   | Type of service- NodePort, ClusterIP, null\n\n----------\n\n**Getting Defender login credentials**\n-----\n\nOnce the Atomic Enterprise OSSEC application pod is ready, it can be accessed using the Endpoint Defender route. To get its login credentials follow these steps-\n\n* Login to the Openshift terminal.\n* Get the application pod's name\n```sh\noc get pods -n <namespace> | grep \"atomic-corp\"\n```\n* Login to the pod's terminal-\n```sh\noc exec -it <pod name> -n <namespace> -- /bin/bash\n```\n* Execute the below command. The USERNAME and PASSWORD fields are the credentials to login to the Atomic Enterprise OSSEC portal\n```sh\nsudo cat /root/awp.cfg | grep -E \"USERNAME|PASSWORD\"\n```\n* Exit from the pods terminal-\n```sh\nexit\n```\n",
      "csv_display_name": "Atomicorp Operator",
      "csv_metadata_description": "Atomic Enterprise OSSEC is an enhanced, supported version of the OSSEC, the world's most popular open source server intrusion detection system",
      "csv_name": "atomicorp-helm-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:13:40.716000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "atomicorp-helm-operator-certified",
      "provided_apis": [
        {
          "group": "atomicorp.com",
          "kind": "Atomicorp",
          "plural": "atomicorps",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:1f0e8f5357f64c2068d59c33fa71fbdbaf722df3d504fe330773139bd674f939",
          "image": "registry.connect.redhat.com/atomicorp/atomicorp-aeo-hub@sha256:1f0e8f5357f64c2068d59c33fa71fbdbaf722df3d504fe330773139bd674f939",
          "name": "atomicorp-aeo-hub-1f0e8f5357f64c2068d59c33fa71fbdbaf722df3d504fe330773139bd674f939-annotation"
        },
        {
          "digest": "sha256:1f0e8f5357f64c2068d59c33fa71fbdbaf722df3d504fe330773139bd674f939",
          "image": "registry.connect.redhat.com/atomicorp/atomicorp-aeo-hub@sha256:1f0e8f5357f64c2068d59c33fa71fbdbaf722df3d504fe330773139bd674f939",
          "name": "atomicorp-helm-operator"
        },
        {
          "digest": "sha256:35aa52b7e65ced1738d828f16862ec39dded0d8b7b91c8508c0b1aea67120aa4",
          "image": "registry.connect.redhat.com/atomicorp/atomicorp-aeo-v6@sha256:35aa52b7e65ced1738d828f16862ec39dded0d8b7b91c8508c0b1aea67120aa4",
          "name": "defender"
        },
        {
          "digest": "sha256:35aa52b7e65ced1738d828f16862ec39dded0d8b7b91c8508c0b1aea67120aa4",
          "image": "registry.connect.redhat.com/atomicorp/atomicorp-aeo-v6@sha256:35aa52b7e65ced1738d828f16862ec39dded0d8b7b91c8508c0b1aea67120aa4",
          "name": "atomicorp-aeo-v6-35aa52b7e65ced1738d828f16862ec39dded0d8b7b91c8508c0b1aea67120aa4-annotation"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "604704c65a00810ecaf7c407",
      "alm_examples": [
        {
          "kind": "AwsEventSources",
          "metadata": {
            "name": "awseventsources"
          },
          "spec": {
            "adapters": {
              "awscodecommit": {
                "image": "registry.connect.redhat.com/triggermesh/awscodecommitsource@sha256:c362c12e56918c8d16ac86f4ff9f3637dcdbc5639e756b4e597a02f7115f70e9"
              },
              "awscognitoidentity": {
                "image": "registry.connect.redhat.com/triggermesh/awscognitoidentitysource@sha256:7b66b99c2b2297310155a11c23920b0705fc8fd9a558b14e80fb3c9862fc0b4f"
              },
              "awscognitouserpool": {
                "image": "registry.connect.redhat.com/triggermesh/awscognitouserpoolsource@sha256:867f8305d1bef84e5605a14f8482dc7f337ab68368c0334eab286aecf3f2ac09"
              },
              "awsdynamodb": {
                "image": "registry.connect.redhat.com/triggermesh/awsdynamodbsource@sha256:cc43ceb4ce08470b5d45e57a5fd0351c3e738416d53ac175f76c5b6a38996286"
              },
              "awskinesis": {
                "image": "registry.connect.redhat.com/triggermesh/awskinesissource@sha256:cc86c4d99a7e5c558274220a7c704f9f9615e165742e7d0e5a01d4843670cb97"
              },
              "awssns": {
                "image": "registry.connect.redhat.com/triggermesh/awssnssource@sha256:4c110671dff51b6939b38632cf1db68ae0779fc1f869c144ac141ab1ecf8ab85"
              },
              "awssqs": {
                "image": "registry.connect.redhat.com/triggermesh/awssqssource@sha256:3ec5e2aee183b8e9c53e6781c60a5679cd7034b982bcb02e81106d4e8faaea5d"
              }
            },
            "affinity": {},
            "fullnameOverride": "",
            "image": {
              "image": "registry.connect.redhat.com/triggermesh/aws-event-sources-controller@sha256:d0f77ef39f1845da9aaf6998652a190ee096cf2bbe4ce02e0250a8c2cc89ef3e",
              "pullPolicy": "IfNotPresent"
            },
            "imagePullSecrets": [],
            "nameOverride": "",
            "nodeSelector": {},
            "podAnnotations": {},
            "podSecurityContext": {},
            "rbac": {
              "create": true
            },
            "resources": {
              "requests": {
                "cpu": "20m",
                "memory": "20Mi"
              }
            },
            "securityContext": {},
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": ""
            },
            "tolerations": []
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/triggermesh/aws-event-sources-operator-bundle@sha256:76d525c7a995ea48ba06e9f1aa332603869aff8be72f2446b53bad92753fcff4",
      "bundle_path_digest": "sha256:76d525c7a995ea48ba06e9f1aa332603869aff8be72f2446b53bad92753fcff4",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-03-09T05:16:54.722000+00:00",
      "csv_description": "The TriggerMesh AWS Sources operator provides a collection of API's that enables to consume events that happen in your AWS services and send them to containers, microservices and functions running in your cluster.\n\n## Prerequisites\n\nThe TriggerMesh AWS Sources operator depends on the Knative API's provided by the Red Hat OpenShift Serverless operator. For more information, see the documentation on [Installing OpenShift Serverless](https://access.redhat.com/documentation/en-us/openshift_container_platform/4.3/html/serverless_applications/installing-openshift-serverless-1).\n\n## Supported Event Sources\n\n- **AWS CodeCommit event source**: Consume messages from a AWS CodeCommit repository and send them as CloudEvents to an arbitrary event sink.\n- **AWS Cognito Identity event source**: Consume messages from a AWS Cognito identity pool and send them as CloudEvents to an arbitrary event sink.\n- **AWS Cognito UserPool event source**: Consume messages from a AWS Cognito identity pool and send them as CloudEvents to an arbitrary event sink.\n- **AWS DynamoDB event source**: Consume messages from a AWS DynamoDB stream and send them as CloudEvents to an arbitrary event sink.\n- **AWS Kinesis event source**: Consume messages from a AWS Kinesis data stream and send them as CloudEvents to an arbitrary event sink.\n- **AWS SNS event source**: Subscribes to messages from a AWS SNS topic and send them as CloudEvents to an arbitrary event sink.\n- **AWS SQS event source**: Consume messages from a AWS SQS queue and sends them as CloudEvents to an arbitrary event sink.\n\n## Installation\n\nSee the documentation on [Installing TriggerMesh AWS Sources](https://github.com/triggermesh/aws-sources-operator/blob/master/README.md)\n\n## Getting Started\n\nSee the documentation on [Getting Started](https://github.com/triggermesh/aws-event-sources/blob/master/README.md)\n",
      "csv_display_name": "AWS Sources Operator",
      "csv_metadata_description": "Provides a collection of API's that enables to consume events that happen in your AWS services and send them to containers, microservices and functions running in your cluster.",
      "csv_name": "aws-sources-operator.v0.3.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:21:28.808000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "aws-event-sources-operator-certified",
      "provided_apis": [
        {
          "group": "sources.triggermesh.com",
          "kind": "AwsEventSources",
          "plural": "awseventsources",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:4ee562cecbaeb53aa2a77bc572320fab8b5e446c332d0794089f5d7f61a65aef",
          "image": "registry.connect.redhat.com/triggermesh/aws-event-sources-operator@sha256:4ee562cecbaeb53aa2a77bc572320fab8b5e446c332d0794089f5d7f61a65aef",
          "name": "aws-event-sources-operator-4ee562cecbaeb53aa2a77bc572320fab8b5e446c332d0794089f5d7f61a65aef-annotation"
        },
        {
          "digest": "sha256:b99aae2ebbfe839d689f273704c0975fef3ad7a1e1f323add0f22036665dbf20",
          "image": "registry.connect.redhat.com/triggermesh/aws-event-sources-operator@sha256:b99aae2ebbfe839d689f273704c0975fef3ad7a1e1f323add0f22036665dbf20",
          "name": "aws-sources-operator"
        },
        {
          "digest": "sha256:d0f77ef39f1845da9aaf6998652a190ee096cf2bbe4ce02e0250a8c2cc89ef3e",
          "image": "registry.connect.redhat.com/triggermesh/aws-event-sources-controller@sha256:d0f77ef39f1845da9aaf6998652a190ee096cf2bbe4ce02e0250a8c2cc89ef3e",
          "name": "aws-event-sources-controller-d0f77ef39f1845da9aaf6998652a190ee096cf2bbe4ce02e0250a8c2cc89ef3e-annotation"
        },
        {
          "digest": "sha256:3ec5e2aee183b8e9c53e6781c60a5679cd7034b982bcb02e81106d4e8faaea5d",
          "image": "registry.connect.redhat.com/triggermesh/awssqssource@sha256:3ec5e2aee183b8e9c53e6781c60a5679cd7034b982bcb02e81106d4e8faaea5d",
          "name": "awssqssource-3ec5e2aee183b8e9c53e6781c60a5679cd7034b982bcb02e81106d4e8faaea5d-annotation"
        },
        {
          "digest": "sha256:4c110671dff51b6939b38632cf1db68ae0779fc1f869c144ac141ab1ecf8ab85",
          "image": "registry.connect.redhat.com/triggermesh/awssnssource@sha256:4c110671dff51b6939b38632cf1db68ae0779fc1f869c144ac141ab1ecf8ab85",
          "name": "awssnssource-4c110671dff51b6939b38632cf1db68ae0779fc1f869c144ac141ab1ecf8ab85-annotation"
        },
        {
          "digest": "sha256:cc86c4d99a7e5c558274220a7c704f9f9615e165742e7d0e5a01d4843670cb97",
          "image": "registry.connect.redhat.com/triggermesh/awskinesissource@sha256:cc86c4d99a7e5c558274220a7c704f9f9615e165742e7d0e5a01d4843670cb97",
          "name": "awskinesissource-cc86c4d99a7e5c558274220a7c704f9f9615e165742e7d0e5a01d4843670cb97-annotation"
        },
        {
          "digest": "sha256:cc43ceb4ce08470b5d45e57a5fd0351c3e738416d53ac175f76c5b6a38996286",
          "image": "registry.connect.redhat.com/triggermesh/awsdynamodbsource@sha256:cc43ceb4ce08470b5d45e57a5fd0351c3e738416d53ac175f76c5b6a38996286",
          "name": "awsdynamodbsource-cc43ceb4ce08470b5d45e57a5fd0351c3e738416d53ac175f76c5b6a38996286-annotation"
        },
        {
          "digest": "sha256:867f8305d1bef84e5605a14f8482dc7f337ab68368c0334eab286aecf3f2ac09",
          "image": "registry.connect.redhat.com/triggermesh/awscognitouserpoolsource@sha256:867f8305d1bef84e5605a14f8482dc7f337ab68368c0334eab286aecf3f2ac09",
          "name": "awscognitouserpoolsource-867f8305d1bef84e5605a14f8482dc7f337ab68368c0334eab286aecf3f2ac09-annotation"
        },
        {
          "digest": "sha256:7b66b99c2b2297310155a11c23920b0705fc8fd9a558b14e80fb3c9862fc0b4f",
          "image": "registry.connect.redhat.com/triggermesh/awscognitoidentitysource@sha256:7b66b99c2b2297310155a11c23920b0705fc8fd9a558b14e80fb3c9862fc0b4f",
          "name": "awscognitoidentitysource-7b66b99c2b2297310155a11c23920b0705fc8fd9a558b14e80fb3c9862fc0b4f-annotation"
        },
        {
          "digest": "sha256:c362c12e56918c8d16ac86f4ff9f3637dcdbc5639e756b4e597a02f7115f70e9",
          "image": "registry.connect.redhat.com/triggermesh/awscodecommitsource@sha256:c362c12e56918c8d16ac86f4ff9f3637dcdbc5639e756b4e597a02f7115f70e9",
          "name": "awscodecommitsource-c362c12e56918c8d16ac86f4ff9f3637dcdbc5639e756b4e597a02f7115f70e9-annotation"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.3.0",
      "version_original": "0.3.0"
    },
    {
      "_id": "604704c7122bd89307e01058",
      "alm_examples": [
        {
          "kind": "Bacula",
          "metadata": {
            "name": "bacula-sample"
          },
          "spec": {
            "affinity": {},
            "image": {
              "app": {
                "pullPolicy": "IfNotPresent",
                "repository": "registry.connect.redhat.com/bacula-enterprise/bacula-enterprise-openshift-plugin-1260",
                "tag": "latest"
              }
            },
            "nodeSelector": {},
            "replicaCount": 1,
            "resources": {},
            "service": {
              "app": {
                "port": 9102,
                "targetPort": 9102,
                "type": "ClusterIP"
              }
            },
            "tolerations": []
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/bacula-enterprise/bacula-enterprise-openshift-plugin-operator@sha256:fc9f5368c10878f1e7fc0e4968c2186d079bb233cb769b7375202bd36ccd5610",
      "bundle_path_digest": "sha256:fc9f5368c10878f1e7fc0e4968c2186d079bb233cb769b7375202bd36ccd5610",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-03-09T05:16:55.830000+00:00",
      "csv_description": "bacula",
      "csv_display_name": "bacula-op",
      "csv_metadata_description": "Installs a minimal Bacula File Daemon image for use with your Bacula Enterprise Director",
      "csv_name": "bacula-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:20:12.678000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "bacula-operator2",
      "provided_apis": [
        {
          "group": "bacula.baculasystems",
          "kind": "Bacula",
          "plural": "baculae",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:d8c9adfb74adf0ccf91f833ca66083a079bbdce99bd9478b7c7d5cfdd2b480a3",
          "image": "registry.connect.redhat.com/bacula-enterprise/bacula-operator-ex@sha256:d8c9adfb74adf0ccf91f833ca66083a079bbdce99bd9478b7c7d5cfdd2b480a3",
          "name": "bacula-operator-ex-d8c9adfb74adf0ccf91f833ca66083a079bbdce99bd9478b7c7d5cfdd2b480a3-annotation"
        },
        {
          "digest": "sha256:4a84cb8c21b63b4c05fc9600b4ecbfee0d99bcf2541e6ba4a39c1d2de6ab8d5c",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:4a84cb8c21b63b4c05fc9600b4ecbfee0d99bcf2541e6ba4a39c1d2de6ab8d5c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:d8c9adfb74adf0ccf91f833ca66083a079bbdce99bd9478b7c7d5cfdd2b480a3",
          "image": "registry.connect.redhat.com/bacula-enterprise/bacula-operator-ex@sha256:d8c9adfb74adf0ccf91f833ca66083a079bbdce99bd9478b7c7d5cfdd2b480a3",
          "name": "manager"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "604704c9122bd89307e01059",
      "alm_examples": [
        {
          "kind": "AirgappedDeployment",
          "metadata": {
            "name": "airgappeddeployment"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            }
          }
        },
        {
          "kind": "AnalyticsProxy",
          "metadata": {
            "name": "analyticsproxy"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7,
              "enabled": false
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            }
          }
        },
        {
          "kind": "DeleteCluster",
          "metadata": {
            "name": "deletecluster"
          },
          "spec": {
            "image_pull_secret": "bas-images-pull-secret"
          }
        },
        {
          "kind": "FullDeployment",
          "metadata": {
            "name": "fulldeployment"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7,
              "enabled": false
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            },
            "prometheus_metrics": [],
            "prometheus_scheduler_frequency": "@daily"
          }
        },
        {
          "kind": "GenerateKey",
          "metadata": {
            "name": "bas-api-key"
          },
          "spec": {
            "image_pull_secret": "bas-images-pull-secret"
          }
        },
        {
          "kind": "StoreForwardMetric",
          "metadata": {
            "name": "storeforwardmetric"
          },
          "spec": {
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            },
            "prometheus_metrics": [],
            "prometheus_scheduler_frequency": "@daily"
          }
        },
        {
          "kind": "Dashboard",
          "metadata": {
            "name": "dashboard"
          },
          "spec": {
            "enable_test_api": true,
            "image_pull_secret": "bas-images-pull-secret"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/behavior-analytics-services-operator-bundle@sha256:79520ef98e9cd360fb2a01519631e3d3c488ada6d3cb8c68334c4f517750c0ac",
      "bundle_path_digest": "sha256:79520ef98e9cd360fb2a01519631e3d3c488ada6d3cb8c68334c4f517750c0ac",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-03-09T05:16:57.297000+00:00",
      "csv_description": "Behavior Analytics Services Operator is a service that collects, transforms and transmits product usage data.\nThe Operator supports deployments using-\nA. Dashboard\nB. Openshift portal or CLI\n\n**A. Dashboard**\n----\nWhen the Operator is installed, the Dashboard is installed too. Goto the Dashboard Custom Resource to get the URL to the Dashboard.\n\n\n**B. Openshift portal or CLI**\n----\n----\nFor manual installation using Openshift portal or CLI, follow the steps below\n\n\n**Pre-requisites**\n----\nStep 1: Create a new Project\n```sh\noc new-project <project-name>\n```\n\nStep 2: Create a secret named \"database-credentials\" for PostgreSQL DB\n```sh\n oc create secret generic database-credentials --from-literal=db_username=<DB Username> --from-literal=db_password=<DB Password> -n <project-name>\n```\n\nStep 3: [Optional] If the images require a secret to pull the container images, create a secret of type dockerconfigjson. Pass this secret name in the CR spec image\\_pull\\_secret\n```sh\noc create secret generic bas-images-pull-secret --from-file=.dockerconfigjson=<path/to/.docker/config.json>  --type=kubernetes.io/dockerconfigjson\n```\n\nStep 4: Create a secret named \"grafana-credentials\" to setup Grafana login credentials\n```sh\n oc create secret generic grafana-credentials --from-literal=grafana_username=<username> --from-literal=grafana_password=<password> -n <project-name>\n```\n\nStep 5: Create a secret named \"mtls-proxy-secret\" which has the client key and certificate to connect to IBM Proxy service. If you don't have certificates then refer link https://developers.cloudflare.com/access/service-auth/mtls-testing#generating-the-root-ca to create root and client certificates. Please ensure to share root certificate with edge@ibm.com to allow access to IBM proxy service using client certificate\n```sh\noc create secret tls mtls-proxy-secret --key client-key.pem --cert client.pem\n```\n\n**Installing the Behavior Analytics Services**\n----\n\nSelect any one of the deployments to setup the Behavior Analytics Services\n1. Full Deployment\n2. Analytics Proxy Deployment\n3. Store and Forward metrics Deployment\n4. Airgapped Analytics Proxy Deployment\n\n| Spec                                                      | Description                                                      | Default Value          |\n| --------------------------------------------------------- | ------------------------------------------------------------ | ---------------------- |\n| `ibmproxyurl`                                               | URL of IBM Proxy Service                                     | `https://iaps.ibm.com`   |\n| `postgres.storage_class`                                    | Storage class of type ReadWriteOnce                          | Required user input        |\n| `postgres.size`                                             | Size (in G) of the storage to be attached to Database        | `10G`                    |\n| `kafka.storage_class`                                       | Storage class of type ReadWriteOnce                          | Required user input        |\n| `kafka.storage_size`                                        | Size (in G) of the storage to be attached to Kafka  | `5G`                     |\n| `kafka.zookeeper_storage_class`                                 | Storage class of type ReadWriteOnce                          | Required user input        |\n| `kafka.zookeeper_storage_size`                                 | Size (in G) of the storage to be attached to Zookeeper | `5G`                     |\n| `airgapped.enabled`                                         | Set value to \"true\" if airgapped setup is to be enabled otherwise keep the default value \"false\" | `false`                  |\n| `airgapped.backup_retention_period`   | Number of days to keep the backup files in the storage       | `7`                     |\n| `airgapped.backup_deletion_frequency` | Frequency of job to delete files from the storage. It accepts values in Cron format (https://en.wikipedia.org/wiki/Cron) | `@daily`                 |\n| `event_scheduler_frequency`                               | Frequency at which events will be forwarded to proxy in Cron format. In case if internet connection available on the cluster only during a certain time frame, specify time in UTC equivalent Cron format. | `@hourly`                |\n| `prometheus_scheduler_frequency`                          | Frequency in Cronjob format to pull metrics from Prometheus  | `@daily`                |\n| `image_pull_secret`                                       | Secret to pull container images from registry                | `bas-images-pull-secret` |\n| `db_archive.frequency`                                    | Frequency in Cronjob format to run archive job                                                           | `@monthly`             |\n| `db_archive.retention_age`                                | Number of months to retain the data in Database              | `6`                    |\n| `db_archive.persistent_storage.storage_class`             |Storage class of type ReadWriteMany         | Required user input    |\n| `db_archive.persistent_storage.storage_size`              | Size (in G) of the storage to be attached for saving airgapped files | `10G`                  |\n| `prometheus_metrics`                                      | Array of metrics information to be send to destination at desired frequency | []\n| `env_type`              | Type of environment. Can be **prod** (HA) or **lite** (non HA) | `lite`                  |\n| `allowed_domains`                                         | Comma separated values of domains allowed by BAS. By default all domains are allowed | '*'\n\n\n**Generating the API Key**\n----\nOnce the deployment is complete, to use the Behavior Analytics Services Endpoints, generate an API key using the CR GenerateKey. This API key to be used to authenticate Behavior Analytics Services Endpoints.\n\nNote- Key can be retrieved from the secret with same name used while creating Generate Key CR's instance.\nOnce you get key from the secret, decode it using below command:\n```sh\necho -n <secret key> | base64 -d\n```\n\n**Deleting the API Key**\n----\nTo revoke the Key, delete the corresponding GenerateKey instance.\n\n**Using Behavior Analytics Services Endpoints**\n---\nFor all BAS APIs, use the Generated API Key for Authentication. Pass it as the Header- X-API-KEY and the key while using the APIs.",
      "csv_display_name": "Behavior Analytics Services",
      "csv_metadata_description": "Behavior Analytics Services is a service that collects, transforms and transmits product usage data.",
      "csv_name": "behavior-analytics-services-operator.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:13:55.649000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "behavior-analytics-services-operator-certified",
      "provided_apis": [
        {
          "group": "bas.ibm.com",
          "kind": "FullDeployment",
          "plural": "fulldeployments",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "GenerateKey",
          "plural": "generatekeys",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "StoreForwardMetric",
          "plural": "storeforwardmetrics",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "AirgappedDeployment",
          "plural": "airgappeddeployments",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "AnalyticsProxy",
          "plural": "analyticsproxies",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "Dashboard",
          "plural": "dashboards",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "DeleteCluster",
          "plural": "deleteclusters",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6b048ead1121a9ca2bcc0d5b2a198a01e889456d5069f303d2af4dcdf465a40f",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6b048ead1121a9ca2bcc0d5b2a198a01e889456d5069f303d2af4dcdf465a40f",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:2b7f3b3e231cfcfcb9ed400b23957ce0ac8df5996376afcde9d1dc2c27184686",
          "image": "registry.connect.redhat.com/ibm-edge/behavior-analytics-services-operator@sha256:2b7f3b3e231cfcfcb9ed400b23957ce0ac8df5996376afcde9d1dc2c27184686",
          "name": "behavior-analytics-services-operator"
        },
        {
          "digest": "sha256:5bc5f622a05b8993785c996890b7e8b19ca680788e525ae9e7833e365c1774f9",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:5bc5f622a05b8993785c996890b7e8b19ca680788e525ae9e7833e365c1774f9",
          "name": "dashboardinstaller"
        },
        {
          "digest": "sha256:13902a13f7bca0d346e1af4719ac0be4b92d8d283c2c35068ecc1f1dedd676ab",
          "image": "registry.connect.redhat.com/ibm-edge/event-api@sha256:13902a13f7bca0d346e1af4719ac0be4b92d8d283c2c35068ecc1f1dedd676ab",
          "name": "event_api"
        },
        {
          "digest": "sha256:e5dc124a4e9c9b1a85fc421c557bdd071b25330a093c61ba7430d69d477fcd4b",
          "image": "registry.connect.redhat.com/ibm-edge/store-api@sha256:e5dc124a4e9c9b1a85fc421c557bdd071b25330a093c61ba7430d69d477fcd4b",
          "name": "store_api"
        },
        {
          "digest": "sha256:819ffaf71e72b744cd9d8ce8fb40a60f1a2ada42c27bdfd160e6678b4538c38b",
          "image": "registry.connect.redhat.com/ibm-edge/event-reader@sha256:819ffaf71e72b744cd9d8ce8fb40a60f1a2ada42c27bdfd160e6678b4538c38b",
          "name": "reader"
        },
        {
          "digest": "sha256:93dd46f5a4e7cf5ff2b9c440fb75147bd7dffb426ba261355f39adcf91d86117",
          "image": "registry.connect.redhat.com/ibm-edge/event-scheduler@sha256:93dd46f5a4e7cf5ff2b9c440fb75147bd7dffb426ba261355f39adcf91d86117",
          "name": "event_scheduler"
        },
        {
          "digest": "sha256:b7feb7e1ab0faa1fe2ec0fc0ce7d823e5476e9f5c13d7ed6a4c1eff013bf07bc",
          "image": "registry.connect.redhat.com/ibm-edge/prometheus-scheduler@sha256:b7feb7e1ab0faa1fe2ec0fc0ce7d823e5476e9f5c13d7ed6a4c1eff013bf07bc",
          "name": "prometheus_scheduler"
        },
        {
          "digest": "sha256:5af6f4603b6c5a173f75a408aabf806e660ce60ced5d3dbe76a0ccfcb01c78da",
          "image": "registry.connect.redhat.com/ibm-edge/pgo-client@sha256:5af6f4603b6c5a173f75a408aabf806e660ce60ced5d3dbe76a0ccfcb01c78da",
          "name": "pgo_client"
        },
        {
          "digest": "sha256:865d9288eb8a2ab50c1e75bf7849b0a8e4b33d0f72a984eed22639a20aeb8c7d",
          "image": "registry.connect.redhat.com/ibm-edge/reverse-proxy@sha256:865d9288eb8a2ab50c1e75bf7849b0a8e4b33d0f72a984eed22639a20aeb8c7d",
          "name": "nginx"
        },
        {
          "digest": "sha256:ca3402d3298ee14a1cada233bc0fe6d86eb9d9ed0bc7773940fbfecef8e35972",
          "image": "registry.redhat.io/openshift4/ose-grafana@sha256:ca3402d3298ee14a1cada233bc0fe6d86eb9d9ed0bc7773940fbfecef8e35972",
          "name": "grafana"
        },
        {
          "digest": "sha256:4fc96dc7a835c37dd3441a2c78e094cbfff8ea7fc8432e99f979c00965184260",
          "image": "registry.redhat.io/openshift3/ose-kube-state-metrics@sha256:4fc96dc7a835c37dd3441a2c78e094cbfff8ea7fc8432e99f979c00965184260",
          "name": "ksm"
        },
        {
          "digest": "sha256:e42df9b4eac95f43d4abafa1cdfe4ea471941cb884d454a58533f3650d667064",
          "image": "registry.connect.redhat.com/ibm-edge/growth-stack-base@sha256:e42df9b4eac95f43d4abafa1cdfe4ea471941cb884d454a58533f3650d667064",
          "name": "init_container"
        },
        {
          "digest": "sha256:d748c21a55796827da82c61f162b505c59451cba24f1874e5185f21275b6bddc",
          "image": "registry.access.redhat.com/ubi8/ubi@sha256:d748c21a55796827da82c61f162b505c59451cba24f1874e5185f21275b6bddc",
          "name": "ubi"
        },
        {
          "digest": "sha256:a05b0b82ca02f4cf731f0d18c1196084d8f3c1d4c78e5d4e6a2b593efe274bc7",
          "image": "registry.connect.redhat.com/ibm-edge/airgap-download-ui@sha256:a05b0b82ca02f4cf731f0d18c1196084d8f3c1d4c78e5d4e6a2b593efe274bc7",
          "name": "download_ui"
        },
        {
          "digest": "sha256:0151e5dbe0a25e30a0f22b788329f35a918ab8649c59ebd3fa1e0d1dd0c3bb3f",
          "image": "registry.connect.redhat.com/ibm-edge/bas-operator-dashboard@sha256:0151e5dbe0a25e30a0f22b788329f35a918ab8649c59ebd3fa1e0d1dd0c3bb3f",
          "name": "dashboard_ui"
        },
        {
          "digest": "sha256:5e31ce8745926e0116827b1b658800dd3e8b91cd1800be4f9943a84a1c023f78",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:5e31ce8745926e0116827b1b658800dd3e8b91cd1800be4f9943a84a1c023f78",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "image": "registry.connect.redhat.com/crunchydata/pgo-deployer@sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "name": "pgo_deployer"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "604704ca6280a414853ec50c",
      "alm_examples": [
        {
          "kind": "BlackduckConnector",
          "metadata": {
            "name": "blackduckconnector"
          },
          "spec": {
            "artifactoryProcessor": {
              "dumper": false,
              "enabled": false,
              "expose": "None",
              "resources": {
                "requests": {
                  "cpu": "300m",
                  "memory": "1300Mi"
                }
              }
            },
            "blackduck": {
              "connectionsEnvironmentVariableName": "blackduck.json",
              "tlsVerification": false
            },
            "core": {
              "expose": "None",
              "port": 3001,
              "resources": {
                "requests": {
                  "cpu": "300m",
                  "memory": "1300Mi"
                }
              },
              "timings": {
                "checkForStalledScansPauseHours": 999999,
                "clientTimeoutMilliseconds": 100000,
                "modelMetricsPauseSeconds": 15,
                "stalledScanClientTimeoutHours": 999999,
                "unknownImagePauseMilliseconds": 15000
              },
              "useMockMode": false
            },
            "externalBlackDuck": [
              {
                "concurrentScanLimit": 3,
                "domain": "example.blackduck.domain.com",
                "password": "example_password",
                "port": 443,
                "scheme": "https",
                "user": "example_user"
              }
            ],
            "fullnameOverride": "",
            "imageGetter": {
              "createImagesOnly": false,
              "host": "localhost",
              "imagePullerType": "skopeo",
              "port": 3004,
              "resources": {
                "requests": {
                  "cpu": "300m",
                  "memory": "1300Mi"
                }
              }
            },
            "imageProcessor": {
              "enabled": false,
              "resources": {
                "requests": {
                  "cpu": "300m",
                  "memory": "1300Mi"
                }
              }
            },
            "imagePullSecrets": [],
            "imageTag": "2.2.5",
            "logLevel": "debug",
            "nameOverride": "",
            "podProcessor": {
              "enabled": true,
              "nameSpaceFilter": "",
              "resources": {
                "requests": {
                  "cpu": "300m",
                  "memory": "1300Mi"
                }
              }
            },
            "processor": {
              "annotationIntervalSeconds": 30,
              "certificate": "",
              "certificateKey": "",
              "dumpIntervalMinutes": 30,
              "port": 3002
            },
            "prometheus": {
              "affinity": {},
              "enabled": false,
              "expose": "None",
              "imageTag": "v2.1.0",
              "nodeSelector": {},
              "podSecurityContext": {},
              "registry": "docker.io/prom",
              "resources": {
                "requests": {
                  "cpu": "300m",
                  "memory": "1300Mi"
                }
              },
              "securityContext": {},
              "tolerations": []
            },
            "quayProcessor": {
              "enabled": false,
              "expose": "None",
              "resources": {
                "requests": {
                  "cpu": "300m",
                  "memory": "1300Mi"
                }
              }
            },
            "registry": "docker.io/blackducksoftware",
            "scanner": {
              "blackDuckClientTimeoutSeconds": 600,
              "imageDirectory": "/var/images",
              "port": 3003,
              "replicas": 1,
              "resources": {
                "requests": {
                  "cpu": "300m",
                  "memory": "1300Mi"
                }
              }
            },
            "securedRegistries": [],
            "status": "Running"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/blackducksoftware/blackduck-connector-operator-bundle@sha256:17b255728650f2fdf7e7f289a9b8cfdb96bc2d283709637c0b540690512dfe70",
      "bundle_path_digest": "sha256:17b255728650f2fdf7e7f289a9b8cfdb96bc2d283709637c0b540690512dfe70",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-03-09T05:16:58.556000+00:00",
      "csv_description": "[Black Duck Connector Operator](https://synopsys.atlassian.net/wiki/spaces/BDLM/pages/34341165/OpsSight+Installation) is a cloud-native administration utility for Synopsys software. Black Duck Connector Operator assists in the deployment and management of Black Duck's integration with Kubernetes and Red Hat OpenShift environment.\n\nThe Operator deployment can be managed by a utility called [synopsysctl](https://synopsys.atlassian.net/wiki/spaces/BDLM/pages/34373652/Synopsysctl). synopsysctl makes it easy to deploy this Operator, and it eliminates the need to edit YML/JSON configuration files when deploying and managing software. Synopsysctl provides a rich set of command-line parameters to allow for fast and highly-configurable deployments of Black Duck, Black Duck Connector, and Black Duck Alert. synopsysctl\u2019s interface mimics that of kubectl and oc, making it immediately familiar to anyone with Kubernetes and/or Red Hat OpenShift experience.\n\n## Black Duck\n[Black Duck](https://www.synopsys.com/software-integrity/security-testing/software-composition-analysis.html) is a comprehensive solution for managing security, license compliance, and code quality risks that come from the use of open source in applications and containers. Black Duck gives you unmatched visibility into third-party code, enabling you to control it across your software supply chain and throughout the application life cycle.\n\n### Supported Features\n\n* **Find and fix security vulnerabilities** at each stage in the SDLC, with detailed, vulnerability-specific remediation guidance and technical insight.\n\n* **Eliminate risk of open source license** noncompliance and safeguard your intellectual property by using the industry\u2019s largest open source knowledge base to identify which of 2,500+ licenses are relevant to the open source in your applications.\n\n* **Scan virtually any software, firmware, and source code** to generate acomprehensive bill of materials (BoM) of what\u2019s inside.\n\n* **Automatically monitor for new vulnerabilities** hat affect your BoM, with custom policies and workflow triggers to accelerate remediation and reduce your risk exposure.\n\n## Black Duck Connector\n[Synopsys Black Duck Connector](https://synopsys.atlassian.net/wiki/spaces/BDLM/pages/34242566/OpsSight) for Red Hat OpenShift Container Platform provides automated open source identification and monitoring in all container images in a Kubernetes or OpenShift cluster to give teams visibility into, and control over, the risks associated with open source components in those images.\n\n### Supported Features\n\n* **Automated Detection** - Black Duck connector's\u2019s automated multifactor open source detection inventories all the open source in container images as they are deployed.\n\n* **Security Intelligence** -  Black Duck Enhanced Vulnerability Data identifies all known vulnerabilities for the open source in your container images while actionable mitigation and remediation guidance helps minimize exploit risk.\n\n* **Policy Management** - Black Duck connector's policy management allows teams to define open source use and security policies, which are evaluated with each scan and documented as metadata on your containers, allowing you to flag images that violate policies and prevent them from deploying to production.\n\n* **Continous Monitoring** - Black Duck connector continuously monitors for newly reported open source security vulnerabilities associated with open source in use, providing same-day alerts so teams can understand how newly discovered vulnerabilities affect their containers in production.\n\n## About Synopsys\n\n[Synopsys Software Integrity](https://www.synopsys.com/software-integrity.html) helps development teams build secure, high-quality software, minimizing risks while maximizing speed and productivity. Synopsys, a recognized leader in application security, provides static analysis, software composition analysis, and dynamic analysis solutions that enable teams to quickly find and fix vulnerabilities and defects in proprietary code, open source components, and application behavior.",
      "csv_display_name": "Black Duck Connector Operator",
      "csv_metadata_description": "This Operator is a cloud-native administration utility for Synopsys's Black Duck integration with OpenShift",
      "csv_name": "blackduck-connector-operator.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:15:31.084000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "blackduck-connector-operator",
      "provided_apis": [
        {
          "group": "charts.synopsys.com",
          "kind": "BlackduckConnector",
          "plural": "blackduckconnectors",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:688d3d8d6380a4332c1df78cc0de521b8769b6518e9725a6943521d666c45a79",
          "image": "registry.connect.redhat.com/blackducksoftware/blackduck-connector-operator@sha256:688d3d8d6380a4332c1df78cc0de521b8769b6518e9725a6943521d666c45a79",
          "name": "manager"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "604708415a00810ecaf7c40f",
      "alm_examples": [
        {
          "kind": "CertManager",
          "metadata": {
            "name": "cert-manager",
            "namespace": "cert-manager"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jetstack/cert-manager-operator-bundle@sha256:fe066f805417beb195a56d7c8398eb2ca5708ccafa1a893a7a689fdec96fb9e8",
      "bundle_path_digest": "sha256:fe066f805417beb195a56d7c8398eb2ca5708ccafa1a893a7a689fdec96fb9e8",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-03-09T05:31:45.144000+00:00",
      "csv_description": "x509 certificate management for Kubernetes",
      "csv_display_name": "cert-manager",
      "csv_metadata_description": "x509 certificate management for Kubernetes",
      "csv_name": "cert-manager-operator.v0.15.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:20:55.141000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "cert-manager-operator",
      "provided_apis": [
        {
          "group": "operator.cert-manager.io",
          "kind": "CertManager",
          "plural": "certmanagers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:a41989d2b91e16d9ecc3f99dafd2a5f3f983587373d179adc579d2fda4978bf8",
          "image": "registry.connect.redhat.com/jetstack/cert-manager-operator@sha256:a41989d2b91e16d9ecc3f99dafd2a5f3f983587373d179adc579d2fda4978bf8",
          "name": "cert-manager-operator-a41989d2b91e16d9ecc3f99dafd2a5f3f983587373d179adc579d2fda4978bf8-annotation"
        },
        {
          "digest": "sha256:a41989d2b91e16d9ecc3f99dafd2a5f3f983587373d179adc579d2fda4978bf8",
          "image": "registry.connect.redhat.com/jetstack/cert-manager-operator@sha256:a41989d2b91e16d9ecc3f99dafd2a5f3f983587373d179adc579d2fda4978bf8",
          "name": "cert-manager-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.15.3",
      "version_original": "0.15.3"
    },
    {
      "_id": "60470842dbb14c0b8248babe",
      "alm_examples": [
        {
          "kind": "CertManager",
          "metadata": {
            "name": "cert-manager",
            "namespace": "cert-manager"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jetstack/cert-manager-operator-bundle@sha256:fe066f805417beb195a56d7c8398eb2ca5708ccafa1a893a7a689fdec96fb9e8",
      "bundle_path_digest": "sha256:fe066f805417beb195a56d7c8398eb2ca5708ccafa1a893a7a689fdec96fb9e8",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2021-03-09T05:31:46.347000+00:00",
      "csv_description": "x509 certificate management for Kubernetes",
      "csv_display_name": "cert-manager",
      "csv_metadata_description": "x509 certificate management for Kubernetes",
      "csv_name": "cert-manager-operator.v0.15.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:21:49.724000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "cert-manager-operator",
      "provided_apis": [
        {
          "group": "operator.cert-manager.io",
          "kind": "CertManager",
          "plural": "certmanagers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:a41989d2b91e16d9ecc3f99dafd2a5f3f983587373d179adc579d2fda4978bf8",
          "image": "registry.connect.redhat.com/jetstack/cert-manager-operator@sha256:a41989d2b91e16d9ecc3f99dafd2a5f3f983587373d179adc579d2fda4978bf8",
          "name": "cert-manager-operator-a41989d2b91e16d9ecc3f99dafd2a5f3f983587373d179adc579d2fda4978bf8-annotation"
        },
        {
          "digest": "sha256:a41989d2b91e16d9ecc3f99dafd2a5f3f983587373d179adc579d2fda4978bf8",
          "image": "registry.connect.redhat.com/jetstack/cert-manager-operator@sha256:a41989d2b91e16d9ecc3f99dafd2a5f3f983587373d179adc579d2fda4978bf8",
          "name": "cert-manager-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.15.3",
      "version_original": "0.15.3"
    },
    {
      "_id": "6047084bdbb14c0b8248bac1",
      "alm_examples": [
        {
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:4ac5d2ae655403f7cb1cede3d4bab2adf1d996b839bc289b76c5acd3299f3552",
      "bundle_path_digest": "sha256:4ac5d2ae655403f7cb1cede3d4bab2adf1d996b839bc289b76c5acd3299f3552",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-03-09T05:31:55.031000+00:00",
      "csv_description": "Cloud Native PostgreSQL is an operator designed by EnterpriseDB\nto manage PostgreSQL workloads on any supported Kubernetes\ncluster running in private, public, or hybrid cloud environments,\nincluding OpenShift.\nCloud Native PostgreSQL adheres to DevOps principles and concepts\nsuch as declarative configuration and immutable infrastructure.\n\nIt defines a new Kubernetes resource called \"Cluster\" representing a PostgreSQL\ncluster made up of a single primary and an optional number of replicas that co-exist\nin a chosen Kubernetes namespace for High Availability and offloading of\nread-only queries.\n\nApplications that reside in the same Kubernetes cluster can access the\nPostgreSQL database using a service which is solely managed by the operator,\nwithout having to worry about changes of the primary role following a failover\nor a switchover. Applications that reside outside the Kubernetes cluster need\nto configure an Ingress object to expose the service via TCP.\n\nCloud Native PostgreSQL works with PostgreSQL (13, 12, 11 and 10) and\nEDB Postgres Advanced (13, 12, 11 and 10), and it is available under\nthe EnterpriseDB Limited Use License.\nYou can evaluate Cloud Native PostgreSQL for free.\nYou need a valid license key to use Cloud Native PostgreSQL in production.\n\n# Main features\n\n* Direct integration with Kubernetes API server for High Availability, without requiring an external tool\n* Self-Healing capability, through:\n    * failover of the primary instance by promoting the most aligned replica\n    * automated recreation of a replica\n* Planned switchover of the primary instance by promoting a selected replica\n* Scale up/down capabilities\n* Definition of an arbitrary number of instances (minimum 1 - one primary server)\n* Definition of the read-write service, to connect your applications to the only primary server of the cluster\n* Definition of the read-only service, to connect your applications to any of the instances for reading workloads\n* Support for Local Persistent Volumes with PVC templates\n* Reuse of Persistent Volumes storage in Pods\n* Rolling updates for PostgreSQL minor versions and operator upgrades\n* TLS connections and client certificate authentication\n* Continuous backup to an S3 compatible object store\n* Full recovery and Point-In-Time recovery from an S3 compatible object store backup\n* Support for Synchronous Replicas\n* Support for node affinity via nodeSelector\n* Standard output logging of PostgreSQL error messages\n",
      "csv_display_name": "Cloud Native PostgreSQL",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:19:18.915000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "version": "v1alpha1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "version": "v1alpha1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:3916a2ebd11c0a926d06d6ebfbd2cf6795ab01af598106ab7cb499ea26949879",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:3916a2ebd11c0a926d06d6ebfbd2cf6795ab01af598106ab7cb499ea26949879",
          "name": "cloud-native-postgresql-3916a2ebd11c0a926d06d6ebfbd2cf6795ab01af598106ab7cb499ea26949879-annotation"
        },
        {
          "digest": "sha256:3916a2ebd11c0a926d06d6ebfbd2cf6795ab01af598106ab7cb499ea26949879",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:3916a2ebd11c0a926d06d6ebfbd2cf6795ab01af598106ab7cb499ea26949879",
          "name": "manager"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "6047084c5a00810ecaf7c413",
      "alm_examples": [
        {
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:4ac5d2ae655403f7cb1cede3d4bab2adf1d996b839bc289b76c5acd3299f3552",
      "bundle_path_digest": "sha256:4ac5d2ae655403f7cb1cede3d4bab2adf1d996b839bc289b76c5acd3299f3552",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "beta",
      "creation_date": "2021-03-09T05:31:56.066000+00:00",
      "csv_description": "Cloud Native PostgreSQL is an operator designed by EnterpriseDB\nto manage PostgreSQL workloads on any supported Kubernetes\ncluster running in private, public, or hybrid cloud environments,\nincluding OpenShift.\nCloud Native PostgreSQL adheres to DevOps principles and concepts\nsuch as declarative configuration and immutable infrastructure.\n\nIt defines a new Kubernetes resource called \"Cluster\" representing a PostgreSQL\ncluster made up of a single primary and an optional number of replicas that co-exist\nin a chosen Kubernetes namespace for High Availability and offloading of\nread-only queries.\n\nApplications that reside in the same Kubernetes cluster can access the\nPostgreSQL database using a service which is solely managed by the operator,\nwithout having to worry about changes of the primary role following a failover\nor a switchover. Applications that reside outside the Kubernetes cluster need\nto configure an Ingress object to expose the service via TCP.\n\nCloud Native PostgreSQL works with PostgreSQL (13, 12, 11 and 10) and\nEDB Postgres Advanced (13, 12, 11 and 10), and it is available under\nthe EnterpriseDB Limited Use License.\nYou can evaluate Cloud Native PostgreSQL for free.\nYou need a valid license key to use Cloud Native PostgreSQL in production.\n\n# Main features\n\n* Direct integration with Kubernetes API server for High Availability, without requiring an external tool\n* Self-Healing capability, through:\n    * failover of the primary instance by promoting the most aligned replica\n    * automated recreation of a replica\n* Planned switchover of the primary instance by promoting a selected replica\n* Scale up/down capabilities\n* Definition of an arbitrary number of instances (minimum 1 - one primary server)\n* Definition of the read-write service, to connect your applications to the only primary server of the cluster\n* Definition of the read-only service, to connect your applications to any of the instances for reading workloads\n* Support for Local Persistent Volumes with PVC templates\n* Reuse of Persistent Volumes storage in Pods\n* Rolling updates for PostgreSQL minor versions and operator upgrades\n* TLS connections and client certificate authentication\n* Continuous backup to an S3 compatible object store\n* Full recovery and Point-In-Time recovery from an S3 compatible object store backup\n* Support for Synchronous Replicas\n* Support for node affinity via nodeSelector\n* Standard output logging of PostgreSQL error messages\n",
      "csv_display_name": "Cloud Native PostgreSQL",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:14:04.893000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "version": "v1alpha1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "version": "v1alpha1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:3916a2ebd11c0a926d06d6ebfbd2cf6795ab01af598106ab7cb499ea26949879",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:3916a2ebd11c0a926d06d6ebfbd2cf6795ab01af598106ab7cb499ea26949879",
          "name": "cloud-native-postgresql-3916a2ebd11c0a926d06d6ebfbd2cf6795ab01af598106ab7cb499ea26949879-annotation"
        },
        {
          "digest": "sha256:3916a2ebd11c0a926d06d6ebfbd2cf6795ab01af598106ab7cb499ea26949879",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:3916a2ebd11c0a926d06d6ebfbd2cf6795ab01af598106ab7cb499ea26949879",
          "name": "manager"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "6047084f122bd89307e01062",
      "alm_examples": [
        {
          "kind": "CnvrgApp",
          "metadata": {
            "name": "cnvrg-app"
          },
          "spec": {
            "clusterDomain": "change.me.to.your.ocp.domain",
            "cnvrgApp": {
              "customAgentTag": "coreoc",
              "image": "registry.connect.redhat.com/cnvrg-core/cnvrg-app@sha256:1a9eaafe401ae598eec8677a0d1f6d3ff7fc7fabe0194d05b1a852155c96fc5a",
              "port": "3000"
            },
            "es": {
              "enabled": "true",
              "image": "registry.connect.redhat.com/cnvrg-core/cnvrg-es@sha256:06b9e348764555f963b5c07a6d4729318598515898df7860ecd497385d2c4943",
              "patchEsNodes": "false"
            },
            "fluentd": {
              "enabled": "false"
            },
            "ingressType": "openshift",
            "istio": {
              "enabled": "false"
            },
            "kibana": {
              "enabled": "false"
            },
            "minio": {
              "enabled": "true",
              "image": "registry.connect.redhat.com/cnvrg-core/cnvrg-minios@sha256:c412738964a8a2478f50d5aa39a3d898d8b44403605e93181eddc11f3ab3282d"
            },
            "nvidiadp": {
              "enabled": "false"
            },
            "pg": {
              "enabled": "true",
              "image": "registry.redhat.io/rhscl/postgresql-12-rhel7@sha256:1884af5eead48d1073f407455fa6e96701dc10ed3b4c023a85ace91d85471f9c"
            },
            "prometheus": {
              "enabled": "false"
            },
            "redis": {
              "enabled": "true",
              "image": "registry.redhat.io/rhscl/redis-32-rhel7@sha256:2bbe69f76a61f0ce099c58d052aae606401dd10f2fb4a4be7d01c85bfa8d57f0"
            },
            "securityMode": "ocp",
            "seeder": {
              "image": "registry.connect.redhat.com/cnvrg-core/cnvrgio-seeder@sha256:998263af21be5a675c99d3db3d292a268d0d8efb47fc54318ff0c7b57bef040b"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cnvrg-core/cnvrgio-operator-bundle@sha256:56f6c78611a26e4ed42e8228067ae4851799224f80d965bb034d7fe36f32b65f",
      "bundle_path_digest": "sha256:56f6c78611a26e4ed42e8228067ae4851799224f80d965bb034d7fe36f32b65f",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-03-09T05:31:59.269000+00:00",
      "csv_description": "#### cnvrg.io is an AI OS for machine learning, transforming the way enterprises manage, scale and accelerate AI and data science development from research to production.\n#### The cnvrg Operator runs within a Kubernetes cluster, and provides a means to deploy and manage the cnvrg cluster components\n* Cnvrg server (webapp + sidekiq)\n* Postgres DB\n* Redis DB\n* Minio Object storage\n* ElasticSearch DB\n\n#### **Before you begin**\n\n#### CnvrgApp have to be deployed into `cnvrg` namespace, thus please create a new project, also make sure you are selecting `cnvrg` project in OCP console when you are deploying CnvrgApp CR.\n```\noc new-project cnvrg\n```\n\n#### Set the `vm.max_map_count` to `262144` on K8S nodes for running [ElasticSearch instace](https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html) either by updating K8S workers nodes\n```\nsysctl -w vm.max_map_count=262144\n```\nor allow `cnvrg-operator` to do it for you\n```\noc adm policy add-scc-to-user privileged system:serviceaccount:cnvrg:cnvrg-privileged\n```\n#### **Installation**\n#### Update `CnvrgApp` CR (use OpenShift Operators YAML View) and set clusterDomain for your deployment. Usually `clusterDomain` should be set to the default OpenShift Route host. For example: `apps.your.openshift.cluster.com`\n```\napiVersion: mlops.cnvrg.io/v1\nkind: CnvrgApp\nmetadata:\n  name: cnvrg-app\nspec:\n  clusterDomain: \"apps.your.openshift.cluster.com\"\n...\n```",
      "csv_display_name": "cnvrg-operator",
      "csv_metadata_description": "Operator for deploying Cnvrg AI OS",
      "csv_name": "cnvrg-operator.v0.352.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:18:59.425000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "cnvrg-operator-marketplace",
      "provided_apis": [
        {
          "group": "mlops.cnvrg.io",
          "kind": "CnvrgApp",
          "plural": "cnvrgapps",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:24c16ffc392a1af0149610495a824cc45eaafae3f57cfd4eec5de25ce4583e8a",
          "image": "registry.connect.redhat.com/cnvrg-core/cnvrgio-operator@sha256:24c16ffc392a1af0149610495a824cc45eaafae3f57cfd4eec5de25ce4583e8a",
          "name": "cnvrgio-operator-24c16ffc392a1af0149610495a824cc45eaafae3f57cfd4eec5de25ce4583e8a-annotation"
        },
        {
          "digest": "sha256:24c16ffc392a1af0149610495a824cc45eaafae3f57cfd4eec5de25ce4583e8a",
          "image": "registry.connect.redhat.com/cnvrg-core/cnvrgio-operator@sha256:24c16ffc392a1af0149610495a824cc45eaafae3f57cfd4eec5de25ce4583e8a",
          "name": "manager"
        },
        {
          "digest": "sha256:1a9eaafe401ae598eec8677a0d1f6d3ff7fc7fabe0194d05b1a852155c96fc5a",
          "image": "registry.connect.redhat.com/cnvrg-core/cnvrg-app@sha256:1a9eaafe401ae598eec8677a0d1f6d3ff7fc7fabe0194d05b1a852155c96fc5a",
          "name": "cnvrg_app"
        },
        {
          "digest": "sha256:998263af21be5a675c99d3db3d292a268d0d8efb47fc54318ff0c7b57bef040b",
          "image": "registry.connect.redhat.com/cnvrg-core/cnvrgio-seeder@sha256:998263af21be5a675c99d3db3d292a268d0d8efb47fc54318ff0c7b57bef040b",
          "name": "cnvrgio_seeder"
        },
        {
          "digest": "sha256:06b9e348764555f963b5c07a6d4729318598515898df7860ecd497385d2c4943",
          "image": "registry.connect.redhat.com/cnvrg-core/cnvrg-es@sha256:06b9e348764555f963b5c07a6d4729318598515898df7860ecd497385d2c4943",
          "name": "cnvrg_es"
        },
        {
          "digest": "sha256:c412738964a8a2478f50d5aa39a3d898d8b44403605e93181eddc11f3ab3282d",
          "image": "registry.connect.redhat.com/cnvrg-core/cnvrg-minios@sha256:c412738964a8a2478f50d5aa39a3d898d8b44403605e93181eddc11f3ab3282d",
          "name": "cnvrg_minios"
        },
        {
          "digest": "sha256:c412738964a8a2478f50d5aa39a3d898d8b44403605e93181eddc11f3ab3282d",
          "image": "registry.connect.redhat.com/cnvrg-core/cnvrg-minios@sha256:c412738964a8a2478f50d5aa39a3d898d8b44403605e93181eddc11f3ab3282d",
          "name": "cnvrg-minios-c412738964a8a2478f50d5aa39a3d898d8b44403605e93181eddc11f3ab3282d-annotation"
        },
        {
          "digest": "sha256:06b9e348764555f963b5c07a6d4729318598515898df7860ecd497385d2c4943",
          "image": "registry.connect.redhat.com/cnvrg-core/cnvrg-es@sha256:06b9e348764555f963b5c07a6d4729318598515898df7860ecd497385d2c4943",
          "name": "cnvrg-es-06b9e348764555f963b5c07a6d4729318598515898df7860ecd497385d2c4943-annotation"
        },
        {
          "digest": "sha256:1884af5eead48d1073f407455fa6e96701dc10ed3b4c023a85ace91d85471f9c",
          "image": "registry.redhat.io/rhscl/postgresql-12-rhel7@sha256:1884af5eead48d1073f407455fa6e96701dc10ed3b4c023a85ace91d85471f9c",
          "name": "postgresql-12-rhel7-1884af5eead48d1073f407455fa6e96701dc10ed3b4c023a85ace91d85471f9c-annotation"
        },
        {
          "digest": "sha256:2bbe69f76a61f0ce099c58d052aae606401dd10f2fb4a4be7d01c85bfa8d57f0",
          "image": "registry.redhat.io/rhscl/redis-32-rhel7@sha256:2bbe69f76a61f0ce099c58d052aae606401dd10f2fb4a4be7d01c85bfa8d57f0",
          "name": "redis-32-rhel7-2bbe69f76a61f0ce099c58d052aae606401dd10f2fb4a4be7d01c85bfa8d57f0-annotation"
        },
        {
          "digest": "sha256:998263af21be5a675c99d3db3d292a268d0d8efb47fc54318ff0c7b57bef040b",
          "image": "registry.connect.redhat.com/cnvrg-core/cnvrgio-seeder@sha256:998263af21be5a675c99d3db3d292a268d0d8efb47fc54318ff0c7b57bef040b",
          "name": "cnvrgio-seeder-998263af21be5a675c99d3db3d292a268d0d8efb47fc54318ff0c7b57bef040b-annotation"
        },
        {
          "digest": "sha256:1a9eaafe401ae598eec8677a0d1f6d3ff7fc7fabe0194d05b1a852155c96fc5a",
          "image": "registry.connect.redhat.com/cnvrg-core/cnvrg-app@sha256:1a9eaafe401ae598eec8677a0d1f6d3ff7fc7fabe0194d05b1a852155c96fc5a",
          "name": "cnvrg-app-1a9eaafe401ae598eec8677a0d1f6d3ff7fc7fabe0194d05b1a852155c96fc5a-annotation"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.352.0",
      "version_original": "0.352.0"
    },
    {
      "_id": "60470852dbb14c0b8248bac3",
      "alm_examples": [
        {
          "kind": "CoralogixLogger",
          "metadata": {
            "name": "coralogix-logger"
          },
          "spec": {
            "cluster_name": "cluster.local",
            "private_key": "00000000-0000-0000-0000-000000000000"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/coralogix/coralogix-operator-bundle@sha256:ae2b55af16cbd21e45ab4bd4483c106c03d77ffce2be61f92f59b36a98c82f41",
      "bundle_path_digest": "sha256:ae2b55af16cbd21e45ab4bd4483c106c03d77ffce2be61f92f59b36a98c82f41",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-03-09T05:32:02.802000+00:00",
      "csv_description": "Coralogix is a machine data analytics SaaS platform that drastically improves the delivery & maintenance process for software providers. Using proprietary machine learning algorithms, Coralogix helps over 100 businesses reduce their issue resolution time, improve customer satisfaction and decrease maintenance costs.",
      "csv_display_name": "Coralogix Operator",
      "csv_metadata_description": "Coralogix is a machine data analytics SaaS platform that drastically improves the delivery & maintenance process for software providers. Using proprietary machine learning algorithms, Coralogix helps over 100 businesses reduce their issue resolution time, improve customer satisfaction and decrease maintenance costs.",
      "csv_name": "coralogix-operator.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:18:35.607000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "coralogix-operator-certified",
      "provided_apis": [
        {
          "group": "loggers.coralogix.com",
          "kind": "CoralogixLogger",
          "plural": "coralogixloggers",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:632138f2f9c874067fa15cf2c3e6f491adae978763acdb8c24348746cc61d8ff",
          "image": "registry.connect.redhat.com/coralogix/coralogix-operator@sha256:632138f2f9c874067fa15cf2c3e6f491adae978763acdb8c24348746cc61d8ff",
          "name": "coralogix-operator-632138f2f9c874067fa15cf2c3e6f491adae978763acdb8c24348746cc61d8ff-annotation"
        },
        {
          "digest": "sha256:ae4c9fc778f996bc75de090062959ae0383325eaf5975fce87a1b3c2b4d8cbca",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:ae4c9fc778f996bc75de090062959ae0383325eaf5975fce87a1b3c2b4d8cbca",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:632138f2f9c874067fa15cf2c3e6f491adae978763acdb8c24348746cc61d8ff",
          "image": "registry.connect.redhat.com/coralogix/coralogix-operator@sha256:632138f2f9c874067fa15cf2c3e6f491adae978763acdb8c24348746cc61d8ff",
          "name": "manager"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "60470855122bd89307e01065",
      "alm_examples": [
        {
          "kind": "Certifai",
          "metadata": {
            "name": "default-certifai"
          },
          "spec": {
            "console": {
              "authorization-type": "none",
              "azure": {
                "account-key": "your account key",
                "account-name": "your account name",
                "sas-token": "your SAS token"
              },
              "gcs": {
                "application-credentials": "{\n  \"type\": \"\",\n  \"project_id\": \"\",\n  \"private_key_id\": \"\",\n  \"private_key\": \"\",\n  \"client_email\": \"\",\n  \"client_id\": \"\",\n  \"auth_uri\": \"\",\n  \"token_uri\": \"\",\n  \"auth_provider_x509_cert_url\": \"\",\n  \"client_x509_cert_url\": \"\"\n}\n"
              },
              "replicas": 1,
              "route-type": "none",
              "s3": {
                "access-key": "your access key",
                "endpoint": "https://s3.amazonaws.com",
                "secret-key": "your secret key",
                "verify-cert": false
              },
              "scan-dir": ""
            },
            "deployment-type": "openshift",
            "dex": {
              "connector": {
                "add-config": "orgs:\n- name: my-org\n",
                "client-id": "clientid",
                "client-secret": "clientsecret",
                "name": "Github",
                "type": "github"
              },
              "enabled": false,
              "replicas": 1
            },
            "reference-model": {
              "enabled": true
            },
            "reporting": {
              "db-conn-str": "postgresql://user:password@service:port/db",
              "enabled": true,
              "period": "*/15 * * * *"
            }
          }
        },
        {
          "kind": "CertifaiScan",
          "metadata": {
            "name": "example-certifai-scan",
            "namespace": "certifai"
          },
          "spec": {
            "scanconfig": {
              "concurrency": 4,
              "scanargs": "command line args here",
              "scandef": "definition file text here"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/c12e/cortex-certifai-operator-bundle@sha256:c85d3cac53bab7690ee87f6a8fc15e3471e6ceff7feecf9749fad89a1e6a12e3",
      "bundle_path_digest": "sha256:c85d3cac53bab7690ee87f6a8fc15e3471e6ceff7feecf9749fad89a1e6a12e3",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2021-03-09T05:32:05.608000+00:00",
      "csv_description": "Cortex Certifai empowers enterprises to identify and mitigate risk and vulnerabilities within AI and deploy trusted AI systems into production. It evaluates AI models and allows users to compare different models or model versions for the following qualities.\n* **Robustness:** measures how well models retain an outcome given changes to the data feature values. The more robust a model is, the greater the changes required to alter the outcome.\n* **Fairness by group:** measures the difference required to change the outcome for different groups implicit in a feature given the same model and dataset. For example, implicit groups male, female, and nonbinary belong to the feature, \u201cgender\u201d. A fair model shows that all 3 groups require a similar amount of change to alter the results.\n* **Explainability:** measures the average simplicity of counterfactual explanations provided for each model. An explanation that requires a single changed feature will score 100%. Explanations that require more changed features will score lower.\n* **Explanations:** display the prediction provided through the generation of counterfactuals for the change that must occur in a dataset with given restrictions to obtain a different outcome. Users can explore the entire dataset one observation at a time to understand what features changed and by how much to obtain a different result.\nSee our [documentation](https://cognitivescale.github.io/cortex-certifai/) for information about how to deploy the Certifai Operator and how to get started using our toolkit.\n## License Copyright 2020 Cognitive Scale, Inc. All Rights Reserved.\nBy downloading you agree to the terms of CognitiveScale's [End User License Agreement](https://www.cognitivescale.com/legal-information/).\n",
      "csv_display_name": "Cortex Certifai Operator",
      "csv_metadata_description": "Cortex Certifai empowers enterprises to identify and mitigate risk and vulnerabilities within AI and deploy trusted AI systems into production.",
      "csv_name": "cortex-certifai-operator.v1.3.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:18:45.291000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "cortex-certifai-operator",
      "provided_apis": [
        {
          "group": "cortex.cognitivescale.com",
          "kind": "Certifai",
          "plural": "certifais",
          "version": "v1"
        },
        {
          "group": "cortex.cognitivescale.com",
          "kind": "CertifaiScan",
          "plural": "certifaiscans",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:ffcdc1d2a404822227b6d2cde6d7476e1cee89383868c30b32840931e6d1d5f3",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-operator@sha256:ffcdc1d2a404822227b6d2cde6d7476e1cee89383868c30b32840931e6d1d5f3",
          "name": "cortex-certifai-operator-ffcdc1d2a404822227b6d2cde6d7476e1cee89383868c30b32840931e6d1d5f3-annotation"
        },
        {
          "digest": "sha256:ffcdc1d2a404822227b6d2cde6d7476e1cee89383868c30b32840931e6d1d5f3",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-operator@sha256:ffcdc1d2a404822227b6d2cde6d7476e1cee89383868c30b32840931e6d1d5f3",
          "name": "cortex-certifai-operator"
        },
        {
          "digest": "sha256:0677ac2f1e3ffe842523cc149f80f06777bde5f54ded18f00044f07bcdf41d0b",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-reference-model-server@sha256:0677ac2f1e3ffe842523cc149f80f06777bde5f54ded18f00044f07bcdf41d0b",
          "name": "refmodel"
        },
        {
          "digest": "sha256:4730f12f47a45600b818c3f504957be98047fea0ccda783cba71565465e5761e",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-console@sha256:4730f12f47a45600b818c3f504957be98047fea0ccda783cba71565465e5761e",
          "name": "console"
        },
        {
          "digest": "sha256:4d0b5e988cb5ab5842b34113f4a114020285b84e6dbc05b88bf9fff3fd086785",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-scanner@sha256:4d0b5e988cb5ab5842b34113f4a114020285b84e6dbc05b88bf9fff3fd086785",
          "name": "scanner"
        },
        {
          "digest": "sha256:8bf9cfbb57a397bbc2e02511a7a507b24d5022d02843900028095d64952ad8af",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-reporting-etl@sha256:8bf9cfbb57a397bbc2e02511a7a507b24d5022d02843900028095d64952ad8af",
          "name": "reporting_etl"
        },
        {
          "digest": "sha256:a6e75a40feea7b838071c4fcb7933eec29955bf5fe7d874400d6a00e2709031f",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:a6e75a40feea7b838071c4fcb7933eec29955bf5fe7d874400d6a00e2709031f",
          "name": "oauth_proxy"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.3.4",
      "version_original": "1.3.4"
    },
    {
      "_id": "60470856122bd89307e01066",
      "alm_examples": [
        {
          "kind": "Cortex5",
          "metadata": {
            "annotations": {
              "helm.operator-sdk/upgrade-force": "True"
            },
            "name": "cortex",
            "namespace": "cortex"
          },
          "spec": {
            "cortex": {
              "csadminAcct": "cogscale",
              "csadminPwd": "${ADMIN_PASSWORD}",
              "csadminUsr": "csadmin",
              "docsToken": "${DOCS_TOKEN}",
              "domains": {
                "api": "https://api.${BASE_DOMAIN}",
                "base": "${BASE_DOMAIN}"
              },
              "imageRegistry": "registry.connect.redhat.com",
              "invitationCode": "${INVITE_CODE}",
              "managedContent": {
                "S3_BUCKET": "${S3_BUCKET_NAME}",
                "S3_ENDPOINT": "https://s3.amazonaws.com",
                "S3_REGION": "${BUCKET_REGION}",
                "accesskey": "${AWS_ACCESS_KEY_ID}",
                "secretkey": "${AWS_SECRET_ACCESS_KEY}"
              },
              "mongodb": {
                "password": "${MONGO_PASSWORD}",
                "username": "mongo"
              },
              "smtp": {
                "email": "${EMAIL}",
                "from": "Cortex Activation <${EMAIL}>",
                "host": "smtp.gmail.com",
                "password": "${SMTP_PASSWORD}",
                "port": 465
              },
              "ssl": {
                "cert": "-----BEGIN CERTIFICATE-----\n-----END CERTIFICATE-----",
                "enabled": true,
                "key": "-----BEGIN PRIVATE KEY-----\n-----END PRIVATE KEY-----"
              },
              "vaultToken": "vault"
            },
            "docker-registry": {
              "configData": {
                "auth": {
                  "token": {
                    "realm": "https://api.${BASE_DOMAIN}/v2/admin/docker/authenticate"
                  }
                }
              },
              "persistence": {
                "size": "50Gi"
              }
            },
            "docs": {
              "cortexLicenseServer": "https://access.cognitivescale.com"
            },
            "filebeat": {
              "enabled": false
            },
            "ingress": {
              "enabled": true,
              "type": "Route"
            },
            "kong": {
              "pgbouncer": {
                "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbouncer",
                "tag": "ubi7-12.2-4.2.2"
              }
            },
            "kongui": {
              "enabled": false
            },
            "minio": {
              "enabled": false
            },
            "nginx-ingress": {
              "enabled": false
            },
            "postgresql": {
              "volumePermissions": {
                "enabled": false
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/c12e/cortex-fabric-operator-bundle@sha256:90a89c97f73301c7f82424ca069677217faa61095b41401bbd6024b72dde108c",
      "bundle_path_digest": "sha256:90a89c97f73301c7f82424ca069677217faa61095b41401bbd6024b72dde108c",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-03-09T05:32:06.735000+00:00",
      "csv_description": "Radically simplifies design, development, delivery, and management of cognitive processes that get smarter and better with time while ensuring that these self-learning systems are explainable and transparent in their operations. Our software includes a set of development and orchestration tools and a set of industry-optimized Accelerators.\n\n###Support for Any Model, Any Data\nCortex Fabric supports any model developed in languages such as R, Python, Java as well as frameworks such as TensorFlow, PyTorch, Scikit-Learn. Cortex supports models developed using Amazon SageMaker, IBM Watson, Google AI, Azure ML Algorithmia among others. With over 120+ connectors, Cortex Fabric supports connectivity to a variety of different sources including  S3, Mongo, Postgres, Box, CRM, Adobe Analytics amongst others.\n\n###Orchestration and Composition\nUsing Cortex Studio, an open and extensible visual workbench, developers and data scientists can collaborate to create and deploy enterprise grade cognitive business processes that are composed of agents, skills, ML models, and datasets. Agents are reusable AI system patterns that solve an industry problem once it is trained with your data. Agents orchestrate the execution of skills that are reusable building blocks of ML models and logic that can be easily combined with datasets and other skills to build AI systems.\n\n###Contextualized Insights\nAt the core of Cortex Fabric is Profile-of-One, which gives you the tools you need to deliver contextualized and actionable insights. It includes a Profile Explorer UI interface, CLI commands, and a python library that Cortex Fabric users can employ to create a focused set of attributes and schemas for an entity that can then be applied to AI applications that serve entity-specific results (e.g. suggestion engines).\n\n###Any Cloud, On-Prem\nFabric hosts your data, models, runtime services, and compute where you need it\u2014within your enterprise or on your preferred cloud (RedHat OpenShift, GCP, AWS, or Azure).\n\n###End to End AI Lifecycle\nCortex Fabric provides the necessary lifecycle capabilities for teams to develop, test, deploy, and manage AI systems as they move from development into production. It provides tools for data scientists to explore data and prototype models; for developers to orchestrate and integrate data and models to develop AI solutions; for system administrators to promote these solutions from a development environment into production; and for devops engineers to monitor and maintain deployed solutions.\n\n###Prediction Engines\nThe Cortex Fabric Accelerators are prediction engines that enable businesses to improve customer engagement and lifetime value; to boost employee expertise to streamline business processes and decisions; and to protect brand reputation and digital infrastructure from AI business risks. They are optimized to run in Cortex Fabric and include reusable skills, ML models, datasets, and agents.\n\n",
      "csv_display_name": "Cortex Fabric",
      "csv_metadata_description": "Collaborative platform for building, deploying, and managing trusted AI systems.",
      "csv_name": "cortex-fabric-operator.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:19:55.333000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "cortex-fabric-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Cortex5",
          "plural": "cortex5s",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:9af9c8a30358cdf5dad6484ffca80fa9da289de13ca10652682df81547cf0383",
          "image": "registry.connect.redhat.com/c12e/cortex-fabric-operator@sha256:9af9c8a30358cdf5dad6484ffca80fa9da289de13ca10652682df81547cf0383",
          "name": "cortex-fabric-operator-9af9c8a30358cdf5dad6484ffca80fa9da289de13ca10652682df81547cf0383-annotation"
        },
        {
          "digest": "sha256:9af9c8a30358cdf5dad6484ffca80fa9da289de13ca10652682df81547cf0383",
          "image": "registry.connect.redhat.com/c12e/cortex-fabric-operator@sha256:9af9c8a30358cdf5dad6484ffca80fa9da289de13ca10652682df81547cf0383",
          "name": "cortex-fabric-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "60470857dbb14c0b8248bac5",
      "alm_examples": [
        {
          "kind": "Cortex5",
          "metadata": {
            "annotations": {
              "helm.operator-sdk/upgrade-force": "True"
            },
            "name": "cortex",
            "namespace": "cortex"
          },
          "spec": {
            "cortex": {
              "csadminAcct": "cogscale",
              "csadminPwd": "${ADMIN_PASSWORD}",
              "csadminUsr": "csadmin",
              "docsToken": "${DOCS_TOKEN}",
              "domains": {
                "api": "https://api.${BASE_DOMAIN}",
                "base": "${BASE_DOMAIN}"
              },
              "imageRegistry": "registry.connect.redhat.com",
              "invitationCode": "${INVITE_CODE}",
              "managedContent": {
                "S3_BUCKET": "${S3_BUCKET_NAME}",
                "S3_ENDPOINT": "https://s3.amazonaws.com",
                "S3_REGION": "${BUCKET_REGION}",
                "accesskey": "${AWS_ACCESS_KEY_ID}",
                "secretkey": "${AWS_SECRET_ACCESS_KEY}"
              },
              "mongodb": {
                "password": "${MONGO_PASSWORD}",
                "username": "mongo"
              },
              "smtp": {
                "email": "${EMAIL}",
                "from": "Cortex Activation <${EMAIL}>",
                "host": "smtp.gmail.com",
                "password": "${SMTP_PASSWORD}",
                "port": 465
              },
              "ssl": {
                "cert": "-----BEGIN CERTIFICATE-----\n-----END CERTIFICATE-----",
                "enabled": true,
                "key": "-----BEGIN PRIVATE KEY-----\n-----END PRIVATE KEY-----"
              },
              "vaultToken": "vault"
            },
            "docker-registry": {
              "configData": {
                "auth": {
                  "token": {
                    "realm": "https://api.${BASE_DOMAIN}/v2/admin/docker/authenticate"
                  }
                }
              },
              "persistence": {
                "size": "50Gi"
              }
            },
            "docs": {
              "cortexLicenseServer": "https://access.cognitivescale.com"
            },
            "filebeat": {
              "enabled": false
            },
            "ingress": {
              "enabled": true,
              "type": "Route"
            },
            "kong": {
              "pgbouncer": {
                "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbouncer",
                "tag": "ubi7-12.2-4.2.2"
              }
            },
            "kongui": {
              "enabled": false
            },
            "minio": {
              "enabled": false
            },
            "nginx-ingress": {
              "enabled": false
            },
            "postgresql": {
              "volumePermissions": {
                "enabled": false
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/c12e/cortex-fabric-operator-bundle@sha256:90a89c97f73301c7f82424ca069677217faa61095b41401bbd6024b72dde108c",
      "bundle_path_digest": "sha256:90a89c97f73301c7f82424ca069677217faa61095b41401bbd6024b72dde108c",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-03-09T05:32:07.763000+00:00",
      "csv_description": "Radically simplifies design, development, delivery, and management of cognitive processes that get smarter and better with time while ensuring that these self-learning systems are explainable and transparent in their operations. Our software includes a set of development and orchestration tools and a set of industry-optimized Accelerators.\n\n###Support for Any Model, Any Data\nCortex Fabric supports any model developed in languages such as R, Python, Java as well as frameworks such as TensorFlow, PyTorch, Scikit-Learn. Cortex supports models developed using Amazon SageMaker, IBM Watson, Google AI, Azure ML Algorithmia among others. With over 120+ connectors, Cortex Fabric supports connectivity to a variety of different sources including  S3, Mongo, Postgres, Box, CRM, Adobe Analytics amongst others.\n\n###Orchestration and Composition\nUsing Cortex Studio, an open and extensible visual workbench, developers and data scientists can collaborate to create and deploy enterprise grade cognitive business processes that are composed of agents, skills, ML models, and datasets. Agents are reusable AI system patterns that solve an industry problem once it is trained with your data. Agents orchestrate the execution of skills that are reusable building blocks of ML models and logic that can be easily combined with datasets and other skills to build AI systems.\n\n###Contextualized Insights\nAt the core of Cortex Fabric is Profile-of-One, which gives you the tools you need to deliver contextualized and actionable insights. It includes a Profile Explorer UI interface, CLI commands, and a python library that Cortex Fabric users can employ to create a focused set of attributes and schemas for an entity that can then be applied to AI applications that serve entity-specific results (e.g. suggestion engines).\n\n###Any Cloud, On-Prem\nFabric hosts your data, models, runtime services, and compute where you need it\u2014within your enterprise or on your preferred cloud (RedHat OpenShift, GCP, AWS, or Azure).\n\n###End to End AI Lifecycle\nCortex Fabric provides the necessary lifecycle capabilities for teams to develop, test, deploy, and manage AI systems as they move from development into production. It provides tools for data scientists to explore data and prototype models; for developers to orchestrate and integrate data and models to develop AI solutions; for system administrators to promote these solutions from a development environment into production; and for devops engineers to monitor and maintain deployed solutions.\n\n###Prediction Engines\nThe Cortex Fabric Accelerators are prediction engines that enable businesses to improve customer engagement and lifetime value; to boost employee expertise to streamline business processes and decisions; and to protect brand reputation and digital infrastructure from AI business risks. They are optimized to run in Cortex Fabric and include reusable skills, ML models, datasets, and agents.\n\n",
      "csv_display_name": "Cortex Fabric",
      "csv_metadata_description": "Collaborative platform for building, deploying, and managing trusted AI systems.",
      "csv_name": "cortex-fabric-operator.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:17:50.754000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "cortex-fabric-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Cortex5",
          "plural": "cortex5s",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:9af9c8a30358cdf5dad6484ffca80fa9da289de13ca10652682df81547cf0383",
          "image": "registry.connect.redhat.com/c12e/cortex-fabric-operator@sha256:9af9c8a30358cdf5dad6484ffca80fa9da289de13ca10652682df81547cf0383",
          "name": "cortex-fabric-operator-9af9c8a30358cdf5dad6484ffca80fa9da289de13ca10652682df81547cf0383-annotation"
        },
        {
          "digest": "sha256:9af9c8a30358cdf5dad6484ffca80fa9da289de13ca10652682df81547cf0383",
          "image": "registry.connect.redhat.com/c12e/cortex-fabric-operator@sha256:9af9c8a30358cdf5dad6484ffca80fa9da289de13ca10652682df81547cf0383",
          "name": "cortex-fabric-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "60470859122bd89307e01067",
      "alm_examples": [
        {
          "kind": "Hub",
          "metadata": {
            "name": "default-hub"
          },
          "spec": {
            "hub": {
              "container-port": 3000,
              "replicas": 1,
              "route-type": "http",
              "theme-spec": {
                "configmap-name": "c12e-healthcare-hub-theme",
                "configmap-value-base64": "YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnTWFwCm1ldGFkYXRhOgogIG5hbWU6IGMxMmUtaGVhbHRoY2FyZS1odWItdGhlbWUKZGF0YToKICBjb3J0ZXgtbG9nby5zdmc6IHwKICAgIDw/eG1sIHZlcnNpb249IjEuMCIgZW5jb2Rpbmc9IlVURi04Ij8+CiAgICA8c3ZnIHdpZHRoPSIyMjdweCIgaGVpZ2h0PSI3MHB4IiB2aWV3Qm94PSIwIDAgMjI3IDcwIiB2ZXJzaW9uPSIxLjEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiPgogICAgPCEtLSBHZW5lcmF0b3I6IHNrZXRjaHRvb2wgNjMuMSAoMTAxMDEwKSAtIGh0dHBzOi8vc2tldGNoLmNvbSAtLT4KICAgIDx0aXRsZT40NzIzRjlDOC0yNkZFLTRCRkQtOTk0NS1BQ0IxRDYzODY2MENAMXg8L3RpdGxlPgogICAgPGRlc2M+Q3JlYXRlZCB3aXRoIHNrZXRjaHRvb2wuPC9kZXNjPgogICAgPGRlZnM+CiAgICA8bGluZWFyR3JhZGllbnQgeDE9IjEuNDgxMzk4OTglIiB5MT0iMCUiIHgyPSI5OC41MTg2MDElIiB5Mj0iMTAwJSIgaWQ9ImxpbmVhckdyYWRpZW50LTEiPgogICAgPHN0b3Agc3RvcC1jb2xvcj0iIzAwQUZGMSIgb2Zmc2V0PSIwJSI+PC9zdG9wPgogICAgPHN0b3Agc3RvcC1jb2xvcj0iIzAwRDA4MCIgb2Zmc2V0PSIxMDAlIj48L3N0b3A+CiAgICA8L2xpbmVhckdyYWRpZW50PgogICAgPGVsbGlwc2UgaWQ9InBhdGgtMiIgY3g9IjM0LjQ3NzYxMTkiIGN5PSIzNSIgcng9IjM0LjQ3NzYxMTkiIHJ5PSIzNSI+PC9lbGxpcHNlPgogICAgPGZpbHRlciB4PSItMi45JSIgeT0iLTIuOSUiIHdpZHRoPSIxMDUuOCUiIGhlaWdodD0iMTA1LjclIiBmaWx0ZXJVbml0cz0ib2JqZWN0Qm91bmRpbmdCb3giIGlkPSJmaWx0ZXItMyI+CiAgICA8ZmVHYXVzc2lhbkJsdXIgc3RkRGV2aWF0aW9uPSIxLjUiIGluPSJTb3VyY2VBbHBoYSIgcmVzdWx0PSJzaGFkb3dCbHVySW5uZXIxIj48L2ZlR2F1c3NpYW5CbHVyPgogICAgPGZlT2Zmc2V0IGR4PSIwIiBkeT0iMSIgaW49InNoYWRvd0JsdXJJbm5lcjEiIHJlc3VsdD0ic2hhZG93T2Zmc2V0SW5uZXIxIj48L2ZlT2Zmc2V0PgogICAgPGZlQ29tcG9zaXRlIGluPSJzaGFkb3dPZmZzZXRJbm5lcjEiIGluMj0iU291cmNlQWxwaGEiIG9wZXJhdG9yPSJhcml0aG1ldGljIiBrMj0iLTEiIGszPSIxIiByZXN1bHQ9InNoYWRvd0lubmVySW5uZXIxIj48L2ZlQ29tcG9zaXRlPgogICAgPGZlQ29sb3JNYXRyaXggdmFsdWVzPSIwIDAgMCAwIDEgICAwIDAgMCAwIDEgICAwIDAgMCAwIDEgIDAgMCAwIDAuMjUgMCIgdHlwZT0ibWF0cml4IiBpbj0ic2hhZG93SW5uZXJJbm5lcjEiPjwvZmVDb2xvck1hdHJpeD4KICAgIDwvZmlsdGVyPgogICAgPC9kZWZzPgogICAgPGcgaWQ9Ikh1YiIgc3Ryb2tlPSJub25lIiBzdHJva2Utd2lkdGg9IjEiIGZpbGw9Im5vbmUiIGZpbGwtcnVsZT0iZXZlbm9kZCI+CiAgICA8ZyBpZD0iQ29ydGV4LS8tSG9tZXBhZ2UiIHRyYW5zZm9ybT0idHJhbnNsYXRlKC04MC4wMDAwMDAsIC01MC4wMDAwMDApIj4KICAgIDxnIGlkPSJIZWFkZXIiPgogICAgPGcgaWQ9IkxvZ28iIHRyYW5zZm9ybT0idHJhbnNsYXRlKDgwLjAwMDAwMCwgNTAuMDAwMDAwKSI+CiAgICA8ZyB0cmFuc2Zvcm09InRyYW5zbGF0ZSgwLjUyMjM4OCwgMC4wMDAwMDApIj4KICAgIDxnIGlkPSJCYWNrZ3JvdW5kIj4KICAgIDx1c2UgZmlsbD0idXJsKCNsaW5lYXJHcmFkaWVudC0xKSIgZmlsbC1ydWxlPSJldmVub2RkIiB4bGluazpocmVmPSIjcGF0aC0yIj48L3VzZT4KICAgIDx1c2UgZmlsbD0iYmxhY2siIGZpbGwtb3BhY2l0eT0iMSIgZmlsdGVyPSJ1cmwoI2ZpbHRlci0zKSIgeGxpbms6aHJlZj0iI3BhdGgtMiI+PC91c2U+CiAgICA8L2c+CiAgICA8ZyBpZD0iQ29nbml0aXZlU2NhbGUtTG9nbyIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoOS40MDI5ODUsIDE4LjAzMDMwMykiIGZpbGw9IiNGRkZGRkYiPgogICAgPHBhdGggZD0iTTI4LjMzNTY1NTEsMTMuMDM5MzEwNSBDMzMuODUxNjc4Myw4LjU4NTM1MzY0IDM4LjczNjg3NjMsNy4yODUyNjI3MyA0MS44NDAwODQsOC4xNzU0MjQwOSBDNTAuOTYwMTI0NywxMS4wMDU2OTkxIDUwLjI1MjcxMzMsMjEuMjc4NTY1IDQ2LjAyMzAzMjEsMjUuODY4MjU4MiBDNDQuNDQ3NTAzOCwyNy41ODA1Njk1IDQzLjAwMzY2NDgsMjguMTE3Nzg3NyA0MS4zMzY5MDI2LDI4LjI3NDQyODYgQzQ3LjY2NDY4NDEsMjUuNzg5Nzk0NSA0Ny4xMDE1MTcxLDE1LjgwNDI5NDUgNDAuMTU2MzAyNiwxNC41NzAzNTM2IEMzOS41MDkwMTYzLDE0LjM5MzA5NDUgMzguNzg3NjU0OCwxNC4zNDQ2OTkxIDM4LjAwNzE0NDcsMTQuNDY5ODQgQzM3LjA0MDY3OTMsMTQuNjIzNzYwNSAzNS45ODEzMDYsMTUuMDQ0ODU4MiAzNC44Nzc1NzEyLDE1LjgxODg5OTEgQzI5LjM4ODYxMTMsMTkuMDY4NDEwNSAyNC4yNTI1ODk5LDIzLjQ1OTM2NzMgMTkuNjEzMzMyOCwyNS45ODg1MzA5IEMxNS43Mjg2Mzg1LDI4LjEwMTYwODIgMTIuNTEyMjk1MiwyOS4xMDI0NDkxIDguMTI0ODM4MDMsMjguMTcxMTk0NSBDNS44NjAxNzMsMjcuNjkxMjQ5MSA0LjA4OTkwMDc4LDI2LjY5MDQwODIgMi43ODg5MTExMywyNS4zNzQ1NjczIEMtMy4xNTY0OTcyLDE1LjAzMjgzMDkgOS4zMDkyMDQ1NSw0LjgwODY0NjgyIDE4LjE0MTU5MzUsMTYuMDI3MjI4NiBDNC4zOTM1OTUyMyw2LjM2MTU5NjgyIDIuNDkzNDQ3MjUsMjcuODk4MDAzNiAxNi4yNDg1NiwyMS4zMzI1NDQ1IEMyMC42NzgxNDY2LDE5LjIxNzAzMzIgMjQuNDk4NjcwMywxNi4xMzc5MDgyIDI4LjMzNTY1NTEsMTMuMDM5MzEwNSBaIE0xOC4xNDE2NDkzLDE2LjAyNzIxNDMgQzE0LjczMTk1NzEsLTIuMTgwMDcyMDUgMzAuNjM2MzY3MywtMy4wOTI0MjY1OSAzNi4zMTA3MjQ1LDYuMjMwNzE0MzIgQzM1LjQxODg5MjMsNi4zMDAxNTc1IDMyLjczNzY3NjIsNy43NDA0MjM0MSAzMi4xOTU4NTMsOC4yOTE4MTY1OSBDMjguOTAwNjkxNCwzLjA1MjIyMTE0IDE3LjA0NTcyNjYsNC4zNDkwMTg4NiAxOC4xNDE2NDkzLDE2LjAyNzIxNDMgWiIgaWQ9IkNvbWJpbmVkLVNoYXBlIj48L3BhdGg+CiAgICA8cGF0aCBkPSJNNDAuMTU2Mjc0NywxNC41NzA0MjUyIEM0Ny4xMDAzNzMyLDE1LjgwNDIyMyA0Ny42NjQ2NTYyLDI1Ljc4OTAwNyA0MS4zNDA3ODA3LDI4LjI3Mjc4MiBMNDEuMzQwNzgwNywyOC4yNzI3ODIgTDQxLjMzMzk0NTEsMjguMjcyNzgyIEM0MC4zNDM3NjQ1LDI4LjQ4MzkzMTcgMzkuNTU2NzI5MiwyOC41MTYzNDczIDM3LjU3OTI1NywyOC41MjA0MDEyIEwxOS43MTQ4NjE5LDI4LjUyMDkxNjEgQzE5LjcxNDg2MTksMjguNTIwOTE2MSAxOS44MDg0NjczLDI4LjQ3ODk2MzkgMjAuMDQzODA2MSwyOC4zNjk3MTYxIEMyMS4zMDUwMzc4LDI3Ljc3MjA3NTIgMjguMDEyOTYwNiwyMy40MTk3Nzc1IDI5LjIyMjU3NjgsMjIuMTEyOTU3IEMzMi4yMTM5MDQ0LDIyLjExMjk1NyAzNS4yOTAzMjc4LDIyLjIzOTY3MyAzOC4yNzk3MDI0LDIyLjExMjk1NyBDNDUuMTQxNTM4NiwyMS44MjI1OTU1IDQ0LjIwMzkzNjcsMTUuNzgyMzgxNSA0MC4yNTU2ODMyLDE0LjU5ODQ1MTIgWiBNMzYuMzEwNzM4NCw2LjIzMDY0MjczIEMzMC42MzYzODEyLC0zLjA5MjQ5ODE4IDE0LjczMTk3MSwtMi4xODAxNDM2NCAxOC4xNDE2NjMyLDE2LjAyNzE0MjcgQzkuMzEzODc3ODQsNC44MTMxNDI3MyAtMy4xNDUxMjc4NCwxNS4wMjQwMTA5IDIuNzgwNjEwOCwyNS4zNjMzMTMyIEMtMy43MjM1MDA0NywxOC43NzUyMzE0IDEuNDg4ODI4MjMsNC4yODM2NTYzNiAxNS4yMTc1NzUzLDcuMTc5MDc5MDkgQzE5LjMzNDM5OTgsLTIuNTQ2NDAyNzMgMzEuNTEzMDA3OCwtMS45MjE5ODY4MiAzNi4zMTA3Mzg0LDYuMjMwNjQyNzMgWiIgaWQ9IkNvbWJpbmVkLVNoYXBlIiBvcGFjaXR5PSIwLjUiPjwvcGF0aD4KICAgIDwvZz4KICAgIDx0ZXh0IGlkPSJDb3J0ZXgiIGZvbnQtZmFtaWx5PSJSb2JvdG8tUmVndWxhciwgUm9ib3RvIiBmb250LXNpemU9IjMyIiBmb250LXdlaWdodD0ibm9ybWFsIiBsaW5lLXNwYWNpbmc9IjI0IiBsZXR0ZXItc3BhY2luZz0iNCIgZmlsbD0iIzAwQzFCNCI+CiAgICA8dHNwYW4geD0iODcuNDc3NjExOSIgeT0iNDYiPkNPUlRFWDwvdHNwYW4+CiAgICA8L3RleHQ+CiAgICA8L2c+CiAgICA8L2c+CiAgICA8L2c+CiAgICA8L2c+CiAgICA8L2c+CiAgICA8L3N2Zz4KICBtZXRhZGF0YS55YW1sOiB8CiAgICB0aGVtaW5nOgogICAgICBicmFuZGluZzoKICAgICAgICBjb3B5cmlnaHQ6ICLCqSBDb2duaXRpdmVTY2FsZSwgSW5jLiAyMDIwLiZlbnNwO0FsbCBSaWdodHMgUmVzZXJ2ZWQuIgogICAgICAgIGh1Yk5hbWU6ICJUcnVzdGVkIEFJIEh1YiBmb3IgSGVhbHRoY2FyZSIKICAgICAgICBodWJEZXNjcmlwdGlvbjogfAogICAgICAgICAgQSBmZWRlcmF0ZWQgb25saW5lIHJlcG9zaXRvcnkgb2YgdHJ1c3RlZCBwdWJsaWMgYW5kIHByaXZhdGUgZGF0YXNldHMgYW5kIHByZWRpY3RpdmUgbW9kZWxzIHRvIGhlbHAgaW1wcm92ZSBBSSwgTUwsIEFuYWx5dGljcywgYW5kIFJlc2VhcmNoIG91dGNvbWVzIGZvciBIZWFsdGhjYXJlLgogICAgICAgIGxvZ29tYXJrOiBjb3J0ZXgtbG9nby5zdmcK"
              }
            },
            "hub-cronjob": {
              "command": [
                "node",
                "./pipeline/extractMeta.js",
                "--repo",
                "/work",
                "--cloneRepo",
                "https://github.com/CognitiveScale/xpa-hub",
                "--mongoUrl",
                "$(MONGODB_URI)"
              ],
              "schedule": "*/10 * * * *"
            },
            "mongo-uri": "mongodb://cortex-mongodb.cortex-hub.svc.cluster.local:27017/cortex_hub?authSource=admin"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/c12e/cortex-healthcare-hub-operator-bundle@sha256:40fa05e3729d61d05527d36e307b3d2b2299defae8fac6a08f11d676c0b5dc2f",
      "bundle_path_digest": "sha256:40fa05e3729d61d05527d36e307b3d2b2299defae8fac6a08f11d676c0b5dc2f",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-03-09T05:32:09.524000+00:00",
      "csv_description": "Trusted AI Hub for Healthcare is a trusted catalog of public data and models with built-in viability, fitness,\nand quality metrics packaged up into an easy to use Healthcare Quality Index Label.  This allows developers,\nmachine learning enthusiasts, researchers to contribute, collaborate and discover trusted data and models for this initiative.\nThe Trusted AI Hub for Healthcare is made available from within IBM, CognitiveScale,AI Global, and Anthem websites.\n\nDevelopers, Researchers, Machine Learning enthusiasts and scientists can use this trusted catalog to discover\nas well as contribute their data and model assets for the broader community. This will ultimately accelerate\nthe Healthcare ecosystem collaboration to build high performance, trustworthy, and risk managed digital systems to fight the pandemics.\n\n###Quicky discover trusted data and models\n\nTrusted AI Hub for Healthcare makes it easier to discover and search assets using the Search and filter options in the main page.\n\n###Easy to use and contribute\n\nTrusted AI Hub for Healthcare is easy to use as it simply relies on a common code collaboration tool,\nGithub to be the base repository for models and datasets. It doesn\u2019t require the assets to be stored elsewhere.\nWith few easy steps, contributors can publish their assets into the Hub.\n\n###Pre-populated catalog of Trusted data and models\n\nTrusted AI Hub for Healthcare comes with a wide range of public datasets and models from public domain such as\nthe CDC, NIH as well as from universities like Johns Hopkins, University of Washington.\n\n###Trusted data and models\n\nThe Trusted AI Hub for Healthcare provides scanning of models and datasets based on Cortex Certifai\u2019s ability\nto perform black box model scanning around fairness, explainability, robustness, and compliance.\nFor more information about Cortex Certifai, visit [https://www.cognitivescale.com/certifai/](https://www.cognitivescale.com/certifai/).\nThe scan results will be made available as Quality Index labels for each of the assets in the Hub.\n",
      "csv_display_name": "Trusted AI Hub for Healthcare Operator",
      "csv_metadata_description": "Trusted AI Hub for Healthcare is a trusted catalog of public data and models with built-in viability, fitness, and quality metrics packaged up into an easy to use Healthcare Quality Index Label.",
      "csv_name": "cortex-healthcare-hub-operator.v0.0.25",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:15:51.966000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "cortex-healthcare-hub-operator",
      "provided_apis": [
        {
          "group": "hubs.cortex.cognitivescale.com",
          "kind": "Hub",
          "plural": "hubs",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:aaf802814f90497e756867c90eb4985396474cd75c5507df630d857a7cb95492",
          "image": "registry.connect.redhat.com/c12e/cortex-healthcare-hub-operator@sha256:aaf802814f90497e756867c90eb4985396474cd75c5507df630d857a7cb95492",
          "name": "cortex-healthcare-hub-operator-aaf802814f90497e756867c90eb4985396474cd75c5507df630d857a7cb95492-annotation"
        },
        {
          "digest": "sha256:aaf802814f90497e756867c90eb4985396474cd75c5507df630d857a7cb95492",
          "image": "registry.connect.redhat.com/c12e/cortex-healthcare-hub-operator@sha256:aaf802814f90497e756867c90eb4985396474cd75c5507df630d857a7cb95492",
          "name": "cortex-hub-operator"
        },
        {
          "digest": "sha256:2c766e8e1f67ba8b8b58bf4520964077c88b15d09207a177984d9b2558bee17b",
          "image": "registry.connect.redhat.com/c12e/cortex-hub@sha256:2c766e8e1f67ba8b8b58bf4520964077c88b15d09207a177984d9b2558bee17b",
          "name": "cortex_hub"
        },
        {
          "digest": "sha256:2c766e8e1f67ba8b8b58bf4520964077c88b15d09207a177984d9b2558bee17b",
          "image": "registry.connect.redhat.com/c12e/cortex-hub@sha256:2c766e8e1f67ba8b8b58bf4520964077c88b15d09207a177984d9b2558bee17b",
          "name": "cortex_hub_cron_job"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.25",
      "version_original": "0.0.25"
    },
    {
      "_id": "6047085adbb14c0b8248bac6",
      "alm_examples": [
        {
          "kind": "Hub",
          "metadata": {
            "name": "default-hub"
          },
          "spec": {
            "hub": {
              "container-port": 3000,
              "replicas": 1,
              "route-type": "http",
              "theme-spec": {
                "configmap-name": "c12e-hub-theme",
                "configmap-value-base64": "YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnTWFwCm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiAyMDE2LTAyLTE4VDE4OjUyOjA1WgogIG5hbWU6IGMxMmUtaHViLXRoZW1lCmRhdGE6CiAgY29ydGV4LWxvZ28uc3ZnOiB8CiAgICA8P3htbCB2ZXJzaW9uPSIxLjAiIGVuY29kaW5nPSJVVEYtOCI/PgogICAgPHN2ZyB3aWR0aD0iMjI3cHgiIGhlaWdodD0iNzBweCIgdmlld0JveD0iMCAwIDIyNyA3MCIgdmVyc2lvbj0iMS4xIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIj4KICAgIDwhLS0gR2VuZXJhdG9yOiBza2V0Y2h0b29sIDYzLjEgKDEwMTAxMCkgLSBodHRwczovL3NrZXRjaC5jb20gLS0+CiAgICA8dGl0bGU+NDcyM0Y5QzgtMjZGRS00QkZELTk5NDUtQUNCMUQ2Mzg2NjBDQDF4PC90aXRsZT4KICAgIDxkZXNjPkNyZWF0ZWQgd2l0aCBza2V0Y2h0b29sLjwvZGVzYz4KICAgIDxkZWZzPgogICAgPGxpbmVhckdyYWRpZW50IHgxPSIxLjQ4MTM5ODk4JSIgeTE9IjAlIiB4Mj0iOTguNTE4NjAxJSIgeTI9IjEwMCUiIGlkPSJsaW5lYXJHcmFkaWVudC0xIj4KICAgIDxzdG9wIHN0b3AtY29sb3I9IiMwMEFGRjEiIG9mZnNldD0iMCUiPjwvc3RvcD4KICAgIDxzdG9wIHN0b3AtY29sb3I9IiMwMEQwODAiIG9mZnNldD0iMTAwJSI+PC9zdG9wPgogICAgPC9saW5lYXJHcmFkaWVudD4KICAgIDxlbGxpcHNlIGlkPSJwYXRoLTIiIGN4PSIzNC40Nzc2MTE5IiBjeT0iMzUiIHJ4PSIzNC40Nzc2MTE5IiByeT0iMzUiPjwvZWxsaXBzZT4KICAgIDxmaWx0ZXIgeD0iLTIuOSUiIHk9Ii0yLjklIiB3aWR0aD0iMTA1LjglIiBoZWlnaHQ9IjEwNS43JSIgZmlsdGVyVW5pdHM9Im9iamVjdEJvdW5kaW5nQm94IiBpZD0iZmlsdGVyLTMiPgogICAgPGZlR2F1c3NpYW5CbHVyIHN0ZERldmlhdGlvbj0iMS41IiBpbj0iU291cmNlQWxwaGEiIHJlc3VsdD0ic2hhZG93Qmx1cklubmVyMSI+PC9mZUdhdXNzaWFuQmx1cj4KICAgIDxmZU9mZnNldCBkeD0iMCIgZHk9IjEiIGluPSJzaGFkb3dCbHVySW5uZXIxIiByZXN1bHQ9InNoYWRvd09mZnNldElubmVyMSI+PC9mZU9mZnNldD4KICAgIDxmZUNvbXBvc2l0ZSBpbj0ic2hhZG93T2Zmc2V0SW5uZXIxIiBpbjI9IlNvdXJjZUFscGhhIiBvcGVyYXRvcj0iYXJpdGhtZXRpYyIgazI9Ii0xIiBrMz0iMSIgcmVzdWx0PSJzaGFkb3dJbm5lcklubmVyMSI+PC9mZUNvbXBvc2l0ZT4KICAgIDxmZUNvbG9yTWF0cml4IHZhbHVlcz0iMCAwIDAgMCAxICAgMCAwIDAgMCAxICAgMCAwIDAgMCAxICAwIDAgMCAwLjI1IDAiIHR5cGU9Im1hdHJpeCIgaW49InNoYWRvd0lubmVySW5uZXIxIj48L2ZlQ29sb3JNYXRyaXg+CiAgICA8L2ZpbHRlcj4KICAgIDwvZGVmcz4KICAgIDxnIGlkPSJIdWIiIHN0cm9rZT0ibm9uZSIgc3Ryb2tlLXdpZHRoPSIxIiBmaWxsPSJub25lIiBmaWxsLXJ1bGU9ImV2ZW5vZGQiPgogICAgPGcgaWQ9IkNvcnRleC0vLUhvbWVwYWdlIiB0cmFuc2Zvcm09InRyYW5zbGF0ZSgtODAuMDAwMDAwLCAtNTAuMDAwMDAwKSI+CiAgICA8ZyBpZD0iSGVhZGVyIj4KICAgIDxnIGlkPSJMb2dvIiB0cmFuc2Zvcm09InRyYW5zbGF0ZSg4MC4wMDAwMDAsIDUwLjAwMDAwMCkiPgogICAgPGcgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoMC41MjIzODgsIDAuMDAwMDAwKSI+CiAgICA8ZyBpZD0iQmFja2dyb3VuZCI+CiAgICA8dXNlIGZpbGw9InVybCgjbGluZWFyR3JhZGllbnQtMSkiIGZpbGwtcnVsZT0iZXZlbm9kZCIgeGxpbms6aHJlZj0iI3BhdGgtMiI+PC91c2U+CiAgICA8dXNlIGZpbGw9ImJsYWNrIiBmaWxsLW9wYWNpdHk9IjEiIGZpbHRlcj0idXJsKCNmaWx0ZXItMykiIHhsaW5rOmhyZWY9IiNwYXRoLTIiPjwvdXNlPgogICAgPC9nPgogICAgPGcgaWQ9IkNvZ25pdGl2ZVNjYWxlLUxvZ28iIHRyYW5zZm9ybT0idHJhbnNsYXRlKDkuNDAyOTg1LCAxOC4wMzAzMDMpIiBmaWxsPSIjRkZGRkZGIj4KICAgIDxwYXRoIGQ9Ik0yOC4zMzU2NTUxLDEzLjAzOTMxMDUgQzMzLjg1MTY3ODMsOC41ODUzNTM2NCAzOC43MzY4NzYzLDcuMjg1MjYyNzMgNDEuODQwMDg0LDguMTc1NDI0MDkgQzUwLjk2MDEyNDcsMTEuMDA1Njk5MSA1MC4yNTI3MTMzLDIxLjI3ODU2NSA0Ni4wMjMwMzIxLDI1Ljg2ODI1ODIgQzQ0LjQ0NzUwMzgsMjcuNTgwNTY5NSA0My4wMDM2NjQ4LDI4LjExNzc4NzcgNDEuMzM2OTAyNiwyOC4yNzQ0Mjg2IEM0Ny42NjQ2ODQxLDI1Ljc4OTc5NDUgNDcuMTAxNTE3MSwxNS44MDQyOTQ1IDQwLjE1NjMwMjYsMTQuNTcwMzUzNiBDMzkuNTA5MDE2MywxNC4zOTMwOTQ1IDM4Ljc4NzY1NDgsMTQuMzQ0Njk5MSAzOC4wMDcxNDQ3LDE0LjQ2OTg0IEMzNy4wNDA2NzkzLDE0LjYyMzc2MDUgMzUuOTgxMzA2LDE1LjA0NDg1ODIgMzQuODc3NTcxMiwxNS44MTg4OTkxIEMyOS4zODg2MTEzLDE5LjA2ODQxMDUgMjQuMjUyNTg5OSwyMy40NTkzNjczIDE5LjYxMzMzMjgsMjUuOTg4NTMwOSBDMTUuNzI4NjM4NSwyOC4xMDE2MDgyIDEyLjUxMjI5NTIsMjkuMTAyNDQ5MSA4LjEyNDgzODAzLDI4LjE3MTE5NDUgQzUuODYwMTczLDI3LjY5MTI0OTEgNC4wODk5MDA3OCwyNi42OTA0MDgyIDIuNzg4OTExMTMsMjUuMzc0NTY3MyBDLTMuMTU2NDk3MiwxNS4wMzI4MzA5IDkuMzA5MjA0NTUsNC44MDg2NDY4MiAxOC4xNDE1OTM1LDE2LjAyNzIyODYgQzQuMzkzNTk1MjMsNi4zNjE1OTY4MiAyLjQ5MzQ0NzI1LDI3Ljg5ODAwMzYgMTYuMjQ4NTYsMjEuMzMyNTQ0NSBDMjAuNjc4MTQ2NiwxOS4yMTcwMzMyIDI0LjQ5ODY3MDMsMTYuMTM3OTA4MiAyOC4zMzU2NTUxLDEzLjAzOTMxMDUgWiBNMTguMTQxNjQ5MywxNi4wMjcyMTQzIEMxNC43MzE5NTcxLC0yLjE4MDA3MjA1IDMwLjYzNjM2NzMsLTMuMDkyNDI2NTkgMzYuMzEwNzI0NSw2LjIzMDcxNDMyIEMzNS40MTg4OTIzLDYuMzAwMTU3NSAzMi43Mzc2NzYyLDcuNzQwNDIzNDEgMzIuMTk1ODUzLDguMjkxODE2NTkgQzI4LjkwMDY5MTQsMy4wNTIyMjExNCAxNy4wNDU3MjY2LDQuMzQ5MDE4ODYgMTguMTQxNjQ5MywxNi4wMjcyMTQzIFoiIGlkPSJDb21iaW5lZC1TaGFwZSI+PC9wYXRoPgogICAgPHBhdGggZD0iTTQwLjE1NjI3NDcsMTQuNTcwNDI1MiBDNDcuMTAwMzczMiwxNS44MDQyMjMgNDcuNjY0NjU2MiwyNS43ODkwMDcgNDEuMzQwNzgwNywyOC4yNzI3ODIgTDQxLjM0MDc4MDcsMjguMjcyNzgyIEw0MS4zMzM5NDUxLDI4LjI3Mjc4MiBDNDAuMzQzNzY0NSwyOC40ODM5MzE3IDM5LjU1NjcyOTIsMjguNTE2MzQ3MyAzNy41NzkyNTcsMjguNTIwNDAxMiBMMTkuNzE0ODYxOSwyOC41MjA5MTYxIEMxOS43MTQ4NjE5LDI4LjUyMDkxNjEgMTkuODA4NDY3MywyOC40Nzg5NjM5IDIwLjA0MzgwNjEsMjguMzY5NzE2MSBDMjEuMzA1MDM3OCwyNy43NzIwNzUyIDI4LjAxMjk2MDYsMjMuNDE5Nzc3NSAyOS4yMjI1NzY4LDIyLjExMjk1NyBDMzIuMjEzOTA0NCwyMi4xMTI5NTcgMzUuMjkwMzI3OCwyMi4yMzk2NzMgMzguMjc5NzAyNCwyMi4xMTI5NTcgQzQ1LjE0MTUzODYsMjEuODIyNTk1NSA0NC4yMDM5MzY3LDE1Ljc4MjM4MTUgNDAuMjU1NjgzMiwxNC41OTg0NTEyIFogTTM2LjMxMDczODQsNi4yMzA2NDI3MyBDMzAuNjM2MzgxMiwtMy4wOTI0OTgxOCAxNC43MzE5NzEsLTIuMTgwMTQzNjQgMTguMTQxNjYzMiwxNi4wMjcxNDI3IEM5LjMxMzg3Nzg0LDQuODEzMTQyNzMgLTMuMTQ1MTI3ODQsMTUuMDI0MDEwOSAyLjc4MDYxMDgsMjUuMzYzMzEzMiBDLTMuNzIzNTAwNDcsMTguNzc1MjMxNCAxLjQ4ODgyODIzLDQuMjgzNjU2MzYgMTUuMjE3NTc1Myw3LjE3OTA3OTA5IEMxOS4zMzQzOTk4LC0yLjU0NjQwMjczIDMxLjUxMzAwNzgsLTEuOTIxOTg2ODIgMzYuMzEwNzM4NCw2LjIzMDY0MjczIFoiIGlkPSJDb21iaW5lZC1TaGFwZSIgb3BhY2l0eT0iMC41Ij48L3BhdGg+CiAgICA8L2c+CiAgICA8dGV4dCBpZD0iQ29ydGV4IiBmb250LWZhbWlseT0iUm9ib3RvLVJlZ3VsYXIsIFJvYm90byIgZm9udC1zaXplPSIzMiIgZm9udC13ZWlnaHQ9Im5vcm1hbCIgbGluZS1zcGFjaW5nPSIyNCIgbGV0dGVyLXNwYWNpbmc9IjQiIGZpbGw9IiMwMEMxQjQiPgogICAgPHRzcGFuIHg9Ijg3LjQ3NzYxMTkiIHk9IjQ2Ij5DT1JURVg8L3RzcGFuPgogICAgPC90ZXh0PgogICAgPC9nPgogICAgPC9nPgogICAgPC9nPgogICAgPC9nPgogICAgPC9nPgogICAgPC9zdmc+CiAgbWV0YWRhdGEueWFtbDogfAogICAgdGhlbWluZzoKICAgICAgYnJhbmRpbmc6CiAgICAgICAgY29weXJpZ2h0OiAiwqkgQ29nbml0aXZlU2NhbGUsIEluYy4gMjAyMC4mZW5zcDtBbGwgUmlnaHRzIFJlc2VydmVkLiIKICAgICAgICBodWJOYW1lOiAiSHViIgogICAgICAgIGh1YkRlc2NyaXB0aW9uOiB8CiAgICAgICAgICBEaXNjb3ZlciBhbmQgbWFuYWdlIGhpZ2ggcXVhbGl0eSBBSSBidWlsZGluZyBibG9ja3MgdG8gc3BlZWQgdXAgZGV2ZWxvcG1lbnQsIGRlcGxveW1lbnQgYW5kIGdvdmVybmFuY2Ugb2YgdHJ1c3R3b3J0aHkgQUkgc3lzdGVtcy4KICAgICAgICBsb2dvbWFyazogY29ydGV4LWxvZ28uc3ZnCg=="
              }
            },
            "hub-cronjob": {
              "command": [
                "node",
                "./pipeline/extractMeta.js",
                "--repo",
                "/work",
                "--cloneRepo",
                "https://github.com/CognitiveScale/xpa-hub",
                "--mongoUrl",
                "$(MONGODB_URI)"
              ],
              "schedule": "*/10 * * * *"
            },
            "mongo-uri": "mongodb://cortex-mongodb.cortex-hub.svc.cluster.local:27017/cortex_hub?authSource=admin"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/c12e/cortex-hub-operator-bundle@sha256:8330ca92f9b71fc4380a01206185838b3a706d00d156726567436baac65291a6",
      "bundle_path_digest": "sha256:8330ca92f9b71fc4380a01206185838b3a706d00d156726567436baac65291a6",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-03-09T05:32:10.655000+00:00",
      "csv_description": "Trusted catalog of AI assets that helps data engineers, data scientists, machine learning enthusiasts, researchers\neasily discover, learn, contribute and collaborate to develop AI applications.\nWith tight integration to [CognitiveScale\u2019s Cortex](https://www.cognitivescale.com/cortex/) platform, it offers the following benefits:\n* Provides AI Trust Index scores for data and models risks against data quality, explainability, robustness, fairness, and compliance.\n* Search, discovery and governance of Trusted AI assets.\n* Enables rapid development and deployment of Trusted AI assets.\n* Configurable operator for Multi-cloud and on-prem deployments.\n\n###Easy installation\n\nInstalling Cortex Hub is easy as it works as an Operator on Kubernetes.\n\n###Quick setup and configuration\n\nCortex Hub requires only standard Github login credentials to sign up. Once set up, it is easy to start cataloging\nyour AI assets with a few simple steps.\n\n###Trusted data and models\n\nCortex Hub provides scanning of models based on Cortex Certifai\u2019s ability to perform black box model scanning around\nfairness, explainability, robustness, and compliance. AI developers and machine learning enthusiasts can be rest\nassured that these models are trusted and can be used to make reliable decisions.\nFor more information about Cortex Certifai, visit [https://www.cognitivescale.com/certifai/](https://www.cognitivescale.com/certifai/).\n",
      "csv_display_name": "Cortex Hub Operator",
      "csv_metadata_description": "Discover and manage high quality AI building blocks to speed up development, deployment and governance of trustworthy AI systems.",
      "csv_name": "cortex-hub-operator.v0.0.25",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:18:54.863000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "cortex-hub-operator",
      "provided_apis": [
        {
          "group": "hubs.cortex.cognitivescale.com",
          "kind": "Hub",
          "plural": "hubs",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:4a5e5f8c47ed27478cc496530e6369a411bda2b9b29b7df5f955ac314ee8b1c9",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-operator@sha256:4a5e5f8c47ed27478cc496530e6369a411bda2b9b29b7df5f955ac314ee8b1c9",
          "name": "cortex-certifai-operator-4a5e5f8c47ed27478cc496530e6369a411bda2b9b29b7df5f955ac314ee8b1c9-annotation"
        },
        {
          "digest": "sha256:aaf802814f90497e756867c90eb4985396474cd75c5507df630d857a7cb95492",
          "image": "registry.connect.redhat.com/c12e/cortex-hub-operator@sha256:aaf802814f90497e756867c90eb4985396474cd75c5507df630d857a7cb95492",
          "name": "cortex-hub-operator"
        },
        {
          "digest": "sha256:2c766e8e1f67ba8b8b58bf4520964077c88b15d09207a177984d9b2558bee17b",
          "image": "registry.connect.redhat.com/c12e/cortex-hub@sha256:2c766e8e1f67ba8b8b58bf4520964077c88b15d09207a177984d9b2558bee17b",
          "name": "cortex_hub"
        },
        {
          "digest": "sha256:2c766e8e1f67ba8b8b58bf4520964077c88b15d09207a177984d9b2558bee17b",
          "image": "registry.connect.redhat.com/c12e/cortex-hub@sha256:2c766e8e1f67ba8b8b58bf4520964077c88b15d09207a177984d9b2558bee17b",
          "name": "cortex_hub_cron_job"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.25",
      "version_original": "0.0.25"
    },
    {
      "_id": "6047085cdbb14c0b8248bac7",
      "alm_examples": [
        {
          "kind": "CouchbaseCluster",
          "metadata": {
            "name": "cb-example"
          },
          "spec": {
            "backup": {
              "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:3d0a9de740110b924b1ad5e83bb1e36b308f1b53f9e76a50cffcbeda9d34ea78",
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              },
              "serviceAccountName": "couchbase-backup"
            },
            "buckets": {
              "managed": true,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            },
            "cluster": {
              "analyticsServiceMemoryQuota": "1Gi",
              "autoCompaction": {
                "databaseFragmentationThreshold": {
                  "percent": 30,
                  "size": "1Gi"
                },
                "parallelCompaction": false,
                "timeWindow": {
                  "abortCompactionOutsideWindow": true,
                  "end": "06:00",
                  "start": "02:00"
                },
                "tombstonePurgeInterval": "72h",
                "viewFragmentationThreshold": {
                  "percent": 30,
                  "size": "1Gi"
                }
              },
              "autoFailoverMaxCount": 3,
              "autoFailoverOnDataDiskIssues": true,
              "autoFailoverOnDataDiskIssuesTimePeriod": "120s",
              "autoFailoverServerGroup": false,
              "autoFailoverTimeout": "120s",
              "clusterName": "cb-example",
              "dataServiceMemoryQuota": "256Mi",
              "eventingServiceMemoryQuota": "256Mi",
              "indexServiceMemoryQuota": "256Mi",
              "indexStorageSetting": "memory_optimized",
              "searchServiceMemoryQuota": "256Mi"
            },
            "enablePreviewScaling": false,
            "hibernate": false,
            "hibernationStrategy": "Immediate",
            "image": "registry.connect.redhat.com/couchbase/server@sha256:fd6d9c0ef033009e76d60dc36f55ce7f3aaa942a7be9c2b66c335eabc8f5b11e",
            "logRetentionCount": 20,
            "logRetentionTime": "604800s",
            "monitoring": {
              "prometheus": {
                "enabled": false,
                "image": "registry.connect.redhat.com/couchbase/exporter@sha256:18015c72d17a33a21ea221d48fddf493848fc1ca5702007f289369c5815fb3df"
              }
            },
            "networking": {
              "adminConsoleServiceType": "NodePort",
              "adminConsoleServices": [
                "data"
              ],
              "exposeAdminConsole": true,
              "exposedFeatureServiceType": "NodePort",
              "exposedFeatures": [
                "xdcr"
              ]
            },
            "recoveryPolicy": "PrioritizeDataIntegrity",
            "security": {
              "adminSecret": "cb-example-auth",
              "rbac": {
                "managed": true,
                "selector": {
                  "matchLabels": {
                    "cluster": "cb-example"
                  }
                }
              }
            },
            "servers": [
              {
                "name": "all_services",
                "services": [
                  "data",
                  "index",
                  "query",
                  "search",
                  "eventing",
                  "analytics"
                ],
                "size": 3
              }
            ],
            "upgradeStrategy": "RollingUpgrade",
            "xdcr": {
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            }
          }
        },
        {
          "kind": "CouchbaseBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "default"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "enableIndexReplica": true,
            "evictionPolicy": "valueOnly",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "kind": "CouchbaseEphemeralBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "ephemeral-bucket"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "evictionPolicy": "noEviction",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "kind": "CouchbaseMemcachedBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "memcached-bucket"
          },
          "spec": {
            "enableFlush": false,
            "memoryQuota": "100Mi"
          }
        },
        {
          "kind": "CouchbaseUser",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-user"
          },
          "spec": {
            "authDomain": "local",
            "authSecret": "cb-example-auth",
            "fullName": "My User"
          }
        },
        {
          "kind": "CouchbaseGroup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-group"
          },
          "spec": {
            "roles": [
              {
                "bucket": "default",
                "name": "bucket_admin"
              }
            ]
          }
        },
        {
          "kind": "CouchbaseRoleBinding",
          "metadata": {
            "name": "my-role-binding"
          },
          "spec": {
            "roleRef": {
              "kind": "CouchbaseGroup",
              "name": "my-group"
            },
            "subjects": [
              {
                "kind": "CouchbaseUser",
                "name": "my-user"
              }
            ]
          }
        },
        {
          "kind": "CouchbaseReplication",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-replication"
          },
          "spec": {
            "bucket": "default",
            "compressionType": "Snappy",
            "filterExpression": "",
            "paused": false,
            "remoteBucket": "default"
          }
        },
        {
          "kind": "CouchbaseBackup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-backup"
          },
          "spec": {
            "backOffLimit": 2,
            "backupRetention": "24h",
            "failedJobsHistoryLimit": 3,
            "full": {
              "schedule": "0 3 * * 6"
            },
            "incremental": {
              "schedule": "0 3 * * 1-6"
            },
            "logRetention": "24h",
            "size": "5Gi",
            "strategy": "full_incremental",
            "successfulJobsHistoryLimit": 1
          }
        },
        {
          "kind": "CouchbaseBackupRestore",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-restore"
          },
          "spec": {
            "backOffLimit": 2,
            "backup": "cb-backup",
            "end": {
              "int": 1
            },
            "logRetention": "24h",
            "repo": "cb-example-2020-10-29T19_00_03",
            "start": {
              "int": 1
            }
          }
        },
        {
          "kind": "CouchbaseAutoscaler",
          "metadata": {
            "name": "do.not.create.internal.only"
          },
          "spec": {
            "servers": "internal",
            "size": 2
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/couchbase/operator-bundle@sha256:78656ed0df41696e67429609e3262ec31f5ca9f5ca946300e6a4a6503c1bbd18",
      "bundle_path_digest": "sha256:78656ed0df41696e67429609e3262ec31f5ca9f5ca946300e6a4a6503c1bbd18",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2021-03-09T05:32:12.110000+00:00",
      "csv_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments on OpenShift. By installing this integration you will be able to deply Couchbase Server clusters with a single command.\n\n## Supported Features\n\n* **Automated cluster provisioning** - Deploying a Couchbase Cluster has never been easier. Fill out a Couchbase specific configuration and let the Couchbase Operator take care of provisioning nodes and setting up cluster to your exact specification.\n\n* **On-demand scalability** - Automatically scale your cluster up or down by changing a simple configuration parameter and let the Couchbase Operator handle provisioning of new nodes and joining them into the cluster.\n\n* **Auto-recovery** - Detect Couchbase node failures, rebalance out bad nodes, and bring the cluster back up to the desired capacity. Auto-recovery is completely automated so you can sleep easy through the night knowing that the Couchbase Operator will handle any failures.\n\n* **Geo-distribution** - Replicate your data between datacenters to move data closer to the users who consume it and protect against disaster scenarios where an entire datacenter becomes unavailable.\n\n* **Persistent storage** - Define persistent network-attached storage for each node in your cluster to allow pods to be recovered even if the node they were running on is no longer available.\n\n* **Rack/zone awareness** - Tell the Couchbase Operator about availability zones in your datacenter and let the operator take care of ensuring that nodes in your cluster are deployed equally across each zone.\n\n* **Supportability** - When things go wrong, use the cbopinfo tool provided with the Couchbase Operator to collect relevant data about your Couchbase deployment so that you can quickly address issues.\n\n* **Centralized configuration management** - Manage your configuration centrally with OpenShift. Updates to the configuration are watched by the Couchbase Operator and actions are taken to make the target cluster match the desired configuration.\n## Required Parameters\n* `authSecret` - provide the name of a secret that contains two keys for the `username` and `password` of the super user ([documentation](https://docs.couchbase.com/operator/1.2/couchbase-cluster-config.html))\n\n## About Couchbase Server\n\nBuilt on the most powerful NoSQL technology, Couchbase Server delivers unparalleled performance at scale, in any cloud. With features like memory-first architecture, geo-distributed deployments, and workload isolation, Couchbase Server excels at supporting mission-critical applications at scale while maintaining submillisecond latencies and 99.999% availability. Plus, with the most comprehensive SQL-compatible query language (N1QL), migrating from RDBMS to Couchbase Server is easy with ANSI joins.\n",
      "csv_display_name": "Couchbase Operator",
      "csv_metadata_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments",
      "csv_name": "couchbase-operator.v2.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:15:41.103000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "couchbase-enterprise-certified",
      "provided_apis": [
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCluster",
          "plural": "couchbaseclusters",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseEphemeralBucket",
          "plural": "couchbaseephemeralbuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseGroup",
          "plural": "couchbasegroups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseGroup",
          "plural": "couchbasegroups",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseUser",
          "plural": "couchbaseusers",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseAutoscaler",
          "plural": "couchbaseautoscalers",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackupRestore",
          "plural": "couchbasebackuprestores",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackup",
          "plural": "couchbasebackups",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBucket",
          "plural": "couchbasebuckets",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseEphemeralBucket",
          "plural": "couchbaseephemeralbuckets",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseReplication",
          "plural": "couchbasereplications",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseRoleBinding",
          "plural": "couchbaserolebindings",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackup",
          "plural": "couchbasebackups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBucket",
          "plural": "couchbasebuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCluster",
          "plural": "couchbaseclusters",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseMemcachedBucket",
          "plural": "couchbasememcachedbuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseMemcachedBucket",
          "plural": "couchbasememcachedbuckets",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackupRestore",
          "plural": "couchbasebackuprestores",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseReplication",
          "plural": "couchbasereplications",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseRoleBinding",
          "plural": "couchbaserolebindings",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseUser",
          "plural": "couchbaseusers",
          "version": "v2"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:87f601a4fd68ba8a5fed9a610dc03661addc9db9b4e332bfc4907d754d91c496",
          "image": "registry.connect.redhat.com/couchbase/operator@sha256:87f601a4fd68ba8a5fed9a610dc03661addc9db9b4e332bfc4907d754d91c496",
          "name": "operator-87f601a4fd68ba8a5fed9a610dc03661addc9db9b4e332bfc4907d754d91c496-annotation"
        },
        {
          "digest": "sha256:87f601a4fd68ba8a5fed9a610dc03661addc9db9b4e332bfc4907d754d91c496",
          "image": "registry.connect.redhat.com/couchbase/operator@sha256:87f601a4fd68ba8a5fed9a610dc03661addc9db9b4e332bfc4907d754d91c496",
          "name": "couchbase-operator"
        },
        {
          "digest": "sha256:fd6d9c0ef033009e76d60dc36f55ce7f3aaa942a7be9c2b66c335eabc8f5b11e",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:fd6d9c0ef033009e76d60dc36f55ce7f3aaa942a7be9c2b66c335eabc8f5b11e",
          "name": "couchbase_server"
        },
        {
          "digest": "sha256:3d0a9de740110b924b1ad5e83bb1e36b308f1b53f9e76a50cffcbeda9d34ea78",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:3d0a9de740110b924b1ad5e83bb1e36b308f1b53f9e76a50cffcbeda9d34ea78",
          "name": "couchbase_backup"
        },
        {
          "digest": "sha256:18015c72d17a33a21ea221d48fddf493848fc1ca5702007f289369c5815fb3df",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:18015c72d17a33a21ea221d48fddf493848fc1ca5702007f289369c5815fb3df",
          "name": "couchbase_metrics"
        },
        {
          "digest": "sha256:18015c72d17a33a21ea221d48fddf493848fc1ca5702007f289369c5815fb3df",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:18015c72d17a33a21ea221d48fddf493848fc1ca5702007f289369c5815fb3df",
          "name": "exporter-18015c72d17a33a21ea221d48fddf493848fc1ca5702007f289369c5815fb3df-annotation"
        },
        {
          "digest": "sha256:3d0a9de740110b924b1ad5e83bb1e36b308f1b53f9e76a50cffcbeda9d34ea78",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:3d0a9de740110b924b1ad5e83bb1e36b308f1b53f9e76a50cffcbeda9d34ea78",
          "name": "operator-backup-3d0a9de740110b924b1ad5e83bb1e36b308f1b53f9e76a50cffcbeda9d34ea78-annotation"
        },
        {
          "digest": "sha256:fd6d9c0ef033009e76d60dc36f55ce7f3aaa942a7be9c2b66c335eabc8f5b11e",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:fd6d9c0ef033009e76d60dc36f55ce7f3aaa942a7be9c2b66c335eabc8f5b11e",
          "name": "server-fd6d9c0ef033009e76d60dc36f55ce7f3aaa942a7be9c2b66c335eabc8f5b11e-annotation"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.1.0",
      "version_original": "2.1.0"
    },
    {
      "_id": "6047085d6280a414853ec516",
      "alm_examples": [
        {
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme"
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:93ac2ae304e90e37554a97fe7705dd3b9cdb9ab89c29961a0094601908e2555d",
      "bundle_path_digest": "sha256:93ac2ae304e90e37554a97fe7705dd3b9cdb9ab89c29961a0094601908e2555d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-03-09T05:32:13.382000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://cloud.ibm.com/docs/services/Cloudant?topic=cloudant-apache-couchdb-operator)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v1.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:22:17.506000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:69d23e864702313e046e6ce8f4db4d4207ca6cc7bd2a4fc82f1bfb3075a0a683",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:69d23e864702313e046e6ce8f4db4d4207ca6cc7bd2a4fc82f1bfb3075a0a683",
          "name": "couchdb-operator-69d23e864702313e046e6ce8f4db4d4207ca6cc7bd2a4fc82f1bfb3075a0a683-annotation"
        },
        {
          "digest": "sha256:69d23e864702313e046e6ce8f4db4d4207ca6cc7bd2a4fc82f1bfb3075a0a683",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:69d23e864702313e046e6ce8f4db4d4207ca6cc7bd2a4fc82f1bfb3075a0a683",
          "name": "couchdb-operator"
        }
      ],
      "skip_range": ">=1.0.0 <1.1.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.1.0",
      "version_original": "1.1.0"
    },
    {
      "_id": "604708606280a414853ec517",
      "alm_examples": [
        {
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme"
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:bac2f2b7378030d82b3385fc3f441430a179a611aadac8a65d27e304114b5e16",
      "bundle_path_digest": "sha256:bac2f2b7378030d82b3385fc3f441430a179a611aadac8a65d27e304114b5e16",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.0",
      "creation_date": "2021-03-09T05:32:16.975000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://cloud.ibm.com/docs/services/Cloudant?topic=cloudant-apache-couchdb-operator)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v1.0.14",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:19:41.306000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:db0902bcf4a3273967b2b4c3fa92fdf14c8a099ca269ef1adff9c46099d5e15d",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:db0902bcf4a3273967b2b4c3fa92fdf14c8a099ca269ef1adff9c46099d5e15d",
          "name": "couchdb-operator-db0902bcf4a3273967b2b4c3fa92fdf14c8a099ca269ef1adff9c46099d5e15d-annotation"
        },
        {
          "digest": "sha256:db0902bcf4a3273967b2b4c3fa92fdf14c8a099ca269ef1adff9c46099d5e15d",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:db0902bcf4a3273967b2b4c3fa92fdf14c8a099ca269ef1adff9c46099d5e15d",
          "name": "couchdb-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.14",
      "version_original": "1.0.14"
    },
    {
      "_id": "60470862dbb14c0b8248bac8",
      "alm_examples": [
        {
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme"
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:93ac2ae304e90e37554a97fe7705dd3b9cdb9ab89c29961a0094601908e2555d",
      "bundle_path_digest": "sha256:93ac2ae304e90e37554a97fe7705dd3b9cdb9ab89c29961a0094601908e2555d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.1",
      "creation_date": "2021-03-09T05:32:18.015000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://cloud.ibm.com/docs/services/Cloudant?topic=cloudant-apache-couchdb-operator)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v1.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:21:06.905000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:69d23e864702313e046e6ce8f4db4d4207ca6cc7bd2a4fc82f1bfb3075a0a683",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:69d23e864702313e046e6ce8f4db4d4207ca6cc7bd2a4fc82f1bfb3075a0a683",
          "name": "couchdb-operator-69d23e864702313e046e6ce8f4db4d4207ca6cc7bd2a4fc82f1bfb3075a0a683-annotation"
        },
        {
          "digest": "sha256:69d23e864702313e046e6ce8f4db4d4207ca6cc7bd2a4fc82f1bfb3075a0a683",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:69d23e864702313e046e6ce8f4db4d4207ca6cc7bd2a4fc82f1bfb3075a0a683",
          "name": "couchdb-operator"
        }
      ],
      "skip_range": ">=1.0.0 <1.1.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.1.0",
      "version_original": "1.1.0"
    },
    {
      "_id": "60470863dbb14c0b8248bac9",
      "alm_examples": [
        {
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme"
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:351a5012eaf8a3649bf81f1c3a737cb5ae4457e9df8078a7229322839db567e4",
      "bundle_path_digest": "sha256:351a5012eaf8a3649bf81f1c3a737cb5ae4457e9df8078a7229322839db567e4",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.2",
      "creation_date": "2021-03-09T05:32:19.524000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://cloud.ibm.com/docs/services/Cloudant?topic=cloudant-apache-couchdb-operator)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v1.2.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:19:39.656000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:69285b1e98ab035c8ed9a9a818c4d39113a3625fa0d935090c0c548437ffaa99",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:69285b1e98ab035c8ed9a9a818c4d39113a3625fa0d935090c0c548437ffaa99",
          "name": "couchdb-operator-69285b1e98ab035c8ed9a9a818c4d39113a3625fa0d935090c0c548437ffaa99-annotation"
        },
        {
          "digest": "sha256:69285b1e98ab035c8ed9a9a818c4d39113a3625fa0d935090c0c548437ffaa99",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:69285b1e98ab035c8ed9a9a818c4d39113a3625fa0d935090c0c548437ffaa99",
          "name": "couchdb-operator"
        }
      ],
      "skip_range": ">=1.0.0 <1.2.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.2.1",
      "version_original": "1.2.1"
    },
    {
      "_id": "604708645a00810ecaf7c418",
      "alm_examples": [
        {
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme"
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:730800366a7127b70c07c8298d9ecbdbf32c248ad09198388fe1a0f03b3ee4cf",
      "bundle_path_digest": "sha256:730800366a7127b70c07c8298d9ecbdbf32c248ad09198388fe1a0f03b3ee4cf",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.3",
      "creation_date": "2021-03-09T05:32:20.759000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://cloud.ibm.com/docs/services/Cloudant?topic=cloudant-apache-couchdb-operator)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v1.3.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:16:09.842000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:488be91257da4dd2a911f47df47f24daaaaac750c2135695d670b4d69214196d",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:488be91257da4dd2a911f47df47f24daaaaac750c2135695d670b4d69214196d",
          "name": "couchdb-operator-488be91257da4dd2a911f47df47f24daaaaac750c2135695d670b4d69214196d-annotation"
        },
        {
          "digest": "sha256:488be91257da4dd2a911f47df47f24daaaaac750c2135695d670b4d69214196d",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:488be91257da4dd2a911f47df47f24daaaaac750c2135695d670b4d69214196d",
          "name": "couchdb-operator"
        }
      ],
      "skip_range": ">=1.0.0 <1.3.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.3.1",
      "version_original": "1.3.1"
    },
    {
      "_id": "60470865122bd89307e01069",
      "alm_examples": [
        {
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "admisnPassword": "changeme"
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:0bf222bc4a737f1c9c20a8d6129177cf3dd2bd7d52bb08834518a6e81ecdf0af",
      "bundle_path_digest": "sha256:0bf222bc4a737f1c9c20a8d6129177cf3dd2bd7d52bb08834518a6e81ecdf0af",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "v1.4",
      "creation_date": "2021-03-09T05:32:21.831000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://cloud.ibm.com/docs/services/Cloudant?topic=cloudant-apache-couchdb-operator)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v1.4.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:20:58.997000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:b02b2addc64e09514e61fd27d713453be7b122a7cea862b291511167df69cedb",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:b02b2addc64e09514e61fd27d713453be7b122a7cea862b291511167df69cedb",
          "name": "couchdb-operator-b02b2addc64e09514e61fd27d713453be7b122a7cea862b291511167df69cedb-annotation"
        },
        {
          "digest": "sha256:b02b2addc64e09514e61fd27d713453be7b122a7cea862b291511167df69cedb",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:b02b2addc64e09514e61fd27d713453be7b122a7cea862b291511167df69cedb",
          "name": "couchdb-operator"
        }
      ],
      "skip_range": ">=1.0.0 <1.4.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.4.2",
      "version_original": "1.4.2"
    },
    {
      "_id": "6047086a6280a414853ec519",
      "alm_examples": [
        {
          "kind": "Cyberarmor",
          "metadata": {
            "name": "cyberarmor-operator"
          },
          "spec": {
            "caClusterGuid": "",
            "caClusterName": "",
            "caCustomerGuid": "",
            "caDashboardBackend": "",
            "caK8sReportUrl": "",
            "caMasterNotificationServerHost": "",
            "caPortalBackend": "",
            "caPostman": "",
            "caloginInfo": {
              "password": "",
              "username": ""
            }
          }
        },
        {
          "kind": "Cyberarmornamespace",
          "metadata": {
            "name": "cyberarmor-namespace"
          },
          "spec": {
            "cyberArmorNameSpace": "cyberarmor-system"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cyber-armor/ca-operator-bundle@sha256:c9d7743181b4811203eaf7f977949ceaa369cfb2407d878bf8677f3d0536419f",
      "bundle_path_digest": "sha256:c9d7743181b4811203eaf7f977949ceaa369cfb2407d878bf8677f3d0536419f",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-03-09T05:32:26.407000+00:00",
      "csv_description": "Cyber Armor operator installs and configures the Cyber Armor Control Plane on OpenShift clusters. User will need to obtain a Cyber Armor account before installing the operator\n\nIf you do not yet have an account or you want more information please feel free to contact us at [cyberarmor.io](https://www.cyberarmor.io/)\n\n## Install CyberArmor operator\n\n* Create the `cyberarmor-namespace` operator. This operator will apply the cyberarmor namespace that is necessary for the `cyberarmor-operator`\n\n* Install and login CyberArmor command line tool [Install cacli](https://docs.cyberarmor.io/getting/installing)\n\n* Run `cacli cluster register --name <cluster name> --platform openshift --output cyberarmor-workload.yaml`\n\n* Create `cyberarmor-operator`. Use the values from cyberarmor-workload.yaml file\n\n* After upating the values from the cyberarmor-workload.yaml, edit the credentials\n\n* [Protect your workloads](https://docs.cyberarmor.io/en/getting/hello-world)\n\n## About CyberArmor\n\nMade for DevOps and Trusted by CISOs, Cyber Armor enables DevOps teams to automatically create hardened OpenShift and Hybrid environments using existing DevOps tools and processes.\n\n\nCyber Armor is the first to deliver runtime workload memory protection, Network control, and data protection under a single  service-to-service control plane, simplifying operations and increasing visibility and security.\n\n\nThrough patented technology, Cyber Armor seamlessly integrates with the CI/CD pipeline to learn every workload and create a software DNA by scanning all binaries, scripts and configurations. It then automatically validates all running workloads against that DNA in-memory, in runtime. Immediately and deterministically identifying any software attack, memory exploit or fileless malware.\n\n\nThe Cyber Armor control plane assures only such approved and healthy state workloads can connect with each other and access data while enabling the user to easilty configure network access and data access policies based on workload identities and attributes.\n\n\nThe result is more resilient and highly visible production environments with less required security gates and security configurations which means shorter development to production cycles, higher visibility and change control, better compliance readiness and of course stronger security.\n",
      "csv_display_name": "Cyberarmor Operator",
      "csv_metadata_description": "Cyber Armor operator installs and configures the Cyber Armor Control Plane on OpenShift clusters. User will need to obtain a Cyber Armor account before installing the Cyber Armor Operator",
      "csv_name": "cyberarmor-operator.0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:18:29.227000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "cyberarmor-operator-certified",
      "provided_apis": [
        {
          "group": "apm.cyberarmor.com",
          "kind": "Cyberarmor",
          "plural": "cyberarmors",
          "version": "v1alpha1"
        },
        {
          "group": "apm.cyberarmor.com",
          "kind": "Cyberarmornamespace",
          "plural": "cyberarmornamespaces",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:3f7dccc0d0d82f07c639f86f31a3b8831129acf2ad96f0056fb7bf1f6d1ee0d9",
          "image": "registry.connect.redhat.com/cyber-armor/ca-operator@sha256:3f7dccc0d0d82f07c639f86f31a3b8831129acf2ad96f0056fb7bf1f6d1ee0d9",
          "name": "ca-operator-3f7dccc0d0d82f07c639f86f31a3b8831129acf2ad96f0056fb7bf1f6d1ee0d9-annotation"
        },
        {
          "digest": "sha256:3f7dccc0d0d82f07c639f86f31a3b8831129acf2ad96f0056fb7bf1f6d1ee0d9",
          "image": "registry.connect.redhat.com/cyber-armor/ca-operator@sha256:3f7dccc0d0d82f07c639f86f31a3b8831129acf2ad96f0056fb7bf1f6d1ee0d9",
          "name": "cyberarmor-operator"
        },
        {
          "digest": "sha256:90bf4caf885e098a3bb63b6dd66ef5e7757f64b7c3f4539a7367e15b3eb465a6",
          "image": "registry.connect.redhat.com/cyber-armor/ocimage-service@sha256:90bf4caf885e098a3bb63b6dd66ef5e7757f64b7c3f4539a7367e15b3eb465a6",
          "name": "ocimage"
        },
        {
          "digest": "sha256:2c2357f1e200ed626415dbe531ae018af13ac70d3c4420d6e1c42b208a66f058",
          "image": "registry.connect.redhat.com/cyber-armor/ca-controller@sha256:2c2357f1e200ed626415dbe531ae018af13ac70d3c4420d6e1c42b208a66f058",
          "name": "controller"
        },
        {
          "digest": "sha256:f607bbae97bd8f7968c19e0b638802f1e6b12fdfd7984c464b63c55e312aefc4",
          "image": "registry.connect.redhat.com/cyber-armor/notification-service@sha256:f607bbae97bd8f7968c19e0b638802f1e6b12fdfd7984c464b63c55e312aefc4",
          "name": "notificstion"
        },
        {
          "digest": "sha256:cbc3d43ba3691ec29d9f17a477efd128c6c00d58d2e3343bdec355632c19849b",
          "image": "registry.connect.redhat.com/cyber-armor/ca-dashboard-connector@sha256:cbc3d43ba3691ec29d9f17a477efd128c6c00d58d2e3343bdec355632c19849b",
          "name": "aggregator"
        },
        {
          "digest": "sha256:a77d4fd4a400972d330d3e81873d5cbb70ac68f62ca57fb474d2dd7de3784165",
          "image": "registry.connect.redhat.com/cyber-armor/cyberarmor-controlpanel-connector@sha256:a77d4fd4a400972d330d3e81873d5cbb70ac68f62ca57fb474d2dd7de3784165",
          "name": "trigger"
        },
        {
          "digest": "sha256:59931a9caaa3ba2cc940a3f13f7287e3f6c12bfc8dac8fca2647c3cf6d5e2ecf",
          "image": "registry.connect.redhat.com/cyber-armor/oracle-service@sha256:59931a9caaa3ba2cc940a3f13f7287e3f6c12bfc8dac8fca2647c3cf6d5e2ecf",
          "name": "oracle"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "6047086b122bd89307e0106a",
      "alm_examples": [
        {
          "kind": "DashboardWithJupyterLab",
          "metadata": {
            "name": "dashboard-with-jupyterlab"
          },
          "spec": {
            "resources": {
              "limits": {
                "cpu": "2",
                "memory": "8Gi"
              },
              "requests": {
                "cpu": "2",
                "memory": "8Gi"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/data-explorer-operator-bundle@sha256:10307151bc8be054b677438353bbe702ce57cc6ebe6954ebd8e00eca0356c852",
      "bundle_path_digest": "sha256:10307151bc8be054b677438353bbe702ce57cc6ebe6954ebd8e00eca0356c852",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-03-09T05:32:27.635000+00:00",
      "csv_description": "Data Explorer provides ready to use pre-configured data science environment for experimentation.Bringing the promise of notebooks to Kubernetes and OpenShift as an Operator pattern.  Deploy in the cloud or your data center or local laptop with ready to use data and notebooks without burdening yourself with installation details. You can work as team or use your own project namespace.\n\nThe Operator deploys Data Explorer Dashbaord with **default** configuration of **2 CPU** and **8Gi Memory**.\n\nTo learn ***How to access the Data Explorer Dashboard*** and ***How to Deploy Data Explorer Dashboard with custom configuration*** visit <https://github.com/rhm-samples/data-explorer-operator/wiki>.\n",
      "csv_display_name": "Data Explorer Operator",
      "csv_metadata_description": "",
      "csv_name": "data-explorer-operator.v0.1.7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:18:56.706000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "data-explorer-operator-certified",
      "provided_apis": [
        {
          "group": "data-explorer.com",
          "kind": "DashboardWithJupyterLab",
          "plural": "dashboardwithjupyterlabs",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:4a84cb8c21b63b4c05fc9600b4ecbfee0d99bcf2541e6ba4a39c1d2de6ab8d5c",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:4a84cb8c21b63b4c05fc9600b4ecbfee0d99bcf2541e6ba4a39c1d2de6ab8d5c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:f6afc6f52b2d86d6def1420a2553941efacfbb321feae9ed4b5424f5fa42646d",
          "image": "registry.connect.redhat.com/ibm-edge/data-explorer-operator@sha256:f6afc6f52b2d86d6def1420a2553941efacfbb321feae9ed4b5424f5fa42646d",
          "name": "manager"
        },
        {
          "digest": "sha256:c225832941b1d3b53faf74e7d6af668d41f5d1164661fbf3103635807f58f65a",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:c225832941b1d3b53faf74e7d6af668d41f5d1164661fbf3103635807f58f65a",
          "name": "dashboardinstaller"
        },
        {
          "digest": "sha256:4a15443f4798884522b62fcdf0f100deac8f2cb3c13053c72c33a3d25149ac58",
          "image": "registry.connect.redhat.com/ibm-edge/data-explorer-dashboard@sha256:4a15443f4798884522b62fcdf0f100deac8f2cb3c13053c72c33a3d25149ac58",
          "name": "jupyterlab_dashboard"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.1.7",
      "version_original": "0.1.7"
    },
    {
      "_id": "6047086e5a00810ecaf7c419",
      "alm_examples": [
        {
          "kind": "DatadogAgent",
          "metadata": {
            "name": "datadog-agent"
          },
          "spec": {
            "agent": {
              "config": {
                "tolerations": [
                  {
                    "operator": "Exists"
                  }
                ]
              },
              "image": {
                "name": "datadog/agent:latest"
              }
            },
            "clusterAgent": {
              "config": {
                "clusterChecksRunnerEnabled": true,
                "metricsProviderEnabled": true
              },
              "image": {
                "name": "datadog/cluster-agent:latest"
              },
              "replicas": 2
            },
            "clusterChecksRunner": {
              "image": {
                "name": "datadog/agent:latest"
              }
            },
            "credentials": {
              "apiKey": "<DATADOG_API_KEY>",
              "appKey": "<DATADOG_APP_KEY>",
              "token": "<DATADOG_CLUSTER_AGENT_TOKEN>"
            }
          }
        },
        {
          "kind": "DatadogMetric",
          "metadata": {
            "name": "cpu-example"
          },
          "spec": {
            "externalMetricName": "cpu-example",
            "query": "avg:kubernetes.cpu.usage.total{app:foo}.rollup(avg,30)/(avg:kubernetes.cpu.limits{app:foo}.rollup(avg,30)*10000000)"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/datadog/operator-bundle@sha256:c4fc64e5ed02c594b876983564ee96123ba255c2376caf9d9f5584ed0a273ee1",
      "bundle_path_digest": "sha256:c4fc64e5ed02c594b876983564ee96123ba255c2376caf9d9f5584ed0a273ee1",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "beta",
      "creation_date": "2021-03-09T05:32:30.598000+00:00",
      "csv_description": "Datadog provides a modern monitoring and analytics platform. Gather metrics, logs and traces for full observability of your Kubernetes cluster with Datadog Operator.",
      "csv_display_name": "Datadog Operator",
      "csv_metadata_description": "Datadog provides a modern monitoring and analytics platform. Gather metrics, logs and traces for full observability of your Kubernetes cluster with Datadog Operator.",
      "csv_name": "datadog-operator.v0.3.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:21:42.238000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "datadog-operator-certified",
      "provided_apis": [
        {
          "group": "datadoghq.com",
          "kind": "DatadogAgent",
          "version": "v1alpha1"
        },
        {
          "group": "datadoghq.com",
          "kind": "DatadogMetric",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:2bfb23537413794f9b4369141e3ab9135ff8f79dd08b055668be78f157006d1a",
          "image": "registry.connect.redhat.com/datadog/operator@sha256:2bfb23537413794f9b4369141e3ab9135ff8f79dd08b055668be78f157006d1a",
          "name": "operator-2bfb23537413794f9b4369141e3ab9135ff8f79dd08b055668be78f157006d1a-annotation"
        },
        {
          "digest": "sha256:2bfb23537413794f9b4369141e3ab9135ff8f79dd08b055668be78f157006d1a",
          "image": "registry.connect.redhat.com/datadog/operator@sha256:2bfb23537413794f9b4369141e3ab9135ff8f79dd08b055668be78f157006d1a",
          "name": "datadog-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.3.0",
      "version_original": "0.3.0"
    },
    {
      "_id": "60470872122bd89307e0106b",
      "alm_examples": [
        {
          "kind": "Densify",
          "metadata": {
            "name": "example-densify"
          },
          "spec": {
            "affinity": {},
            "config": {
              "cronJob": {
                "schedule": "0 * * * *"
              },
              "debug": false,
              "densify": {
                "epassword": "<encrypted densify user password>",
                "hostname": "<instance>.densify.com",
                "port": 443,
                "protocol": "https",
                "user": "<densify user>"
              },
              "prometheus": {
                "hostname": "<prometheus hostname>",
                "port": "<prometheus port>",
                "protocol": "http"
              },
              "zipEnabled": true,
              "zipname": "data/<zip name>"
            },
            "image": "densify/container-optimization-data-forwarder:release-2.2.1-beta",
            "nodeSelector": {},
            "pullPolicy": "Always",
            "replicaCount": 1,
            "resources": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/densify/densify-operator-bundle@sha256:b369e48b59bcbd9710be712f601dfe00b09e2be24047f32c91b025a9336c88b0",
      "bundle_path_digest": "sha256:b369e48b59bcbd9710be712f601dfe00b09e2be24047f32c91b025a9336c88b0",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-03-09T05:32:34.528000+00:00",
      "csv_description": "Densify Container Resource Management works to identify better supply (resource) allocations for your underlying containers based on key technical, business and cost criteria.  Any infrastructure changes recommended by Densify can be moderated through your existing ITSM framework / processes.",
      "csv_display_name": "Densify Operator",
      "csv_metadata_description": "Densify Container Resource Management works to identify better supply (resource) allocations for your underlying containers based on key technical, business and cost criteria.  Any infrastructure changes recommended by Densify can be moderated through your existing ITSM framework / processes.",
      "csv_name": "densify-operator.v0.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:17:40.366000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "densify-operator",
      "provided_apis": [
        {
          "group": "densify.com",
          "kind": "Densify",
          "plural": "densifies",
          "version": "v1"
        },
        {
          "group": "densify.com",
          "kind": "Densify",
          "plural": "densifies",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:bd81b1d8ff3e67a2619104aaf7960ec0c0cd90b8661874aa9377f5177d4d0a58",
          "image": "registry.connect.redhat.com/densify/densify-operator@sha256:bd81b1d8ff3e67a2619104aaf7960ec0c0cd90b8661874aa9377f5177d4d0a58",
          "name": "densify-operator-bd81b1d8ff3e67a2619104aaf7960ec0c0cd90b8661874aa9377f5177d4d0a58-annotation"
        },
        {
          "digest": "sha256:0bf4526525244c0b2fbace318fe70ba9fce3b32fc9e1fcd85bac903bc6a95cf3",
          "image": "registry.connect.redhat.com/densify/densify-operator@sha256:0bf4526525244c0b2fbace318fe70ba9fce3b32fc9e1fcd85bac903bc6a95cf3",
          "name": "densify-operator"
        },
        {
          "digest": "sha256:c549f1f01933f6c1f95deac4c92c95c34eb9617d228f211b192490f3f7bede20",
          "image": "registry.connect.redhat.com/densify/container-data-collection-forwarder@sha256:c549f1f01933f6c1f95deac4c92c95c34eb9617d228f211b192490f3f7bede20",
          "name": "densify"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.2",
      "version_original": "0.0.2"
    },
    {
      "_id": "60470873dbb14c0b8248bacc",
      "alm_examples": [
        {
          "kind": "Densify",
          "metadata": {
            "name": "densify"
          },
          "spec": {
            "affinity": {},
            "config": {
              "cronJob": {
                "schedule": "0 * * * *"
              },
              "debug": false,
              "densify": {
                "epassword": "<encrypted densify user password>",
                "hostname": "<instance>.densify.com",
                "port": 443,
                "protocol": "https",
                "user": "<densify user>"
              },
              "prometheus": {
                "hostname": "<prometheus hostname>",
                "port": "<prometheus port>",
                "protocol": "http"
              },
              "zipEnabled": true,
              "zipname": "data/<zip name>"
            },
            "image": "registry.connect.redhat.com/densify/container-data-collection-forwarder@sha256:d99a1bc9213554cdf70202fa73e135c68fdd77a4b4972f591997dd2b94fde50a",
            "nodeSelector": {},
            "pullPolicy": "Always",
            "replicaCount": 1,
            "resources": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/densify/densify-operator-bundle@sha256:6c37c211385ffad721637ea1a6bcda46e4aa9aa46efdbeec6f75e9b9bd7ff75d",
      "bundle_path_digest": "sha256:6c37c211385ffad721637ea1a6bcda46e4aa9aa46efdbeec6f75e9b9bd7ff75d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.0",
      "creation_date": "2021-03-09T05:32:35.743000+00:00",
      "csv_description": "The Densify-Operator deploys the Densify Container Data Collection utility, which collects data from a Prometheus server and sends it to a Densify instance for analysis. \n\n# Prerequisites\n\n- Densify account, which is provided with a Densify subscription or through a free trial (https://www.densify.com/service/signup)\n- Prometheus (https://prometheus.io/)\n- Kube-state-metrics (https://github.com/kubernetes/kube-state-metrics)\n\n# Installing\n\n## Basic Install\nThe instruction below deploys the basic Densify Container Data Collection with minimal configuration.\n1. update the Densify hostname, user and encrypted password, Prometheus hostname and port, and zip filename:\n```\napiVersion: densify.com/v1\nkind: Densify\nmetadata:\n  name: densify\nspec:\n  config:\n    densify:\n      hostname: <instance>.densify.com\n      port: 443\n      protocol: https\n      user: <densify user>\n      epassword: <encrypted densify user password>\n    prometheus:\n      hostname: <prometheus hostname>\n      port: <prometheus port>\n      protocol: http\n    zipname: data/<zip name>\n```\n\n## Install Using a Secret for User and Password\nThe instructions below deploy the Densify Container Data Collection using a secret to store the username and encrypted password.\n1. Create a secret that contains the username and epassword keys.\n```\noc -n \"<namespace deploying operator into>\" create secret generic densify-secret \\\n  --from-literal=username=\"<densify username>\" \\\n  --from-literal=epassword=\"<encrypted password>\" \\\n```\n2. Update the Densify hostname, Prometheus hostname and port, and zip filename:\n```\napiVersion: densify.com/v1\nkind: Densify\nmetadata:\n  name: densify\nspec:\n  config:\n    densify:\n      hostname: <instance>.densify.com\n      port: 443\n      protocol: https\n      UserSecretName: densify-secret\n    prometheus:\n      hostname: <prometheus hostname>\n      port: <prometheus port>\n      protocol: http\n    zipname: data/<zip name>\n```\n# Configuration\n \nThe configuration parameters are the same set as the [Densify Forwarder](https://github.com/densify-dev/helm-charts/tree/master/charts/container-optimization-data-forwarder#configuration) helm chart:\n\n| Parameter        | Description           | Default |\n| ------------- |-------------|--------|\n| `config.densify.hostname` | Specify the Densify instance hostname. You may need to specify a fully qualified domain name. | `<instance>.densify.com` |\n| `config.densify.protocol` | Specify the Densify connection protocol: http or https. | `<http/https>` |\n| `config.densify.port` | Specify the Densify connection port number. | `443` |\n| `config.densify.user` | Specify the Densify user account. You must specify either a password or an epassword along with this parameter. This user must already exist in your Densify instance and have API access privileges. Alternatively, you can use config.densify.UserSecretName for authentication instead of user/(e)password combination (see UserSecretName below). | `nil` |\n| `config.densify.password` | Specify the password for the Densify user. Only specify a password or an encrypted password (not both). | `nil` |\n| `config.densify.epassword` | Specify the encrypted password for the Densify User. If you specify an encrypted password, then disable the config.densify.password paramter. | `nil` |\n| `config.densify.UserSecretName` | Specify the secret name used to store the Densify user and epassword (keys must contain username and epassword). If this parameter is used, then config.densify.username\\password\\epassword parameters must be disabled. | `nil` |\n| `config.prometheus.hostname` | Specify the Prometheus address. Using the internal service name is recommended (i.e. `<service name>.<namespace>.svc`). | `nil` |\n| `config.prometheus.protocol` | Specify the Prometheus connection protocol: http or https. | `<http/https>` |\n| `config.prometheus.port` | Specify the Prometheus service connection port. | `9090` |\n| `config.prometheus.clustername` | Specify the name to identify the cluster in the Densify UI. If this parameter is disabled, then the specified Prometheus hostname is used to identify the cluster in the Densify UI. | `nil` |\n| `config.zipname` | Specify the name of the zipfile to send to Densify. | `data/nil` |\n| `rbac.create` | This flag indicates if RBAC resources are created and used. This flag must be \"true\" for API access to Prometheus in a secured cluster. | `true` |\n| `serviceAccount.create` | Specify \"true\" to create a Service Account with the name specified by the serviceAccount.name parameter (see below). | `true` |\n| `serviceAccount.name` | Specify the name of the Service Account. If this parameter is disabled, then the Helm chart name is used as the Service Account name. You can specify an existing Service Account name to use, if serviceAccount.create == \"false\". | `nil` |\n\nRefer to the [Densify Forwarder](https://github.com/densify-dev/helm-charts/tree/master/charts/container-optimization-data-forwarder#configuration) helm chart for the full list of parameters.\n\n# Limitation\n* OS Support: Linux\n* Architecture: AMD64\n\n# Documentation\n* [Densify Feature Description and Reference Guide](https://www.densify.com/docs/Content/Welcome.htm)\n\n# License\nApache 2 Licensed. See [LICENSE](LICENSE) for full details.",
      "csv_display_name": "Densify Operator",
      "csv_metadata_description": "Densify Container Resource Management works to identify better supply (resource) allocations for your underlying containers based on key technical, business and cost criteria.  Any infrastructure changes recommended by Densify can be moderated through your existing ITSM framework / processes.",
      "csv_name": "densify-operator.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:20:51.201000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "densify-operator",
      "provided_apis": [
        {
          "group": "densify.com",
          "kind": "Densify",
          "plural": "densifies",
          "version": "v1"
        },
        {
          "group": "densify.com",
          "kind": "Densify",
          "plural": "densifies",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:47582660364156ea36279dd9fdcc43bdad7092f07ab8d79101fd6eca7da73ada",
          "image": "registry.connect.redhat.com/densify/densify-operator@sha256:47582660364156ea36279dd9fdcc43bdad7092f07ab8d79101fd6eca7da73ada",
          "name": "densify-operator-47582660364156ea36279dd9fdcc43bdad7092f07ab8d79101fd6eca7da73ada-annotation"
        },
        {
          "digest": "sha256:47582660364156ea36279dd9fdcc43bdad7092f07ab8d79101fd6eca7da73ada",
          "image": "registry.connect.redhat.com/densify/densify-operator@sha256:47582660364156ea36279dd9fdcc43bdad7092f07ab8d79101fd6eca7da73ada",
          "name": "densify-operator"
        },
        {
          "digest": "sha256:d99a1bc9213554cdf70202fa73e135c68fdd77a4b4972f591997dd2b94fde50a",
          "image": "registry.connect.redhat.com/densify/container-data-collection-forwarder@sha256:d99a1bc9213554cdf70202fa73e135c68fdd77a4b4972f591997dd2b94fde50a",
          "name": "densify"
        },
        {
          "digest": "sha256:d99a1bc9213554cdf70202fa73e135c68fdd77a4b4972f591997dd2b94fde50a",
          "image": "registry.connect.redhat.com/densify/container-data-collection-forwarder@sha256:d99a1bc9213554cdf70202fa73e135c68fdd77a4b4972f591997dd2b94fde50a",
          "name": "container-data-collection-forwarder-d99a1bc9213554cdf70202fa73e135c68fdd77a4b4972f591997dd2b94fde50a-annotation"
        }
      ],
      "skip_range": ">=0.0.2 <1.0.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "60470876dbb14c0b8248bacd",
      "alm_examples": [
        {
          "kind": "Eddi",
          "metadata": {
            "name": "eddi"
          },
          "spec": {
            "size": 1
          }
        },
        {
          "kind": "Eddioperator",
          "metadata": {
            "name": "eddioperator"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/labsai/eddi-operator-bundle@sha256:c848665b6cddace5bb008c642a90df95ef75febe83fd01d3aa66c6d3eb78ed90",
      "bundle_path_digest": "sha256:c848665b6cddace5bb008c642a90df95ef75febe83fd01d3aa66c6d3eb78ed90",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-03-09T05:32:38.801000+00:00",
      "csv_description": "## About the managed application\n**Enterprise-Ready Open Source Chatbot Platform**\ncreate, run and maintain customizable chatbots\n**Scale Horizontally**\nscale out horizontally due to resource-oriented design & RESTful\narchitecture\n**NLP Parser**\nmatch user inputs as words and phrases even in case of spelling mistakes or\nmissing spaces between words\n**Behavior Rules**\nmake decisions with predefined and custom conditions\n**Conversation Memory**\nstore context information between user interactions in order to make better\nconversation decisions\n**Extension Oriented**\nbuild loosely coupled plugins that allows the integration of new algorithms\nand communication to other systems\n**Modular Bot Configurations**\nshare bot knowledge across bots in order to reuse components and thus speed\nup further developments\n**Versioned Configurations**\ntrack changes of all of your configurations. Use different versions of your\nconfigurations in different bots, to allow multiple bots with shared\nknowledge\n**Developed as Microservices, Restful by Design**\nwe don't need to comment on that, do we...? ;-) \n## About this Operator\n\nLaunch and update EDDI instances\n### Usage\nDeploy an EDDI instance by creating a new EDDI resource in the desired Namespace.\n```Yaml\napiVersion: labs.ai/v1alpha1\nkind: Eddi\nmetadata:\n  name: eddi\nspec:\n  size: 1\n```\nThe operator will deploy a MongoDB pod, an EDDI Instance and create a route to access the EDDI WebUI. The route is automatically created. \nExample route based on the resource above deployed to a namespace called test: `eddi-route-test.apps.ocp.example.com`",
      "csv_display_name": "EDDI Operator",
      "csv_metadata_description": "Basic Installation of EDDI, upgrade to new versions",
      "csv_name": "eddi-operator.v1.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:17:52.686000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "eddi-operator-certified",
      "provided_apis": [
        {
          "group": "labs.ai",
          "kind": "Eddioperator",
          "plural": "eddioperators",
          "version": "v1alpha1"
        },
        {
          "group": "labs.ai",
          "kind": "Eddi",
          "plural": "eddis",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:b36cb46542809218e871e23c5b71cd6dd23fb1b57218ef7df3d04c7277e19545",
          "image": "registry.connect.redhat.com/labsai/eddi-operator@sha256:b36cb46542809218e871e23c5b71cd6dd23fb1b57218ef7df3d04c7277e19545",
          "name": "operator"
        },
        {
          "digest": "sha256:2978e84d97639bc616e557ce52fc677df54acbc965ee9a32825f0e565a3f94b3",
          "image": "registry.connect.redhat.com/labsai/eddi@sha256:2978e84d97639bc616e557ce52fc677df54acbc965ee9a32825f0e565a3f94b3",
          "name": "db"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.2",
      "version_original": "1.0.2"
    },
    {
      "_id": "6047087b5a00810ecaf7c41a",
      "alm_examples": [
        {
          "kind": "Falco",
          "metadata": {
            "name": "example-falco"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sysdig/falco-operator-bundle@sha256:ed6d3b83f8ef2c7b2f97ab24a442f211d225f93d516ff6acba55d0566ec3cd2e",
      "bundle_path_digest": "sha256:ed6d3b83f8ef2c7b2f97ab24a442f211d225f93d516ff6acba55d0566ec3cd2e",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-03-09T05:32:43.608000+00:00",
      "csv_description": "[Falco](https://falco.org) is a behavioral activity monitor designed to\ndetect anomalous activity in your applications. You can use Falco to\nmonitor run-time security of your Kubernetes applications and internal\ncomponents.\n\nThis operator installs Falco in all nodes in your cluster via a DaemonSet.\n\n## Settings\n\nThis operator, uses the same options than the Helm Chart please take a look\nto all the options in the following table:\n\n| Parameter                                       | Description                                                                                                                                                                                                | Default                                                                                                                                   |\n| ---                                             | ---                                                                                                                                                                                                        | ---                                                                                                                                       |\n| `image.registry`                                | The image registry to pull from                                                                                                                                                                            | `docker.io`                                                                                                                               |\n| `image.repository`                              | The image repository to pull from                                                                                                                                                                          | `falcosecurity/falco`                                                                                                                     |\n| `image.tag`                                     | The image tag to pull                                                                                                                                                                                      | `0.24.0`                                                                                                                                  |\n| `image.pullPolicy`                              | The image pull policy                                                                                                                                                                                      | `IfNotPresent`                                                                                                                            |\n| `containerd.enabled`                            | Enable ContainerD support                                                                                                                                                                                  | `true`                                                                                                                                    |\n| `containerd.socket`                             | The path of the ContainerD socket                                                                                                                                                                          | `/run/containerd/containerd.sock`                                                                                                         |\n| `docker.enabled`                                | Enable Docker support                                                                                                                                                                                      | `true`                                                                                                                                    |\n| `docker.socket`                                 | The path of the Docker daemon socket                                                                                                                                                                       | `/var/run/docker.sock`                                                                                                                    |\n| `resources.requests.cpu`                        | CPU requested for being run in a node                                                                                                                                                                      | `100m`                                                                                                                                    |\n| `resources.requests.memory`                     | Memory requested for being run in a node                                                                                                                                                                   | `512Mi`                                                                                                                                   |\n| `resources.limits.cpu`                          | CPU limit                                                                                                                                                                                                  | `200m`                                                                                                                                    |\n| `resources.limits.memory`                       | Memory limit                                                                                                                                                                                               | `1024Mi`                                                                                                                                  |\n| `extraArgs`                                     | Specify additional container args                                                                                                                                                                          | `[]`                                                                                                                                      |\n| `rbac.create`                                   | If true, create & use RBAC resources                                                                                                                                                                       | `true`                                                                                                                                    |\n| `serviceAccount.create`                         | Create serviceAccount                                                                                                                                                                                      | `true`                                                                                                                                    |\n| `serviceAccount.name`                           | Use this value as serviceAccountName                                                                                                                                                                       | ` `                                                                                                                                       |\n| `fakeEventGenerator.enabled`                    | Run falco-event-generator for sample events                                                                                                                                                                | `false`                                                                                                                                   |\n| `fakeEventGenerator.replicas`                   | How many replicas of falco-event-generator to run                                                                                                                                                          | `1`                                                                                                                                       |\n| `daemonset.updateStrategy.type`                 | The updateStrategy for updating the daemonset                                                                                                                                                              | `RollingUpdate`                                                                                                                           |\n| `daemonset.env`                                 | Extra environment variables passed to daemonset pods                                                                                                                                                       | `{}`                                                                                                                                      |\n| `daemonset.podAnnotations`                      | Extra pod annotations to be added to pods created by the daemonset                                                                                                                                         | `{}`                                                                                                                                      |\n| `podSecurityPolicy.create`                      | If true, create & use podSecurityPolicy                                                                                                                                                                    | `false`                                                                                                                                   |\n| `proxy.httpProxy`                               | Set the Proxy server if is behind a firewall                                                                                                                                                               | ` `                                                                                                                                       |\n| `proxy.httpsProxy`                              | Set the Proxy server if is behind a firewall                                                                                                                                                               | ` `                                                                                                                                       |\n| `proxy.noProxy`                                 | Set the Proxy server if is behind a firewall                                                                                                                                                               | ` `                                                                                                                                       |\n| `timezone`                                      | Set the daemonset's timezone                                                                                                                                                                               | ` `                                                                                                                                       |\n| `priorityClassName`                             | Set the daemonset's priorityClassName                                                                                                                                                                      | ` `                                                                                                                                       |\n| `ebpf.enabled`                                  | Enable eBPF support for Falco instead of `falco-probe` kernel module                                                                                                                                       | `false`                                                                                                                                   |\n| `ebpf.settings.hostNetwork`                     | Needed to enable eBPF JIT at runtime for performance reasons                                                                                                                                               | `true`                                                                                                                                    |\n| `auditLog.enabled`                              | Enable K8s audit log support for Falco                                                                                                                                                                     | `false`                                                                                                                                   |\n| `auditLog.dynamicBackend.enabled`               | Deploy the Audit Sink where Falco listens for K8s audit log events                                                                                                                                         | `false`                                                                                                                                   |\n| `auditLog.dynamicBackend.url`                   | Define if Audit Sink client config should point to a fixed [url](https://kubernetes.io/docs/tasks/debug-application-cluster/audit/#url) (useful for development) instead of the default webserver service. | ``                                                                                                                                        |\n| `falco.rulesFile`                               | The location of the rules files                                                                                                                                                                            | `[/etc/falco/falco_rules.yaml, /etc/falco/falco_rules.local.yaml, /etc/falco/rules.available/application_rules.yaml, /etc/falco/rules.d]` |\n| `falco.timeFormatISO8601`                       | Display times using ISO 8601 instead of local time zone                                                                                                                                                    | `false`                                                                                                                                   |\n| `falco.jsonOutput`                              | Output events in json or text                                                                                                                                                                              | `false`                                                                                                                                   |\n| `falco.jsonIncludeOutputProperty`               | Include output property in json output                                                                                                                                                                     | `true`                                                                                                                                    |\n| `falco.logStderr`                               | Send Falco debugging information logs to stderr                                                                                                                                                            | `true`                                                                                                                                    |\n| `falco.logSyslog`                               | Send Falco debugging information logs to syslog                                                                                                                                                            | `true`                                                                                                                                    |\n| `falco.logLevel`                                | The minimum level of Falco debugging information to include in logs                                                                                                                                        | `info`                                                                                                                                    |\n| `falco.priority`                                | The minimum rule priority level to load and run                                                                                                                                                            | `debug`                                                                                                                                   |\n| `falco.bufferedOutputs`                         | Use buffered outputs to channels                                                                                                                                                                           | `false`                                                                                                                                   |\n| `falco.syscallEventDrops.actions`               | Actions to be taken when system calls were dropped from the circular buffer                                                                                                                                | `[log, alert]`                                                                                                                            |\n| `falco.syscallEventDrops.rate`                  | Rate at which log/alert messages are emitted                                                                                                                                                               | `.03333`                                                                                                                                  |\n| `falco.syscallEventDrops.maxBurst`              | Max burst of messages emitted                                                                                                                                                                              | `10`                                                                                                                                      |\n| `falco.outputs.rate`                            | Number of tokens gained per second                                                                                                                                                                         | `1`                                                                                                                                       |\n| `falco.outputs.maxBurst`                        | Maximum number of tokens outstanding                                                                                                                                                                       | `1000`                                                                                                                                    |\n| `falco.syslogOutput.enabled`                    | Enable syslog output for security notifications                                                                                                                                                            | `true`                                                                                                                                    |\n| `falco.fileOutput.enabled`                      | Enable file output for security notifications                                                                                                                                                              | `false`                                                                                                                                   |\n| `falco.fileOutput.keepAlive`                    | Open file once or every time a new notification arrives                                                                                                                                                    | `false`                                                                                                                                   |\n| `falco.fileOutput.filename`                     | The filename for logging notifications                                                                                                                                                                     | `./events.txt`                                                                                                                            |\n| `falco.stdoutOutput.enabled`                    | Enable stdout output for security notifications                                                                                                                                                            | `true`                                                                                                                                    |\n| `falco.webserver.enabled`                       | Enable Falco embedded webserver to accept K8s audit events                                                                                                                                                 | `true`                                                                                                                                    |\n| `falco.webserver.listenPort`                    | Port where Falco embedded webserver listen to connections                                                                                                                                                  | `8765`                                                                                                                                    |\n| `falco.webserver.k8sAuditEndpoint`              | Endpoint where Falco embedded webserver accepts K8s audit events                                                                                                                                           | `/k8s-audit`                                                                                                                              |\n| `falco.programOutput.enabled`                   | Enable program output for security notifications                                                                                                                                                           | `false`                                                                                                                                   |\n| `falco.programOutput.keepAlive`                 | Start the program once or re-spawn when a notification arrives                                                                                                                                             | `false`                                                                                                                                   |\n| `falco.programOutput.program`                   | Command to execute for program output                                                                                                                                                                      | `mail -s \"Falco Notification\" someone@example.com`                                                                                        |\n| `falco.httpOutput.enabled`                      | Enable http output for security notifications                                                                                                                                                              | `false`                                                                                                                                   |\n| `falco.httpOutput.url`                          | Url to notify using the http output when a notification arrives                                                                                                                                            | `http://some.url`                                                                                                                         |\n| `falco.grpc.enabled`                            | Enable the Falco gRPC server                                                                                                                                                                               | `false`\n| `falco.grpc.listenPort`                         | Port where Falco gRPC server listen to connections                                                                                                                                                         | `5060`\n| `falco.grpc.threadiness`                        | Number of threads (and context) the gRPC server will use                                                                                                                                                   | `8`\n| `falco.grpc.privateKey`                         | Key file path for the Falco gRPC server                                                                                                                                                                    | `/etc/falco/certs/server.key`\n| `falco.grpc.certChain`                          | Cert file path for the Falco gRPC server                                                                                                                                                                   | `/etc/falco/certs/server.crt`\n| `falco.grpc.rootCerts`                          | CA root file path for the Falco gRPC server                                                                                                                                                                | `/etc/falco/certs/ca.crt`\n| `falco.grpcOutput.enabled`                      | Enable the gRPC output and events will be kept in memory until you read them with a gRPC client.                                                                                                           | `false`                                                                                                                                   |\n| `customRules`                                   | Third party rules enabled for Falco                                                                                                                                                                        | `{}`                                                                                                                                      |\n| `integrations.gcscc.enabled`                    | Enable Google Cloud Security Command Center integration                                                                                                                                                    | `false`                                                                                                                                   |\n| `integrations.gcscc.webhookUrl`                 | The URL where sysdig-gcscc-connector webhook is listening                                                                                                                                                  | `http://sysdig-gcscc-connector.default.svc.cluster.local:8080/events`                                                                     |\n| `integrations.gcscc.webhookAuthenticationToken` | Token used for authentication and webhook                                                                                                                                                                  | `b27511f86e911f20b9e0f9c8104b4ec4`                                                                                                        |\n| `integrations.natsOutput.enabled`               | Enable NATS Output integration                                                                                                                                                                             | `false`                                                                                                                                   |\n| `integrations.natsOutput.natsUrl`               | The NATS' URL where Falco is going to publish security alerts                                                                                                                                              | `nats://nats.nats-io.svc.cluster.local:4222`                                                                                              |\n| `integrations.pubsubOutput.credentialsData`     | Contents retrieved from `cat $HOME/.config/gcloud/legacy_credentials/<email>/adc.json                                                                                                                      | ` `                                                                                                                                       |\n| `integrations.pubsubOutput.enabled`             | Enable GCloud PubSub Output Integration                                                                                                                                                                    | `false`                                                                                                                                   |\n| `integrations.pubsubOutput.projectID`           | GCloud Project ID where the Pub/Sub will be created                                                                                                                                                        | ` `                                                                                                                                       |\n| `integrations.snsOutput.enabled`                | Enable Amazon SNS Output integration                                                                                                                                                                       | `false`                                                                                                                                   |\n| `integrations.snsOutput.topic`                  | The SNS topic where Falco is going to publish security alerts                                                                                                                                              | ` `                                                                                                                                       |\n| `integrations.snsOutput.aws_access_key_id`      | The AWS Access Key Id credentials for access to SNS n                                                                                                                                                      | ` `                                                                                                                                       |\n| `integrations.snsOutput.aws_secret_access_key`  | The AWS Secret Access Key credential to access to SNS                                                                                                                                                      | ` `                                                                                                                                       |\n| `integrations.snsOutput.aws_default_region`     | The AWS region where SNS is deployed                                                                                                                                                                       | ` `                                                                                                                                       |\n| `nodeSelector`                                  | The node selection constraint                                                                                                                                                                              | `{}`                                                                                                                                      |\n| `affinity`                                      | The affinity constraint                                                                                                                                                                                    | `{}`                                                                                                                                      |\n| `tolerations`                                   | The tolerations for scheduling                                                                                                                                                                             | `node-role.kubernetes.io/master:NoSchedule`                                                                                               |\n\nFor example, if you want to deploy a DaemonSet with eBPF enabled:\n\n```yaml\napiVersion: falco.org/v1\nkind: Falco\nmetadata:\n  name: falco-with-ebpf\nspec:\n  ebpf:\n    enabled: true\n```",
      "csv_display_name": "Falco Operator",
      "csv_metadata_description": "The Falco Project is an open source runtime security tool.",
      "csv_name": "falco-operator.v1.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:20:06.733000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "falco-certified",
      "provided_apis": [
        {
          "group": "falco.org",
          "kind": "Falco",
          "plural": "falcos",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:579918d457254f917a2c94efbe34b838f883c1ed327ad0be5b4fea19ef3b7c19",
          "image": "registry.connect.redhat.com/sysdig/falco-operator@sha256:579918d457254f917a2c94efbe34b838f883c1ed327ad0be5b4fea19ef3b7c19",
          "name": "falco-operator-579918d457254f917a2c94efbe34b838f883c1ed327ad0be5b4fea19ef3b7c19-annotation"
        },
        {
          "digest": "sha256:579918d457254f917a2c94efbe34b838f883c1ed327ad0be5b4fea19ef3b7c19",
          "image": "registry.connect.redhat.com/sysdig/falco-operator@sha256:579918d457254f917a2c94efbe34b838f883c1ed327ad0be5b4fea19ef3b7c19",
          "name": "falco-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.2.0",
      "version_original": "1.2.0"
    },
    {
      "_id": "60470880122bd89307e0106f",
      "alm_examples": [
        {
          "kind": "FPpredictplus",
          "metadata": {
            "name": "fppredictplus-deployment"
          },
          "spec": {
            "deploymentConfig": {
              "appSelector": "fp-predict-plus-app",
              "container": {
                "env": {
                  "dtvEngineUrl": "http://169.61.73.205/predictionv9"
                },
                "name": "fp-predict-plus",
                "repoURL": "registry.connect.redhat.com/findability-sciences/fp-predict-plus"
              },
              "name": "platform-deployment",
              "replicaCount": 1
            },
            "imagePullConfig": {
              "secretName": "fp-predict-plus-key"
            },
            "pvcConfig": {
              "fsGroup": 0,
              "name": "fp-predict-plus-pvc",
              "pvcSpec": {
                "accessMode": "ReadWriteMany",
                "storage": "50Gi"
              },
              "storageClassName": "",
              "useExisting": false,
              "volumeName": "fp-predict-plus-pv"
            },
            "routeConfig": {
              "enabled": true,
              "host": "",
              "name": "fp-predict-plus-route",
              "routerCanonicalHostname": "openshift-platform-5fc468809245cf1363c9989f10ab9bfc-0000.us-east.containers.appdomain.cloud",
              "tlsEnabled": true
            },
            "serviceConfig": {
              "name": "fp-predict-plus-service",
              "portName": "http",
              "sourcePort": 8080,
              "targetPort": 8080,
              "type": "ClusterIP"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/findability-sciences/fp-predict-plus-operator-bundle@sha256:e4bb2a292033e4eb6de2eee46395465a20f8b067b59fde597eed009be5e93161",
      "bundle_path_digest": "sha256:e4bb2a292033e4eb6de2eee46395465a20f8b067b59fde597eed009be5e93161",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-03-09T05:32:48.982000+00:00",
      "csv_description": "This operator will deploy FP-Predict-Plus in the cluster.For details on Usage refer to \n* [Configuration Guide](https://docs.findabilityplatform.com/Configuration-Guide.pdf)\n* [User Manual](https://docs.findabilityplatform.com/FPPredict-User-Manual.pdf)\n* [API Document](https://docs.findabilityplatform.com/FPPredict-API-Document.pdf)",
      "csv_display_name": "Fp Predict Plus Operator",
      "csv_metadata_description": "This operator will deploy FP-Predict-Plus in the cluster.",
      "csv_name": "fp-predict-plus-operator.v0.0.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:21:52.498000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "fp-predict-plus-operator-certified",
      "provided_apis": [
        {
          "group": "apm.fp-predict-plus.findabilityplatform.com",
          "kind": "FPpredictplus",
          "plural": "fppredictplus",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:962cfd0d70de0ef7ea26546e65d28975134780406339c4000953540d41564b49",
          "image": "registry.connect.redhat.com/findability-sciences/fp-predict-plus-operator@sha256:962cfd0d70de0ef7ea26546e65d28975134780406339c4000953540d41564b49",
          "name": "fp-predict-plus-operator-962cfd0d70de0ef7ea26546e65d28975134780406339c4000953540d41564b49-annotation"
        },
        {
          "digest": "sha256:962cfd0d70de0ef7ea26546e65d28975134780406339c4000953540d41564b49",
          "image": "registry.connect.redhat.com/findability-sciences/fp-predict-plus-operator@sha256:962cfd0d70de0ef7ea26546e65d28975134780406339c4000953540d41564b49",
          "name": "fp-predict-plus-operator"
        },
        {
          "digest": "sha256:c7b1520a8e85d676e546c8da5ddd4debd66de6d4ec1f984447a986e4f11c02b6",
          "image": "registry.connect.redhat.com/findability-sciences/fp-predict-plus@sha256:c7b1520a8e85d676e546c8da5ddd4debd66de6d4ec1f984447a986e4f11c02b6",
          "name": "fppredictplus"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.4",
      "version_original": "0.0.4"
    },
    {
      "_id": "60470886122bd89307e01070",
      "alm_examples": [
        {
          "kind": "AirgappedDeployment",
          "metadata": {
            "name": "airgappeddeployment"
          },
          "spec": {
            "airgapped": {
              "persistent_storage": {
                "backup_deletion_frequency": "@daily",
                "backup_retention_period": 7,
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              }
            },
            "event_scheduler_frequency": "@hourly",
            "image_pull_secret": "growthstack-pull-secret",
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            }
          }
        },
        {
          "kind": "AnalyticsProxy",
          "metadata": {
            "name": "analyticsproxy"
          },
          "spec": {
            "airgapped": {
              "enabled": false,
              "persistent_storage": {
                "backup_deletion_frequency": "@daily",
                "backup_retention_period": 7,
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              }
            },
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "growthstack-pull-secret",
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            },
            "segment_key": "set_segment_key_value"
          }
        },
        {
          "kind": "DeleteCluster",
          "metadata": {
            "name": "deletecluster"
          },
          "spec": {
            "image_pull_secret": "growthstack-pull-secret"
          }
        },
        {
          "kind": "FullDeployment",
          "metadata": {
            "name": "fulldeployment"
          },
          "spec": {
            "airgapped": {
              "enabled": false,
              "persistent_storage": {
                "backup_deletion_frequency": "@daily",
                "backup_retention_period": 7,
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              }
            },
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "growthstack-pull-secret",
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            },
            "prometheus_scheduler_frequency": "@hourly",
            "segment_key": "set_segment_key_value"
          }
        },
        {
          "kind": "GenerateKey",
          "metadata": {
            "name": "generatekey"
          },
          "spec": {
            "image_pull_secret": "growthstack-pull-secret"
          }
        },
        {
          "kind": "StoreForwardMetric",
          "metadata": {
            "name": "storeforwardmetric"
          },
          "spec": {
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "growthstack-pull-secret",
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            },
            "prometheus_scheduler_frequency": "@hourly",
            "segment_key": "set_segment_key_value",
            "version": "alpha"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/growth-stack-operator-bundle@sha256:328b7978ab51e7019e118ec1777278e5d5c2f74040a292f650f7bb8b3f1917cf",
      "bundle_path_digest": "sha256:328b7978ab51e7019e118ec1777278e5d5c2f74040a292f650f7bb8b3f1917cf",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-03-09T05:32:54.336000+00:00",
      "csv_description": "Growth Stack Operator is a service that collects, transforms and transits product usage data\n\n**Pre-requisites**\n----\nStep 1: Create a new Project\n```sh\noc new-project <project-name>\n```\n\nStep 2: Create a secret named \"database-credentials\" for PostgreSQL DB \n```sh\n oc create secret generic database-credentials --from-literal=db_username=<DB Username> --from-literal=db_password=<DB Password> -n <project-name>\n```\n \nStep 3: [Optional] If the images require a secret to pull the container images, create a secret of type dockerconfigjson. Pass this secret name in the CR spec image\\_pull\\_secret \n```sh\noc create secret generic growthstack-pull-secret --from-file=.dockerconfigjson=<path/to/.docker/config.json>  --type=kubernetes.io/dockerconfigjson\n```\n\nStep 4: Create a secret named \"grafana-credentials\" to setup Grafana login credentials\n```sh\n oc create secret generic grafana-credentials --from-literal=grafana_username=<username> --from-literal=grafana_password=<password> -n <project-name>\n```\n\n**Installing the Growth Stack**\n----\n\nSelect any one of the deployments to setup the Growth Stack\n1. Full Deployment\n2. Analytics Proxy Deployment\n3. Store and Forward metrics Deployment\n4. Airgapped Analytics Proxy Deployment\n\n    \n     Spec                                                 |            Details\n----------------------------------------------------------|-----------------------------\nibmproxyurl                                               | URL of IBM Proxy Service\npostgres.storage_class                                    | Storage class of type ReadWriteOnce \npostgres.size                                             | Size (in Mi or G) of the storage to be attached to the Database\nairgapped.enabled                                         | true/false if airgapped setup is to be enabled. *Requires additional storage\nairgapped.persistent\\_storage.storage\\_size               | Size (in Mi or G) of the storage to be attached for saving airgapped files\nairgapped.persistent\\_storage.storage\\_class              | Storage class to be used for the persistent storage\nairgapped.persistent\\_storage.backup\\_retention\\_period   | Number of days to keep the backup files in the storage\nairgapped.persistent\\_storage.backup\\_deletion\\_frequency | Frequency of Cronjob to execute which will delete files from the storage\nevent\\_scheduler\\_frequency                               | Scheduler frequency in Cronjob format to forward events to proxy ( https://en.wikipedia.org/wiki/Cron )\nprometheus\\_scheduler\\_frequency                          | Prometheus Scheduler Frequency in Cronjob format to pull metrics from Prometheus\nimage\\_pull\\_secret                                       | Secret to pull container images from registry\nsegment\\_key                                              | Segment key to be used to send events to Segment\n\n**Generating the API Key**\n----\nOnce the deployment is complete, to use the Growth Stack Endpoints, generate an API key using the CR GenerateKey.\n\nNote- Key can be retrieved from the secret with same name used while creating Generate Key CR's instance. \nOnce you get key from the secret, decode it using below command: \n```sh\necho -n <secret key> | base64 -d \n```\nPass it as the Header- X-API-KEY and the key while using the Growth Stack Endpoints.\n\n**Deleting the API Key**\n----\nTo revoke the Key, delete the corresponding GenerateKey instance.  \n",
      "csv_display_name": "Growth Stack Operator",
      "csv_metadata_description": "Growth Stack Operator is a service that collects, transforms and transits product usage data.",
      "csv_name": "growth-stack-operator.v2.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:20:45.379000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "growth-stack-operator-certified",
      "provided_apis": [
        {
          "group": "growth-stack.operator.com",
          "kind": "DeleteCluster",
          "plural": "deleteclusters",
          "version": "v1alpha1"
        },
        {
          "group": "growth-stack.operator.com",
          "kind": "FullDeployment",
          "plural": "fulldeployments",
          "version": "v1alpha1"
        },
        {
          "group": "growth-stack.operator.com",
          "kind": "GenerateKey",
          "plural": "generatekeys",
          "version": "v1alpha1"
        },
        {
          "group": "growth-stack.operator.com",
          "kind": "StoreForwardMetric",
          "plural": "storeforwardmetrics",
          "version": "v1alpha1"
        },
        {
          "group": "growth-stack.operator.com",
          "kind": "AirgappedDeployment",
          "plural": "airgappeddeployments",
          "version": "v1alpha1"
        },
        {
          "group": "growth-stack.operator.com",
          "kind": "AnalyticsProxy",
          "plural": "analyticsproxies",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6ea0e70b0443b3a368285ebae4c19a554fdf368d854fd35815cb03b313ca2df4",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6ea0e70b0443b3a368285ebae4c19a554fdf368d854fd35815cb03b313ca2df4",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:f85a2869f2c60baa63c359017216f92dd49d2f2410bb8f9cfff9f00ab09abc9d",
          "image": "registry.connect.redhat.com/ibm-edge/growth-stack-operator@sha256:f85a2869f2c60baa63c359017216f92dd49d2f2410bb8f9cfff9f00ab09abc9d",
          "name": "growth-stack-operator"
        },
        {
          "digest": "sha256:e03edf631f1291ce16dc1525623bac60f9859fe2293e94f0981336c005b0c643",
          "image": "registry.connect.redhat.com/ibm-edge/event-api@sha256:e03edf631f1291ce16dc1525623bac60f9859fe2293e94f0981336c005b0c643",
          "name": "event_api"
        },
        {
          "digest": "sha256:afb1387bed461a286148540456542ee95e5776cc7132ab01f514b3e272190335",
          "image": "registry.connect.redhat.com/ibm-edge/store-api@sha256:afb1387bed461a286148540456542ee95e5776cc7132ab01f514b3e272190335",
          "name": "store_api"
        },
        {
          "digest": "sha256:299e793cedb20d19aa884746ee75ec2cacdc01525526680daee34658b76c5af3",
          "image": "registry.connect.redhat.com/ibm-edge/event-reader@sha256:299e793cedb20d19aa884746ee75ec2cacdc01525526680daee34658b76c5af3",
          "name": "reader"
        },
        {
          "digest": "sha256:45beee1ad43d6b26a6498c764dd4907e773a3763e381897d80d19b9fcb4d0381",
          "image": "registry.connect.redhat.com/ibm-edge/event-scheduler@sha256:45beee1ad43d6b26a6498c764dd4907e773a3763e381897d80d19b9fcb4d0381",
          "name": "event_scheduler"
        },
        {
          "digest": "sha256:e1c3181b99a8b9693826e23261d6f70c7ee3e123b88fed127e03d8e863587687",
          "image": "registry.connect.redhat.com/ibm-edge/prometheus-scheduler@sha256:e1c3181b99a8b9693826e23261d6f70c7ee3e123b88fed127e03d8e863587687",
          "name": "prometheus_scheduler"
        },
        {
          "digest": "sha256:02a55a4d8e21d3cedf3856b3638c83a3a1c382680ed751c00371dad33653c016",
          "image": "registry.connect.redhat.com/ibm-edge/pgo-client@sha256:02a55a4d8e21d3cedf3856b3638c83a3a1c382680ed751c00371dad33653c016",
          "name": "pgo_client"
        },
        {
          "digest": "sha256:f19243b617f3a492b4b9fed67e4f9836284ec49db6c5befd76ef6fa24d817ceb",
          "image": "registry.connect.redhat.com/ibm-edge/reverse-proxy@sha256:f19243b617f3a492b4b9fed67e4f9836284ec49db6c5befd76ef6fa24d817ceb",
          "name": "nginx"
        },
        {
          "digest": "sha256:77bd19539c6e82aea1dfdfa1f390466dd68bcedf666846787bee3c97d6ca8c2a",
          "image": "registry.redhat.io/openshift4/ose-grafana@sha256:77bd19539c6e82aea1dfdfa1f390466dd68bcedf666846787bee3c97d6ca8c2a",
          "name": "grafana"
        },
        {
          "digest": "sha256:4fc96dc7a835c37dd3441a2c78e094cbfff8ea7fc8432e99f979c00965184260",
          "image": "registry.redhat.io/openshift3/ose-kube-state-metrics@sha256:4fc96dc7a835c37dd3441a2c78e094cbfff8ea7fc8432e99f979c00965184260",
          "name": "ksm"
        },
        {
          "digest": "sha256:0e2481cb31684ca60cee2eab0df13b213f5f4ab303c3ec81eb2d9727949ddc7e",
          "image": "registry.access.redhat.com/redhat-sso-7/sso71-openshift@sha256:0e2481cb31684ca60cee2eab0df13b213f5f4ab303c3ec81eb2d9727949ddc7e",
          "name": "init_container"
        },
        {
          "digest": "sha256:d748c21a55796827da82c61f162b505c59451cba24f1874e5185f21275b6bddc",
          "image": "registry.access.redhat.com/ubi8/ubi@sha256:d748c21a55796827da82c61f162b505c59451cba24f1874e5185f21275b6bddc",
          "name": "ubi"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.0.1",
      "version_original": "2.0.1"
    },
    {
      "_id": "604708876280a414853ec51c",
      "alm_examples": [
        {
          "kind": "H2O",
          "metadata": {
            "name": "h2o-test"
          },
          "spec": {
            "customImage": {
              "image": "registry.connect.redhat.com/h2oai/h2o@sha256:62500ca14adacd1164d7ef4f64ccc96c3d0ad90ddf29c3e02d1aa82bd42aa1a4"
            },
            "nodes": 1,
            "resources": {
              "cpu": 1,
              "memory": "256Mi",
              "memoryPercentage": 90
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/h2oai/h2o-operator-bundle@sha256:a31c191ab992b727ade63d560c284fe953ad8363a5387a88e3989c29b21e4b61",
      "bundle_path_digest": "sha256:a31c191ab992b727ade63d560c284fe953ad8363a5387a88e3989c29b21e4b61",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-03-09T05:32:55.424000+00:00",
      "csv_description": "## About the managed application\n[H2O](https://github.com/h2oai/h2o-3) is an in-memory platform for distributed, scalable machine learning. H2O uses familiar interfaces like R, Python, Scala, Java, JSON and the Flow notebook/web interface, and works seamlessly with big data technologies like Hadoop and Spark. H2O provides implementations of many popular algorithms such as Generalized Linear Models (GLM), Gradient Boosting Machines (including XGBoost), Random Forests, Deep Neural Networks, Stacked Ensembles, Naive Bayes, Generalized Additive Models (GAM), Cox Proportional Hazards, K-Means, PCA, Word2Vec, as well as a fully automatic machine learning algorithm (H2O AutoML).\n\nH2O is extensible so that developers can add data transformations and custom algorithms of their choice and access them through all of those clients. H2O models can be downloaded and loaded into H2O memory for scoring, or exported into POJO or MOJO format for extemely fast scoring in production. More information can be found in the H2O User Guide.\n## About this Operator\nOnce deployed to a Kubernetes cluster, a new custom resource named H2O is recognized by Kubernetes, making it easy to create H2O clusters inside Kubernetes cluster.\n## Prerequisites for enabling this Operator\nThere are no requirements. The Operator will attempt to create a proper version of H2O CustomResourceDefinition, if not found on the Kubernetes cluster.\n",
      "csv_display_name": "H2O Open Source Machine Learning Operator",
      "csv_metadata_description": "A Kubernetes operator for H2O  Open Source, Distributed, Fast & Scalable Machine Learning Platform.",
      "csv_name": "h2o-operator.v0.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:13:44.884000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "h2o-operator",
      "provided_apis": [
        {
          "group": "h2o.ai",
          "kind": "H2O",
          "plural": "h2os",
          "version": "v1beta"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:5dca5476c060b49cfc3e1e13b2c3c92920ae8789a092169a2c8457211895298d",
          "image": "registry.connect.redhat.com/h2oai/h2o-operator@sha256:5dca5476c060b49cfc3e1e13b2c3c92920ae8789a092169a2c8457211895298d",
          "name": "h2o-operator-5dca5476c060b49cfc3e1e13b2c3c92920ae8789a092169a2c8457211895298d-annotation"
        },
        {
          "digest": "sha256:5dca5476c060b49cfc3e1e13b2c3c92920ae8789a092169a2c8457211895298d",
          "image": "registry.connect.redhat.com/h2oai/h2o-operator@sha256:5dca5476c060b49cfc3e1e13b2c3c92920ae8789a092169a2c8457211895298d",
          "name": "h2o-operator"
        },
        {
          "digest": "sha256:62500ca14adacd1164d7ef4f64ccc96c3d0ad90ddf29c3e02d1aa82bd42aa1a4",
          "image": "registry.connect.redhat.com/h2oai/h2o@sha256:62500ca14adacd1164d7ef4f64ccc96c3d0ad90ddf29c3e02d1aa82bd42aa1a4",
          "name": "h2o-62500ca14adacd1164d7ef4f64ccc96c3d0ad90ddf29c3e02d1aa82bd42aa1a4-annotation"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.1.0",
      "version_original": "0.1.0"
    },
    {
      "_id": "6047088b5a00810ecaf7c41f",
      "alm_examples": [
        {
          "kind": "HLSService",
          "metadata": {
            "name": "example-hlsservice"
          },
          "spec": {
            "apikey": "Get APIKey from https://here.dev/ref/service_operator?create=Freemium-Basic"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/heremaps/here-service-operator-bundle@sha256:5a48a5194566573c5010a2e3ebc79f834652a777253856b2bc1e2e6c5c0f26e3",
      "bundle_path_digest": "sha256:5a48a5194566573c5010a2e3ebc79f834652a777253856b2bc1e2e6c5c0f26e3",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-03-09T05:32:59.942000+00:00",
      "csv_description": "HERE Location Services are key in use cases such as Fleet Utilization, Supply Chain Optimization, Urban Mobility, etc. They open up new location intelligence opportunities in diverse enterprise and technology areas, including the Internet of Things, Automotive, Insurance, Advertising, Mobile Payments, Public Sector, Smart Cities, Telecom, Utilities, and Transportation and Logistics. HERE Location Services cover Geocoder, Search, Navigation, Routing, Fleet Telematics, Positioning and other services, providing solutions for map visualization, navigation, routing, geocoding, time zone lookups, geofencing, custom locations, routing, route matching GPS traces, geospatial, sequencing multiple waypoints, truck routing, positioning, etc.\n",
      "csv_display_name": "HERE Maps and Location Services Operator",
      "csv_metadata_description": "HERE Maps and Location Services Operator will provide containerised applications and Kubernetes users access to HERE Location Services APIs by enabling discovery of HERE Location Services and provisioning HERE authentication to access these services.\n",
      "csv_name": "hls-service-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:14:19.469000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "here-service-operator-certified",
      "provided_apis": [
        {
          "group": "here.com",
          "kind": "HLSService",
          "plural": "hlsservices",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:4969c8fe8087ea2a09c2f802e30166b12368d57d48ff11c3982d483e3ceba770",
          "image": "registry.connect.redhat.com/heremaps/here-service-operator@sha256:4969c8fe8087ea2a09c2f802e30166b12368d57d48ff11c3982d483e3ceba770",
          "name": "here-service-operator-4969c8fe8087ea2a09c2f802e30166b12368d57d48ff11c3982d483e3ceba770-annotation"
        },
        {
          "digest": "sha256:4969c8fe8087ea2a09c2f802e30166b12368d57d48ff11c3982d483e3ceba770",
          "image": "registry.connect.redhat.com/heremaps/here-service-operator@sha256:4969c8fe8087ea2a09c2f802e30166b12368d57d48ff11c3982d483e3ceba770",
          "name": "hls-service-operator"
        },
        {
          "digest": "sha256:4969c8fe8087ea2a09c2f802e30166b12368d57d48ff11c3982d483e3ceba770",
          "image": "registry.connect.redhat.com/heremaps/here-service-operator@sha256:4969c8fe8087ea2a09c2f802e30166b12368d57d48ff11c3982d483e3ceba770",
          "name": "statefulset"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "60470f9b5a00810ecaf7c437",
      "alm_examples": [
        {
          "kind": "CSIScaleOperator",
          "metadata": {
            "labels": {
              "app.kubernetes.io/instance": "ibm-spectrum-scale-csi-operator",
              "app.kubernetes.io/managed-by": "ibm-spectrum-scale-csi-operator",
              "app.kubernetes.io/name": "ibm-spectrum-scale-csi-operator",
              "release": "ibm-spectrum-scale-csi-operator"
            },
            "name": "ibm-spectrum-scale-csi"
          },
          "spec": {
            "attacherNodeSelector": [
              {
                "key": "scale",
                "value": "true"
              }
            ],
            "clusters": [
              {
                "id": "< Primary Cluster ID - WARNING - THIS IS A STRING NEEDS YAML QUOTES! >",
                "primary": {
                  "primaryFs": "< Primary Filesystem >"
                },
                "restApi": [
                  {
                    "guiHost": "< Primary cluster GUI IP/Hostname>"
                  }
                ],
                "secrets": "secret1",
                "secureSslMode": false
              }
            ],
            "pluginNodeSelector": [
              {
                "key": "scale",
                "value": "true"
              }
            ],
            "provisionerNodeSelector": [
              {
                "key": "scale",
                "value": "true"
              }
            ],
            "scaleHostpath": "< GPFS FileSystem Path >"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/ibm/ibm-spectrum-scale-csi-operator-bundle@sha256:26e507a96b0473964ab18c84ec899a51c05301e956c3968dae8a0243842f9b5f",
      "bundle_path_digest": "sha256:26e507a96b0473964ab18c84ec899a51c05301e956c3968dae8a0243842f9b5f",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-03-09T06:03:07.180000+00:00",
      "csv_description": "\nThe IBM Spectrum Scale CSI Operator runs within a Kubernetes cluster providing a means to \ndeploy and manage the CSI plugin for spectrum scale. For more in depth documentation please refer\nto the [knowledge center](https://www.ibm.com/support/knowledgecenter/STXKQY_CSI_SHR).\n\nThis operator should be used to deploy the CSI plugin.\n\nThe configuration process is as follows:\n\n1. [Spectrum Scale GUI Setup](#spectrum-scale-gui-setup)\n2. [Custom Resource Configuration](#custom-resource-configuration)\n\nSpectrum Scale GUI Setup \n------------------------\n> **NOTE:** This step only needs to be preformed once per GUI.\n\n> **WARNING:** If your daemonset pods (driver pods) do not come up, generally this means you have a  secret that  has not been defined in the correct namespace.\n\n1. Ensure the Spectrum Scale GUI is running by pointing your browser to the IP hosting the GUI:\n\n \n    > If you do not see a login follow on screen instructions, or review the [GUI Documentation](https://www.ibm.com/support/knowledgecenter/en/STXKQY_5.0.5/com.ibm.spectrum.scale.v5r05.doc/bl1ins_quickrefforgui.htm)\n\n\n3. Create a CsiAdmin group account on in the GUI (currently requires a CLI call):\n\n   ```\n\n   export USERNAME=\"SomeUser\"\n   export PASSWORD=\"SomePassword\"\n   /usr/lpp/mmfs/gui/cli/mkuser ${USERNAME} -p ${PASSWORD} -g CsiAdmin\n\n   ```\n\n3. Create a Kubernetes secret for the `CsiAdmin` user:\n\n  ```\n\n  export USERNAME_B64=$(echo $USERNAME | base64)\n  export PASSWORD_B64=$(echo $PASSWORD | base64)\n  export OPERATOR_NAMESPACE=\"ibm-spectrum-scale-csi-driver\"  # Set this to the namespace you deploy the operator in.\n  \n\n  cat << EOF > /tmp/csisecret.yaml\n  apiVersion: v1\n  data:\n    password: ${PASSWORD_B64}\n    username: ${USERNAME_B64}\n  kind: Secret\n  type: Opaque\n  metadata:\n    name: csisecret    # This should be in your CSIScaleOperator definition\n    namespace: ${OPERATOR_NAMESPACE} \n    labels:\n      app.kubernetes.io/name: ibm-spectrum-scale-csi-operator # Used by the operator to detect changes, set on load of CR change if secret matches name in CR and namespace.\n  EOF\n  \n\n  kubectl create -f /tmp/csisecret.yaml\n  rm -f /tmp/csisecret.yaml\n  \n  ```\n\nCustom Resource Configuration\n-----------------------------\n\nThe bundled Custom Resource example represents the minimum settings needed to run the operator.\nIf your environment needs more advanced settings (e.g. remote clusters, node mapping, etc.) please\nrefer to the sample [Custom Resource](https://raw.githubusercontent.com/IBM/ibm-spectrum-scale-csi/v2.1.0/operator/deploy/crds/csiscaleoperators.csi.ibm.com_cr.yaml).\n\n\n",
      "csv_display_name": "IBM Spectrum Scale CSI Plugin Operator",
      "csv_metadata_description": "An operator for deploying and managing the IBM Spectrum Scale CSI Driver.",
      "csv_name": "ibm-spectrum-scale-csi-operator.v2.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:21:57.488000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "ibm-spectrum-scale-csi",
      "provided_apis": [
        {
          "group": "csi.ibm.com",
          "kind": "CSIScaleOperator",
          "plural": "csiscaleoperators",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:46a8ce82a1c68e44432136aa3f55dc52ca6201e1920dfa53de4c62d740ea62dc",
          "image": "registry.connect.redhat.com/ibm/ibm-spectrum-scale-csi-operator@sha256:46a8ce82a1c68e44432136aa3f55dc52ca6201e1920dfa53de4c62d740ea62dc",
          "name": "ibm-spectrum-scale-csi-operator-46a8ce82a1c68e44432136aa3f55dc52ca6201e1920dfa53de4c62d740ea62dc-annotation"
        },
        {
          "digest": "sha256:46a8ce82a1c68e44432136aa3f55dc52ca6201e1920dfa53de4c62d740ea62dc",
          "image": "registry.connect.redhat.com/ibm/ibm-spectrum-scale-csi-operator@sha256:46a8ce82a1c68e44432136aa3f55dc52ca6201e1920dfa53de4c62d740ea62dc",
          "name": "operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.1.0",
      "version_original": "2.1.0"
    },
    {
      "_id": "60470fa06280a414853ec527",
      "alm_examples": [
        {
          "kind": "Insightedge",
          "metadata": {
            "name": "example-insightedge"
          },
          "spec": {
            "manager": {
              "antiAffinity": {
                "enabled": false
              },
              "ha": false,
              "hs": {
                "lus": 4174,
                "zkClient": 2181,
                "zkLeaderElection": 3888,
                "zkServer": 2888
              },
              "java": {
                "heap": "limit-150Mi",
                "options": "-Duser.home=/opt/gigaspaces"
              },
              "nameOverride": "insightedge-manager",
              "resources": {
                "limits": {
                  "memory": "300Mi"
                }
              },
              "service": {
                "api": {
                  "enabled": true,
                  "port": 8090
                },
                "lrmi": {
                  "enabled": false,
                  "port": 8200
                },
                "lus": {
                  "enabled": true,
                  "port": 4174
                },
                "type": "LoadBalancer"
              },
              "terminationGracePeriodSeconds": 30
            },
            "pu": {
              "antiAffinity": {
                "enabled": false
              },
              "java": {
                "heap": "limit-150Mi",
                "options": "-Duser.home=/opt/gigaspaces"
              },
              "license": "tryme",
              "livenessProbe": {
                "enabled": false,
                "failureThreshold": 3,
                "initialDelaySeconds": 30,
                "periodSeconds": 5
              },
              "manager": {
                "discoveryTimeoutSeconds": 60,
                "ports": {
                  "api": 8090
                }
              },
              "memoryXtendVolume": {
                "enabled": false,
                "volumeClaimTemplate": {
                  "accessModes": "ReadWriteOnce",
                  "persistentVolumeReclaimPolicy": "Delete"
                },
                "volumeMount": {
                  "mountPath": "/opt/gigaspaces/work/memoryxtend",
                  "name": "mx-volume"
                }
              },
              "nameOverride": "insightedge-pu",
              "readinessProbe": {
                "enabled": false,
                "failureThreshold": 3,
                "initialDelaySeconds": 30,
                "periodSeconds": 5
              },
              "resources": {
                "limits": {
                  "memory": "400Mi"
                }
              },
              "service": {
                "lrmi": {
                  "enabled": false,
                  "port": 8200
                },
                "type": "LoadBalancer"
              },
              "terminationGracePeriodSeconds": 30
            },
            "zeppelin": {
              "nameOverride": "insightedge-zeppelin",
              "service": {
                "api": {
                  "port": 9090
                },
                "type": "LoadBalancer"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/gigaspaces/insightedge-operator-bundle@sha256:f4cd0ec77bc5f19409242c4e5990447281b6bd60b8d0eff848744a431c73cd22",
      "bundle_path_digest": "sha256:f4cd0ec77bc5f19409242c4e5990447281b6bd60b8d0eff848744a431c73cd22",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-03-09T06:03:12.184000+00:00",
      "csv_description": "InsightEdge is an in-memory real-time analytics platform for instant insights to action. It's an always-on platform for mission-critical applications across cloud, on-premise or hybrid. InsightEdge operationalizes machine learning and transactional processing, at scale; analyzing data as it's born, enriching it with historical context, for instant insights.\n",
      "csv_display_name": "Insightedge Enterprise Operator",
      "csv_metadata_description": "InsightEdge is an in-memory real-time analytics platform for instant insights to action. It's an always-on platform for mission-critical applications across cloud, on-premise or hybrid. InsightEdge operationalizes machine learning and transactional processing, at scale; analyzing data as it's born, enriching it with historical context, for instant insights.\n",
      "csv_name": "insightedge-enterprise-operator.v15.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:16:57.211000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "insightedge-enterprise-operator2",
      "provided_apis": [
        {
          "group": "insightedge.gigaspaces.com",
          "kind": "Insightedge",
          "plural": "insightedges",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:d7d9b079a93b715d7ca94d64b08e73798f1b036c118c742b2bd031030bd1d17d",
          "image": "registry.connect.redhat.com/gigaspaces/insightedge-operator@sha256:d7d9b079a93b715d7ca94d64b08e73798f1b036c118c742b2bd031030bd1d17d",
          "name": "insightedge-operator-d7d9b079a93b715d7ca94d64b08e73798f1b036c118c742b2bd031030bd1d17d-annotation"
        },
        {
          "digest": "sha256:d7d9b079a93b715d7ca94d64b08e73798f1b036c118c742b2bd031030bd1d17d",
          "image": "registry.connect.redhat.com/gigaspaces/insightedge-operator@sha256:d7d9b079a93b715d7ca94d64b08e73798f1b036c118c742b2bd031030bd1d17d",
          "name": "insightedge-enterprise-operator"
        },
        {
          "digest": "sha256:5cbd8ca9553a7a3e8cd4b99d1231d92201146745c8531e159cccfc4cd3a74ceb",
          "image": "registry.connect.redhat.com/gigaspaces/insightedge@sha256:5cbd8ca9553a7a3e8cd4b99d1231d92201146745c8531e159cccfc4cd3a74ceb",
          "name": "insightedge"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "15.0.1",
      "version_original": "15.0.1"
    },
    {
      "_id": "60470fa56280a414853ec528",
      "alm_examples": [
        {
          "kind": "OneAgent",
          "metadata": {
            "name": "oneagent",
            "namespace": "dynatrace"
          },
          "spec": {
            "apiUrl": "https://ENVIRONMENTID.live.dynatrace.com/api",
            "args": [
              "--set-app-log-content-access=true"
            ],
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists"
              }
            ]
          }
        },
        {
          "kind": "OneAgentAPM",
          "metadata": {
            "name": "oneagentapm",
            "namespace": "dynatrace"
          },
          "spec": {
            "apiUrl": "https://ENVIRONMENTID.live.dynatrace.com/api"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator-bundle@sha256:fc750e6590bf2336144268bb09688a94e0baca2d5ebfb45b9f734b5cb5f68606",
      "bundle_path_digest": "sha256:fc750e6590bf2336144268bb09688a94e0baca2d5ebfb45b9f734b5cb5f68606",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-03-09T06:03:17.290000+00:00",
      "csv_description": "The Dynatrace OneAgent Operator allows users to easily deploy full-stack monitoring for [OpenShift clusters](https://www.dynatrace.com/technologies/openshift-monitoring/). The Dynatrace OneAgent automatically monitors the workload running in containers down to the code and request level.\n\n### Installing the OneAgent\nOnce you've installed the Operator, you can create OneAgent custom resources to monitor your environment.\n\nFirst, please add a Secret within the Project you've deployed the Dynatrace Operator to, which would contain your API and PaaS tokens. Create tokens of type *Dynatrace API* (`API_TOKEN`) and *Platform as a Service* (`PAAS_TOKEN`) and use their values in the following commands respectively.\n\nFor assistance please refer to [Create user-generated access tokens](https://www.dynatrace.com/support/help/shortlink/token#create-user-generated-access-tokens).\n\n``` $ oc -n <project> create secret generic oneagent --from-literal=\"apiToken=API_TOKEN\" --from-literal=\"paasToken=PAAS_TOKEN\" ```\n\nYou may update this Secret at any time to rotate the tokens.\n\nThen please add an OneAgent object in the Project where the Operator has been deployed, configured to your needs.\n\n### Required Parameters\n* `apiUrl` - provide the URL to the API of your Dynatrace environment. In Dynatrace SaaS it will look like `https://<ENVIRONMENTID>.live.dynatrace.com/api` . In Dynatrace Managed like `https://<YourDynatraceServerURL>/e/<ENVIRONMENTID>/api` .\n\n### Advanced Options\n* **Image Override** - use a copy of the OneAgent container image from a registry other than Docker's or Red Hat's\n* **NodeSelectors** - select a subset of your cluster's nodes to run the Dynatrace OneAgent on, based on labels\n* **Tolerations** - add specific tolerations to the agent so that it can monitor all of the nodes in your cluster; we include the default toleration so that Dynatrace OneAgent also monitors the master nodes\n* **Priority Class Name** - define the priorityClassName for OneAgent pods\n* **Environment variables** - define environment variables for the OneAgent container\n* **Disable Certificate Checking** - disable any certificate validation that may interact poorly with proxies with in your cluster\n* **Disable OneAgent Update** - disable the Operator's auto-update feature for OneAgent pods\n* **Enable Istio Auto-config** - automatically create Istio objects for egress communication to the Dynatrace environment from the OneAgent\n\nFor a complete list of supported parameters please consult the [Operator Deploy Guide](https://www.dynatrace.com/support/help/shortlink/openshift-deploy).\n\n### Help\nYou can find more about our instructions in our [documentation](https://www.dynatrace.com/support/help/shortlink/openshift-deploy#install-oneagent-operator).\n",
      "csv_display_name": "Dynatrace OneAgent",
      "csv_metadata_description": "Install full-stack monitoring of OpenShift clusters with the Dynatrace OneAgent.",
      "csv_name": "dynatrace-monitoring.v0.9.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:16:49.571000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "oneagent-certified",
      "provided_apis": [
        {
          "group": "dynatrace.com",
          "kind": "OneAgentAPM",
          "plural": "oneagentapms",
          "version": "v1alpha1"
        },
        {
          "group": "dynatrace.com",
          "kind": "OneAgent",
          "plural": "oneagents",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:4f626c6f83d93c7c6b6279fa48003ea5cf4ef972cc7831f1d2367f20f0c4afed",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator@sha256:4f626c6f83d93c7c6b6279fa48003ea5cf4ef972cc7831f1d2367f20f0c4afed",
          "name": "dynatrace-oneagent-operator-4f626c6f83d93c7c6b6279fa48003ea5cf4ef972cc7831f1d2367f20f0c4afed-annotation"
        },
        {
          "digest": "sha256:4f626c6f83d93c7c6b6279fa48003ea5cf4ef972cc7831f1d2367f20f0c4afed",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator@sha256:4f626c6f83d93c7c6b6279fa48003ea5cf4ef972cc7831f1d2367f20f0c4afed",
          "name": "dynatrace-oneagent-operator"
        },
        {
          "digest": "sha256:4f626c6f83d93c7c6b6279fa48003ea5cf4ef972cc7831f1d2367f20f0c4afed",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator@sha256:4f626c6f83d93c7c6b6279fa48003ea5cf4ef972cc7831f1d2367f20f0c4afed",
          "name": "webhook"
        },
        {
          "digest": "sha256:4f626c6f83d93c7c6b6279fa48003ea5cf4ef972cc7831f1d2367f20f0c4afed",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator@sha256:4f626c6f83d93c7c6b6279fa48003ea5cf4ef972cc7831f1d2367f20f0c4afed",
          "name": "bootstrapper"
        },
        {
          "digest": "sha256:7610615cb9b0855aa8dde0bff9a1ec2464e586f5bff13f607c5fd643abd890e0",
          "image": "registry.connect.redhat.com/dynatrace/oneagent@sha256:7610615cb9b0855aa8dde0bff9a1ec2464e586f5bff13f607c5fd643abd890e0",
          "name": "dynatrace_oneagent"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.9.5",
      "version_original": "0.9.5"
    },
    {
      "_id": "60470fa66280a414853ec529",
      "alm_examples": [
        {
          "kind": "OpenLibertyApplication",
          "metadata": {
            "name": "demo-app"
          },
          "spec": {
            "applicationImage": "registry.connect.redhat.com/ibm/open-liberty-samples@sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
            "expose": true,
            "replicas": 1
          }
        },
        {
          "kind": "OpenLibertyDump",
          "metadata": {
            "name": "example-dump"
          },
          "spec": {
            "include": [
              "heap",
              "thread"
            ],
            "podName": "Specify_Pod_Name_Here"
          }
        },
        {
          "kind": "OpenLibertyTrace",
          "metadata": {
            "name": "example-trace"
          },
          "spec": {
            "podName": "Specify_Pod_Name_Here",
            "traceSpecification": "*=info:com.ibm.ws.webcontainer*=all"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/open-liberty-operator-bundle@sha256:66987dd9d568c2b004a358c9fbbb5c89a74a7512bd43599b2463b08cf44724a4",
      "bundle_path_digest": "sha256:66987dd9d568c2b004a358c9fbbb5c89a74a7512bd43599b2463b08cf44724a4",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "beta",
      "creation_date": "2021-03-09T06:03:18.711000+00:00",
      "csv_description": "This advanced Operator can be used to deploy and manage Open Liberty applications with consistent, production-grade QoS. This operator is based on the [Runtime Component Operator](https://github.com/application-stacks/runtime-component-operator) and provides all of its capabilities in addition to Open Liberty specific features such as gathering traces and dumps (Day-2 operations) and easily configuring and managing the single sign-on information for your Open Liberty applications.\nOpen Liberty Operator enables enterprise architects to govern the way their applications get deployed & managed in the cluster, while dramatically reducing the learning curve for developers to deploy into Kubernetes - allowing them to focus on writing the code!\nHere are some key features:\n#### Application Lifecyle\nYou can deploy your Open Liberty application container by either pointing to a container image, or an OpenShift ImageStream. When using an ImageStream the Operator will watch for any updates and will re-deploy the modified image.\n\n#### Custom RBAC\nThis Operator is capable of using a custom ServiceAccount from the caller, allowing it to follow RBAC restrictions. By default it creates a ServiceAccount if one is not specified, which can also be bound with specific roles.\n\n#### Environment Configuration\nYou can configured a variety of artifacts with your deployment, such as: labels, annotations, and environment variables from a ConfigMap, a Secret or a value.\n\n#### Routing\nExpose your application to external users via a single toggle to create a Route on OpenShift or an Ingress on other Kubernetes environments. Advanced configuration, such as TLS settings, are also easily enabled.  Expiring Route certificates are re-issued.\n\n#### High Availability via Horizontal Pod Autoscaling\nRun multiple instances of your application for high availability. Either specify a static number of replicas or easily configure horizontal auto scaling to create (and delete) instances based on resource consumption.\n\n#### Persistence and advanced storage\nEnable persistence for your application by specifying simple requirements: just tell us the size of the storage and where you would like it to be mounted and We will create and manage that storage for you.\nThis toggles a StatefulSet resource instead of a Deployment resource, so your container can recover transactions and state upon a pod restart.\nWe offer an advanced mode where the user specifies a built-in PersistentVolumeClaim, allowing them to configure many details of the persistent volume, such as its storage class and access mode.\nYou can also easily configure and use a single storage for serviceability related Day-2 operations, such as gatherig server traces and dumps.\n\n#### Service Binding\nEasily bind to available services in your cluster.  Your runtime components can expose and consume other services by simply specifying the target endpoinds: we take care of the heavy lifting such as creating k8s Secrets, injecting them into your container and watching for any changes in configuration!  This way your applications can dynamically reconnect to its required services without any intervention or interruption.\n\n#### Single Sign-On (SSO)\nOpen Liberty provides capabilities to delegate authentication to external providers. Your application users can log in using their existing social media credentials from providers such as Google, Facebook, LinkedIn, Twitter, GitHub, and any OpenID Connect (OIDC) or OAuth 2.0 clients.\nOpen Liberty Operator allows to easily configure and manage the single sign-on information for your applications.\n#### Exposing metrics to Prometheus\nThe Open Liberty Operator exposes the runtime container's metrics via the [Prometheus Operator](https://operatorhub.io/operator/prometheus).\nUsers can pick between a basic mode, where they simply specify the label that Prometheus is watching to scrape the metrics from the container, or they can specify the full `ServiceMonitor` spec embedded into the OpenLibertyApplication's `spec.monitoring` key controlling things like the poll internal and security credentials.\n#### Easily mount logs and transaction directories\nIf you need to mount the logs and transaction data from your application to an external volume such as NFS (or any storage supported in your cluster), simply add the following (customizing the folder location and size) to your OpenLibertyApplication CR:\n``` storage: size: 2Gi mountPath: \"/logs\" ```\n\n#### Integration with OpenShift's Certificate Manager\nThe Open Liberty Operator takes advantage of the [cert-manager tool](https://cert-manager.io/), if it is installed on the cluster. This allows the operator to automatically provision TLS certificates for pods as well as routes.\nWhen creating certificates via the OpenLibertyApplication CR the user can specify a particular issuer name and toggle the scopes between ClusterIssuer (cluster scoped) and Issuer (namespace scoped). If not specified, these values are retrieved from a ConfigMap, with a default value of `self-signed` and `ClusterIssuer`.\nThe certificate is mounted into the container via a Secret so that it is automatically refreshed once the certificate is updated.\n#### Integration with OpenShift Serverless\nDeploy your serverless runtime component using a single toggle.  The Operator will convert all of its generated resources into [Knative](https://knative.dev) resources, allowing your pod to automatically scale to 0 when it is idle.\n\n#### Integration with Kubernetes Application Navigator (kAppNav) and OpenShift's Topology UI\nAutomatically configures the Kubernetes resources for integration with [kAppNav](https://kappnav.io/), allowing your runtime component to compose an umbrella [Application](https://github.com/kubernetes-sigs/application).  This integration allows users to monitor all constituents resources of the application and receive alerts when the health status of a component changes.  From an integrated panel users can also launch day-2-operations, such as viewing the Kibana / Grafana dashboards, and enabling trace for a component.\nDuring this integration we also set the corresponding labels to support OpenShift's Developer Topology UI,which allows you to visualize your entire set of deployments and how they are connected.\nSee our [**documentation**](https://github.com/OpenLiberty/open-liberty-operator/tree/master/doc/) for more information.",
      "csv_display_name": "Open Liberty Operator",
      "csv_metadata_description": "Deploy and manage applications running on Open Liberty",
      "csv_name": "open-liberty-operator.v0.7.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:21:48.068000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "open-liberty-certified",
      "provided_apis": [
        {
          "group": "openliberty.io",
          "kind": "OpenLibertyApplication",
          "plural": "openlibertyapplications",
          "version": "v1beta1"
        },
        {
          "group": "openliberty.io",
          "kind": "OpenLibertyDump",
          "plural": "openlibertydumps",
          "version": "v1beta1"
        },
        {
          "group": "openliberty.io",
          "kind": "OpenLibertyTrace",
          "plural": "openlibertytraces",
          "version": "v1beta1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:7e439b96d0ab5cbf38bdbd39feffd80370fed748430807a7fd1c1ba7d1e17d38",
          "image": "registry.connect.redhat.com/ibm/open-liberty-operator@sha256:7e439b96d0ab5cbf38bdbd39feffd80370fed748430807a7fd1c1ba7d1e17d38",
          "name": "open-liberty-operator-7e439b96d0ab5cbf38bdbd39feffd80370fed748430807a7fd1c1ba7d1e17d38-annotation"
        },
        {
          "digest": "sha256:7e439b96d0ab5cbf38bdbd39feffd80370fed748430807a7fd1c1ba7d1e17d38",
          "image": "registry.connect.redhat.com/ibm/open-liberty-operator@sha256:7e439b96d0ab5cbf38bdbd39feffd80370fed748430807a7fd1c1ba7d1e17d38",
          "name": "open-liberty-operator"
        },
        {
          "digest": "sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
          "image": "registry.connect.redhat.com/ibm/open-liberty-samples@sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
          "name": "open-liberty-samples-8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4-annotation"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.7.0",
      "version_original": "0.7.0"
    },
    {
      "_id": "60470fa9122bd89307e01082",
      "alm_examples": [
        {
          "kind": "OpenshiftPipeline",
          "metadata": {
            "name": "openshiftpipeline"
          },
          "spec": {
            "pipelines": {
              "global": {
                "postgresql": {
                  "database": "OVERRIDE",
                  "host": "OVERRIDE",
                  "password": "OVERRIDE",
                  "port": "OVERRIDE",
                  "ssl": "false",
                  "user": "OVERRIDE"
                }
              },
              "imageRegistry": "registry.connect.redhat.com",
              "initContainer": {
                "image": "registry.connect.redhat.com/jfrog/pipelines-init@sha256:9c54e5ed032653b6d70ca0fe293ca4a23d082f5790f7dbbfac499a08573a663b",
                "pullPolicy": "Always"
              },
              "pipelines": {
                "accessControlAllowOrigins_0": "OVERRIDE",
                "accessControlAllowOrigins_1": "OVERRIDE",
                "api": {
                  "externalUrl": "OVERRIDE",
                  "image": {
                    "pullPolicy": "Always",
                    "repository": "jfrog/pipelines-api"
                  }
                },
                "cron": {
                  "image": {
                    "pullPolicy": "Always",
                    "repository": "jfrog/pipelines-micro"
                  }
                },
                "extensionSync": {
                  "image": {
                    "pullPolicy": "Always",
                    "repository": "jfrog/pipelines-micro"
                  }
                },
                "hookHandler": {
                  "image": {
                    "pullPolicy": "Always",
                    "repository": "jfrog/pipelines-micro"
                  }
                },
                "jfrogUrl": "OVERRIDE",
                "jfrogUrlUI": "OVERRIDE",
                "joinKey": "OVERRIDE",
                "logup": {
                  "image": {
                    "pullPolicy": "Always",
                    "repository": "jfrog/pipelines-micro"
                  }
                },
                "marshaller": {
                  "image": {
                    "pullPolicy": "Always",
                    "repository": "jfrog/pipelines-micro"
                  }
                },
                "masterKey": "OVERRIDE",
                "msg": {
                  "uiUser": "OVERRIDE",
                  "uiUserPassword": "OVERRIDE"
                },
                "nexec": {
                  "image": {
                    "pullPolicy": "Always",
                    "repository": "jfrog/pipelines-micro"
                  }
                },
                "pipelineSync": {
                  "image": {
                    "pullPolicy": "Always",
                    "repository": "jfrog/pipelines-micro"
                  }
                },
                "pipelinesInit": {
                  "image": {
                    "pullPolicy": "Always",
                    "repository": "jfrog/pipelines-installer"
                  }
                },
                "router": {
                  "image": {
                    "pullPolicy": "Always",
                    "repository": "jfrog/pipelines-router"
                  }
                },
                "runTrigger": {
                  "image": {
                    "pullPolicy": "Always",
                    "repository": "jfrog/pipelines-micro"
                  }
                },
                "stepTrigger": {
                  "image": {
                    "pullPolicy": "Always",
                    "repository": "jfrog/pipelines-micro"
                  }
                },
                "version": "1.8.0",
                "www": {
                  "externalUrl": "OVERRIDE",
                  "image": {
                    "pullPolicy": "Always",
                    "repository": "jfrog/pipelines-www"
                  }
                }
              },
              "postgresql": {
                "enabled": false
              },
              "rabbitmq": {
                "enabled": true,
                "externalUrl": "OVERRIDE",
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/pipelines-rabbitmq",
                  "tag": "3.8.9"
                }
              },
              "redis": {
                "enabled": true,
                "image": {
                  "registry": "registry.redhat.io",
                  "repository": "rhel8/redis-5",
                  "tag": "1-98"
                },
                "master": {
                  "command": "container-entrypoint run-redis"
                }
              },
              "securityContext": {
                "enabled": true,
                "gid": "1000721117",
                "uid": "1000721117"
              },
              "vault": {
                "disablemlock": false,
                "enabled": true,
                "image": {
                  "repository": "registry.connect.redhat.com/jfrog/pipelines-vault",
                  "tag": "1.8.0"
                },
                "init": {
                  "pullPolicy": "Always",
                  "repository": "jfrog/pipelines-vault-init"
                }
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jfrog/pipelines-operator-bundle@sha256:319b188f70a139c3f5e1a64533280a60388365a5585465d55c6a4e1db98fca28",
      "bundle_path_digest": "sha256:319b188f70a139c3f5e1a64533280a60388365a5585465d55c6a4e1db98fca28",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-03-09T06:03:21.217000+00:00",
      "csv_description": "## Overview\n\nOpenshift Operator to deploy JFrog Pipelines into your Openshift cluster.\n## Usage\n\nAn external DB is required. The operator will not deploy a DB but will require you to specify the configuration values to connect to it.\n\nSearch for JFrog and click JFrog Pipeline Operator to install.\n\nGo to the Installed Operators.\n\nWait for the JFrog Pipeline Operator to complete the installation.\n\nOpen the Operator and click on the provided API: Xray\n\nClick Create New Instance and provide the following parameters for your DB configuration:\n\n```\npipelines.global.postgresql.host=<postgresql_host> pipelines.global.postgresql.port=<postgresql_port> pipelines.global.postgresql.database=<postgresql_dbname> pipelines.global.postgresql.user=<postgresql_user> pipelines.global.postgresql.password=<postgresql_password>\n```\n\nJFROG_URL is the external ip or DNS of your Artifactory to connect Pipelines to. Artifactory is required to use this operator.\nYou will need to specify your JFROG_URL in the follow locations:\nUse the cluster DNS name of the service for most operator deployments this will be: http://openshiftartifactoryha-nginx\n``` pipelines.pipelines.jfrogUrl=<JFROG_URL> pipelines.pipelines.jfrogUrlUI=<JFROG_URL> pipelines.pipelines.accessControlAllowOrigins_0=<JFROG_URL> pipelines.pipelines.accessControlAllowOrigins_1=<JFROG_URL> ```\nSetup a unique master key and use the same join key you used when creating Artifactory:\n``` pipelines.pipelines.masterKey=$MASTER_KEY pipelines.pipelines.joinKey=$JOIN_KEY ```\nSetup a unique username and password for Rabbitmq user:\n``` pipelines.pipelines.msg.uiUser=monitor pipelines.pipelines.msg.uiUserPassword=monitor ```\nSpecify external urls that will be your Openshift routes if desired:\n``` pipelines.rabbitmq.externalUrl=amqps://pipelines-rabbit.example.com pipelines.pipelines.api.externalUrl=http://pipelines-api.example.com pipelines.pipelines.www.externalUrl=http://pipelines-www.example.com ```\nDeploy JFrog Pipelines into your cluster.\n## Build Plane Usage\nTo use the pipelines build plane you can either use your Openshift cluster or a 3rd party cloud provider like AWS.\nSetup the Pipelines build plane.\n## Sync issue fix\nTo resolve the known host issue when syncing from a new site for now users can rsh into the pod or open the terminal into the pod in the Openshift web console.\nOnce inside the container `pipelinesync` run the follow command:\n``` /pipelineSync/clone.sh ```\nType yes to accept the host verification and then re-sync your pipeline. ",
      "csv_display_name": "JFrog Pipeline Operator",
      "csv_metadata_description": "JFrog Pipeline Enterprise deploys Pipeline CI/CD Openshift (Requires Jfrog Artifactory)",
      "csv_name": "pipeline-operator.v1.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:21:13.242000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "openshiftpipeline-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "OpenshiftPipeline",
          "plural": "openshiftpipelines",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:2acce47191cd20b2a73fb01f97976ee030a091ed57bbd57f3fa5a316a71614a4",
          "image": "registry.connect.redhat.com/jfrog/pipelines-operator@sha256:2acce47191cd20b2a73fb01f97976ee030a091ed57bbd57f3fa5a316a71614a4",
          "name": "pipelines-operator-2acce47191cd20b2a73fb01f97976ee030a091ed57bbd57f3fa5a316a71614a4-annotation"
        },
        {
          "digest": "sha256:2acce47191cd20b2a73fb01f97976ee030a091ed57bbd57f3fa5a316a71614a4",
          "image": "registry.connect.redhat.com/jfrog/pipelines-operator@sha256:2acce47191cd20b2a73fb01f97976ee030a091ed57bbd57f3fa5a316a71614a4",
          "name": "pipeline-operator"
        },
        {
          "digest": "sha256:27baf3f2d50482984f7550d856c51c02bdad013facc53165d246305ab4ba11d2",
          "image": "registry.connect.redhat.com/jfrog/pipelines-api@sha256:27baf3f2d50482984f7550d856c51c02bdad013facc53165d246305ab4ba11d2",
          "name": "pipeline_api_image_repository"
        },
        {
          "digest": "sha256:30898def831fec6a779a3f809e2098a2421ac56a7d383fae26f972749b4d585c",
          "image": "registry.connect.redhat.com/jfrog/pipelines-router@sha256:30898def831fec6a779a3f809e2098a2421ac56a7d383fae26f972749b4d585c",
          "name": "pipeline_router_image_repository"
        },
        {
          "digest": "sha256:bd0857fb811972c412eca139104e754e095f5beb53fe88bdcc7ea683ece5b4e0",
          "image": "registry.connect.redhat.com/jfrog/pipelines-www@sha256:bd0857fb811972c412eca139104e754e095f5beb53fe88bdcc7ea683ece5b4e0",
          "name": "pipeline_www_image_repository"
        },
        {
          "digest": "sha256:0587b685cc7abeb73e4529a9885a2bd56c4d63fa3801dd5ea61d8495f9b260cd",
          "image": "registry.connect.redhat.com/jfrog/pipelines-micro@sha256:0587b685cc7abeb73e4529a9885a2bd56c4d63fa3801dd5ea61d8495f9b260cd",
          "name": "pipeline_micro_image_repository"
        },
        {
          "digest": "sha256:16c1cb3729dc52851d7af512f8d7d7151b3231f2445c10c04784a69bcf027c3c",
          "image": "registry.connect.redhat.com/jfrog/pipelines-installer@sha256:16c1cb3729dc52851d7af512f8d7d7151b3231f2445c10c04784a69bcf027c3c",
          "name": "pipeline_installer_image_repository"
        },
        {
          "digest": "sha256:54dce2f3707794a16bcb9a385035454f3ae0a7861551b4c54f682a9894772f79",
          "image": "registry.connect.redhat.com/jfrog/pipelines-rabbitmq@sha256:54dce2f3707794a16bcb9a385035454f3ae0a7861551b4c54f682a9894772f79",
          "name": "pipeline_rabbitmq_image_repository"
        },
        {
          "digest": "sha256:c4302979defaaa396e1df57ad2adb7949f06d7c4c7c2904c445d4bb9111e9b1e",
          "image": "registry.redhat.io/rhel8/redis-5@sha256:c4302979defaaa396e1df57ad2adb7949f06d7c4c7c2904c445d4bb9111e9b1e",
          "name": "pipeline_redis_image_repository"
        },
        {
          "digest": "sha256:fefea387baefffaf3c3636e61f39fb5ea1fb09119af34a944f522341d50c6a1f",
          "image": "registry.connect.redhat.com/jfrog/pipelines-vault-init@sha256:fefea387baefffaf3c3636e61f39fb5ea1fb09119af34a944f522341d50c6a1f",
          "name": "pipeline_vault_init_image_repository"
        },
        {
          "digest": "sha256:acdaab7820f42244cc83ef31091d57f349488619fbf37a08c90700f88a7ba98c",
          "image": "registry.connect.redhat.com/jfrog/pipelines-vault@sha256:acdaab7820f42244cc83ef31091d57f349488619fbf37a08c90700f88a7ba98c",
          "name": "pipeline_vault_image_repository"
        },
        {
          "digest": "sha256:9c54e5ed032653b6d70ca0fe293ca4a23d082f5790f7dbbfac499a08573a663b",
          "image": "registry.connect.redhat.com/jfrog/pipelines-init@sha256:9c54e5ed032653b6d70ca0fe293ca4a23d082f5790f7dbbfac499a08573a663b",
          "name": "pipelines-init-9c54e5ed032653b6d70ca0fe293ca4a23d082f5790f7dbbfac499a08573a663b-annotation"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "6047168d3937aa922df5dc5e",
      "alm_examples": [
        {
          "kind": "OpenUnison",
          "metadata": {
            "name": "test-openunison"
          },
          "spec": {
            "dest_secret": "openunison",
            "enable_activemq": false,
            "hosts": [
              {
                "ingress_name": "openunison",
                "names": [
                  {
                    "env_var": "OU_HOST",
                    "name": "test.apps.mydomain.com"
                  }
                ]
              }
            ],
            "key_store": {
              "key_pairs": {
                "create_keypair_template": [
                  {
                    "name": "ou",
                    "value": "k8s"
                  },
                  {
                    "name": "o",
                    "value": "Tremolo Security"
                  },
                  {
                    "name": "l",
                    "value": "Alexandria"
                  },
                  {
                    "name": "st",
                    "value": "Virginia"
                  },
                  {
                    "name": "c",
                    "value": "US"
                  }
                ],
                "keys": [
                  {
                    "create_data": {
                      "ca_cert": true,
                      "key#": 2048,
                      "server_name": "test-openunison.openunison.svc.cluster.local",
                      "sign_by_k8s_ca": false,
                      "subject_alternative_names": []
                    },
                    "import_into_ks": "keypair",
                    "name": "unison-tls",
                    "tls_secret_name": "unison-tls-secret"
                  }
                ]
              },
              "static_keys": [
                {
                  "name": "session-unison",
                  "version": 1
                }
              ],
              "trusted_certificates": []
            },
            "non_secret_data": [
              {
                "name": "REG_CRED_USER",
                "value": "rh_user"
              },
              {
                "name": "TEST_USER_NAME",
                "value": "testuser"
              },
              {
                "name": "MYVD_CONFIG_PATH",
                "value": "WEB-INF/myvd.conf"
              },
              {
                "name": "unisonKeystorePath",
                "value": "/etc/openunison/unisonKeyStore.p12"
              }
            ],
            "openshift": {
              "builder_image": "registry.connect.redhat.com/tremolosecurity/openunison-s2i-10",
              "git": {
                "branch": "master",
                "dir": "/",
                "repo": "https://github.com/TremoloSecurity/openunison-qs-simple.git"
              }
            },
            "openunison_network_configuration": {
              "activemq_dir": "/tmp/amq",
              "allowed_client_names": [],
              "ciphers": [
                "TLS_RSA_WITH_RC4_128_SHA",
                "TLS_RSA_WITH_AES_128_CBC_SHA",
                "TLS_RSA_WITH_AES_256_CBC_SHA",
                "TLS_RSA_WITH_3DES_EDE_CBC_SHA",
                "TLS_RSA_WITH_AES_128_CBC_SHA256",
                "TLS_RSA_WITH_AES_256_CBC_SHA256"
              ],
              "client_auth": "none",
              "force_to_secure": true,
              "open_external_port": 80,
              "open_port": 8080,
              "path_to_deployment": "/usr/local/openunison/work",
              "path_to_env_file": "/etc/openunison/ou.env",
              "quartz_dir": "/tmp/quartz",
              "secure_external_port": 443,
              "secure_key_alias": "unison-tls",
              "secure_port": 8443
            },
            "replicas": 1,
            "secret_data": [
              "unisonKeystorePassword",
              "TEST_USER_PASSWORD",
              "REG_CRED_PASSWORD"
            ],
            "source_secret": "openunison-secrets-source"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tremolosecurity/openunison-operator-bundle@sha256:bf50b128eefd6fb80e48f08aa8f6e6f3f384ca3d76641e7d2f5df73b055f6fbf",
      "bundle_path_digest": "sha256:bf50b128eefd6fb80e48f08aa8f6e6f3f384ca3d76641e7d2f5df73b055f6fbf",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2021-03-09T06:32:45.732000+00:00",
      "csv_description": "The OpenUnison operator automates the deployment of OpenUnison in OpenShift and OKD.  This operator will generate all the objects needed to run OpenUnison and keep them up-to-date.  On OpenShift OpenUnison is built and deployed via a Red Hat certified Source-to-Image (s2i) builder that generates a container based on your configuration.  The default example provided by the operator is a simple login page.  Tremolo Security offers [Orchestra for OpenShift](https://www.tremolosecurity.com/openshift/) to manage authentication, authorization and project onboarding for your OpenShift clusters.  \n\n## Before You Start\n\nBefore deploying, obtain an account for Red Hat Connect to be able to access certified images. Next create a source secret with information that shouldn't be stored in the `OpenUnison` custom resource, referenced by the `source_secret` attribute.  The minimal data in this secret should be at least:\n\n* `unisonKeystorePassword` - The password to use for the generated keystore\n* `REG_CRED_PASSWORD` - Your password for Red Hat Connect\n* `TEST_USER_PASSWORD` - The password for your test user \n\n An example of creating a secret used by the example configuration is:\n  \n```\n$ mkdir secret\n$ cd secret\n$ echo 'my_secret_password'  > unisonKeystorePassword\n$ echo 'my_rh_connect_password'  > REG_CRED_PASSWORD\n$ echo 'my_test_user_password'  > TEST_USER_PASSWORD\n$ oc create secret generic openunison-secrets-source --from-file=.\n```\n  \nYou should edit the `hosts` \\ `names` \\ `name` variable from `test.apps.mydomain.com` to whatever you want the host of your OpenUnison instance to be.  The operator will generate a `Route` based on this hostname with `reencrypt` enabled.  Also, update `key_store` \\ 'key_pairs' \\ `keys` for the `server_name` to reflect the correct `Service` name for your OpenUnison.  For instance if your `OpenUnison` CR has the name `test-openunison` and is being deployed in the `openunison` namespace this value should be `test-openunison.openunison.svc.cluster.local`.\n\n## Testing\n\nOnce deployed, point your browser to the host name you created via TLS (ie https://myapp.apps.domain.com)\n\n## Updating Keys\n\nThe operator builds a keystore for OpenUnison based on secrets referenced in the `OpenUnison` custom resource.  To regenerate self signed certificates (such as the default `unison-tls` certificate), simple delete the secret and update the custom resource.  To use certificates signed by a third party CA, create the secret and reference it in your `OpenUnison` custom resource.\n\n## New Images and Configuration\n\nThe OpenUnison Operator generates an OpenShift `BuildConfig` object and `ImageStream` objects.  The certified s2i builder image is rebuilt auotmaticlly by Red Hat as new packages are made available.  To update your deployment's container, simply tag it to your image stream.  To point to a new git repository for the configuration of OpenUnison, update the CR.",
      "csv_display_name": "OpenUnison",
      "csv_metadata_description": "OpenUnison Operator provides identity management and automation services including Single Sign-On (SSO), workflow based user provisioning, self service access management, auditing and reporting",
      "csv_name": "openunison.1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:18:18.006000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "openunison-ocp-certified",
      "provided_apis": [
        {
          "group": "openunison.tremolo.io",
          "kind": "OpenUnison",
          "plural": "openunisons",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:1fc3e5d2f54c0cf3668bc070450e0f0f7c5917ca36c0934ea639dbb249ac97db",
          "image": "registry.connect.redhat.com/tremolosecurity/openunison-operator@sha256:1fc3e5d2f54c0cf3668bc070450e0f0f7c5917ca36c0934ea639dbb249ac97db",
          "name": "openunison-operator-1fc3e5d2f54c0cf3668bc070450e0f0f7c5917ca36c0934ea639dbb249ac97db-annotation"
        },
        {
          "digest": "sha256:1fc3e5d2f54c0cf3668bc070450e0f0f7c5917ca36c0934ea639dbb249ac97db",
          "image": "registry.connect.redhat.com/tremolosecurity/openunison-operator@sha256:1fc3e5d2f54c0cf3668bc070450e0f0f7c5917ca36c0934ea639dbb249ac97db",
          "name": "openunison-operator"
        },
        {
          "digest": "sha256:185b4e9fae41900ccc07ce90622c9e128c832bcfe180ae1362c7b033747dcebf",
          "image": "registry.connect.redhat.com/tremolosecurity/activemq@sha256:185b4e9fae41900ccc07ce90622c9e128c832bcfe180ae1362c7b033747dcebf",
          "name": "amq"
        },
        {
          "digest": "sha256:5a91e1de68f3ce1d2fb837e09c6090da609882c42840859650e62b218904486c",
          "image": "registry.connect.redhat.com/tremolosecurity/openunison-s2i-10@sha256:5a91e1de68f3ce1d2fb837e09c6090da609882c42840859650e62b218904486c",
          "name": "s2i"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "6047168edbb14c0b8248bae5",
      "alm_examples": [
        {
          "kind": "Orca",
          "metadata": {
            "name": "orca"
          },
          "spec": {
            "components": {
              "conntrack": true,
              "dns": false,
              "istio": false,
              "kube-network-policy": true,
              "pusher": true,
              "syslog": false,
              "watcher": true
            },
            "domain": "generic-bank",
            "endpoints": {
              "guru": "guru.tufin.io:443",
              "orca": "https://securecloud.tufin.io",
              "registry": "registry.tufin.io"
            },
            "ignored_config_maps": [
              "kube-system/ingress-gce-lock",
              "istio-system/istio-ingress-controller-leader-istio"
            ],
            "images": {
              "kite": "registry.connect.redhat.com/tufin/kite",
              "monitor": "registry.connect.redhat.com/tufin/monitor"
            },
            "kube_platform": "Openshift",
            "namespace": "tufin-system",
            "project": "openshift4"
          }
        },
        {
          "kind": "Policy",
          "metadata": {
            "name": "orca",
            "namespace": "placeholder"
          },
          "spec": {
            "mode": "learning",
            "networkPolicyAllowAll": true,
            "rules": []
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tufin/orca-operator-bundle@sha256:3ea67ab24efcb9b693d57ba2624de6c9dd5745c788d669dff0562c4b283d447b",
      "bundle_path_digest": "sha256:3ea67ab24efcb9b693d57ba2624de6c9dd5745c788d669dff0562c4b283d447b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-03-09T06:32:46.951000+00:00",
      "csv_description": "Tufin SecureCloud is a cloud-based security monitoring and enforcement platform for Kubernetes clusters, containers and microservices.\nThe SecureCloud Operator installs SecureCloud resources into your cluster. These work with the SecureCloud cloud application to give the following functionality:\n* Monitor the cluster configuration: namespaces, containers, pods, services, network policies etc.\n* Learn and visualize the cluster connectivity\n* Build a connectivity policy (whitelist)\n* Generate audit reports\n* Alert on unauthorized connections\n* Enforce the connectivity policy in the cluster and on enterprise firewalls surrounding the cluster\n* Integrate into the CI/CD pipeline to learn and update the policy continuously\n* Scan images for vulnerabilities\n## Deploying the agent\n* Sign up to SecureCloud [here] (https://www.tufin.com/tufin-orchestration-suite/securecloud)\n* You will be sent an email containing your deployment parameters\n* Complete the deployment following the instructions for generating the agent's secret [here] (https://github.com/Tufin/orca-operator/blob/master/docs/install_securecloud_operator.md)",
      "csv_display_name": "Tufin SecureCloud Operator",
      "csv_metadata_description": "Installs the SecureCloud Agent on the cluster. SecureCloud is a cloud-based security monitoring and enforcement platform for Kubernetes.",
      "csv_name": "orca-operator.v1.0.197",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:20:58.889000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "orca",
      "provided_apis": [
        {
          "group": "tufin.io",
          "kind": "Orca",
          "plural": "orcas",
          "version": "v1alpha1"
        },
        {
          "group": "networking.tufin.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:dfe69f95b629f1380879eee8e09dc1d51ebecf2a9cae18b254a3da6fd0f2951f",
          "image": "registry.connect.redhat.com/tufin/orca-operator@sha256:dfe69f95b629f1380879eee8e09dc1d51ebecf2a9cae18b254a3da6fd0f2951f",
          "name": "orca-operator-dfe69f95b629f1380879eee8e09dc1d51ebecf2a9cae18b254a3da6fd0f2951f-annotation"
        },
        {
          "digest": "sha256:dfe69f95b629f1380879eee8e09dc1d51ebecf2a9cae18b254a3da6fd0f2951f",
          "image": "registry.connect.redhat.com/tufin/orca-operator@sha256:dfe69f95b629f1380879eee8e09dc1d51ebecf2a9cae18b254a3da6fd0f2951f",
          "name": "orca-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.197",
      "version_original": "1.0.197"
    },
    {
      "_id": "6047168f5a00810ecaf7c442",
      "alm_examples": [
        {
          "kind": "PerceptiLabs",
          "metadata": {
            "name": "example-perceptilabs"
          },
          "spec": {
            "coreGpus": 0,
            "corePvc": "perceptilabs-pvc",
            "license_name": "demo",
            "license_value": "demo",
            "ryggPvc": "perceptilabs-pvc"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/perceptilabs/perceptilabs-operator-bundle@sha256:ac9d7ca9b4ca142bd5c983e541cc687fea3143446b79d7d853f7dd654a3001ef",
      "bundle_path_digest": "sha256:ac9d7ca9b4ca142bd5c983e541cc687fea3143446b79d7d853f7dd654a3001ef",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-03-09T06:32:47.953000+00:00",
      "csv_description": "The PerceptiLabs operator creates and maintains PerceptiLabs, a visual tool for machine learning at warp speed.\n\nPerceptiLabs visual modeling tool provides a GUI for building,\ntraining, and assessing your models, while also enabling deeper\ndevelopment with code. You get faster iterations and better\nexplainability of your results.\n\nFor more information visit [http://perceptilabs.com](http://perceptilabs.com).\n\n# Features\n\n**Fast modeling**  \nMake changes, debug, and tune your model through the GUI of custom code\neditor where every component/layer is reprogrammable. Choose from\nmultiple neural network models as well as classical AI methods.\n\n\n**Transparency of Model Performance and Results**  \nGet instant feedback about your model's performance through the\nvisualization of the architecture, to better review and understand the\nresults. See real-time analytics in every operation and variable, and\ngranular previews of output from each model component.\n\n\n**Flexibility**  \nCustomize your environment and statistics dashboard. Use high-level\nabstractions or low-level code. Execute any custom Python code or export\na fully trained TensorFlow model to perform inference in your projects.\n\n\n\n# Installation Instructions  \nFor your convenience, we've included an example quickstart for running PerceptiLabs in demo mode.\n\n## Prepare your namespace  \nChoose or create the namespace into which you'd like install PerceptiLabs. For example:  \n```\noc create namespace REPLACE_NAMESPACE\n```\n\n## Prepare storage for your data\n\nYou'll need to have a place on your cluster for storing training data and models.\n\nHere's an example configuration for creating storage on a cluster hosted on AWS that you can tailor to your needs:\n\n```\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: perceptilabs-example-sc\n  annotations:\n    description: Example Storage for PerceptiLabs\nprovisioner: kubernetes.io/aws-ebs\nparameters:\n  fsType: ext4\n  type: gp2\nreclaimPolicy: Delete\nvolumeBindingMode: Immediate\n---\nkind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n  name: REPLACE_PVC_NAME\n  namespace: REPLACE_NAMESPACE\nspec:\n  storageClassName: perceptilabs-example-sc\n  volumeMode: Filesystem\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 50Gi\n```\n\n## Subscribe to the PerceptiLabs operator in your namespace\n\nIf you're using the OpenShift console webpage, just click the Install button on this operator. If not, you can customize and apply this configuration:\n\n```\napiVersion: operators.coreos.com/v1\nkind: OperatorGroup\nmetadata:\n  name: REPLACE_NAMESPACE-operatorgroup\n  namespace: REPLACE_NAMESPACE\nspec:\n  targetNamespaces:\n  - REPLACE_NAMESPACE\n---\napiVersion: operators.coreos.com/v1alpha1\nkind: Subscription\nmetadata:\n  name: perceptilabs-operator\n  namespace: REPLACE_NAMESPACE\nspec:\n  channel: stable\n  name: perceptilabs-operator-package\n  source: perceptilabs-operators\n  sourceNamespace: openshift-marketplace\n  namespace: REPLACE_NAMESPACE\n```\n\nAfter this, you should see a `perceptilabs-operator` pod start up in your namespace. In that pod, the log for the `operator` container should eventually say \"starting to serve\".\n\n## Start a copy of PerceptiLabs\n\nThis is where you connect your storage and service account to a PerceptiLabs instance and run it. You can customize and apply the following configuration:\n\n```\napiVersion: perceptilabs.com/v1\nkind: PerceptiLabs\nmetadata:\n  name: example-perceptilabs\n  namespace: REPLACE_NAMESPACE\nspec:\n  corePvc: REPLACE_PVC_NAME\n  ryggPvc: REPLACE_PVC_NAME\n```\n\nAt this point two pods named 'perceptilabs-core-...' and 'perceptilabs-frontend-...` will start up in your namespace.\n\n## Copy data files to your cluster\n\nIf you've used the persistent storage configuration from above, then you have a read-write volume mounted in the pod at `/mnt/plabs`. Copy your files there:\n\n```\noc cp REPLACE_FILENAME --namespace=REPLACE_NAMESPACE REPLACE_CORE_POD_NAME:/mnt/plabs --container=core\n```\n\n## Get the URL of your PerceptiLabs\n\nOnce everything is up and running, you'll have two new routes in your namespace. Go to the routes for your namespace and follow the link named `perceptilabs-frontend`. Your browser will be connected to your instance of PerceptiLabs! Alternatively, you can get the URL from the command line:\n\n```\noc get routes --namespace REPLACE_NAMESPACE perceptilabs-frontend\n```",
      "csv_display_name": "PerceptiLabs Operator",
      "csv_metadata_description": "AI platform which lets you Build, Train and Analyze",
      "csv_name": "perceptilabs-operator.v1.0.21",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:22:10.958000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "perceptilabs-operator-package",
      "provided_apis": [
        {
          "group": "perceptilabs.com",
          "kind": "PerceptiLabs",
          "plural": "perceptilabs",
          "version": "v1alpha1"
        },
        {
          "group": "perceptilabs.com",
          "kind": "PerceptiLabs",
          "plural": "perceptilabs",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:520d0b84a205a00653493bd88ee570b46ee010da51c00aefb44e16a483ef46a8",
          "image": "registry.connect.redhat.com/perceptilabs/perceptilabs-operator@sha256:520d0b84a205a00653493bd88ee570b46ee010da51c00aefb44e16a483ef46a8",
          "name": "perceptilabs-operator-520d0b84a205a00653493bd88ee570b46ee010da51c00aefb44e16a483ef46a8-annotation"
        },
        {
          "digest": "sha256:520d0b84a205a00653493bd88ee570b46ee010da51c00aefb44e16a483ef46a8",
          "image": "registry.connect.redhat.com/perceptilabs/perceptilabs-operator@sha256:520d0b84a205a00653493bd88ee570b46ee010da51c00aefb44e16a483ef46a8",
          "name": "ansible"
        },
        {
          "digest": "sha256:520d0b84a205a00653493bd88ee570b46ee010da51c00aefb44e16a483ef46a8",
          "image": "registry.connect.redhat.com/perceptilabs/perceptilabs-operator@sha256:520d0b84a205a00653493bd88ee570b46ee010da51c00aefb44e16a483ef46a8",
          "name": "operator"
        },
        {
          "digest": "sha256:e32ba8261fd22d8324b7cee2cd62a04602e33a11dc12994f629b715ae6983459",
          "image": "registry.connect.redhat.com/perceptilabs/perceptilabs-frontend-1@sha256:e32ba8261fd22d8324b7cee2cd62a04602e33a11dc12994f629b715ae6983459",
          "name": "frontend_image"
        },
        {
          "digest": "sha256:bf50b30c9e1c09929b0cc70d200638c5947ca20695ded49bc38fc6790cd7f2ef",
          "image": "registry.connect.redhat.com/perceptilabs/perceptilabs-core-1@sha256:bf50b30c9e1c09929b0cc70d200638c5947ca20695ded49bc38fc6790cd7f2ef",
          "name": "core_image"
        },
        {
          "digest": "sha256:5927fde799ab21ab425db72ddb51d19c1ea7c6fb0b5dbe68cf7637f6d66774d3",
          "image": "registry.connect.redhat.com/perceptilabs/perceptilabs-rygg-1@sha256:5927fde799ab21ab425db72ddb51d19c1ea7c6fb0b5dbe68cf7637f6d66774d3",
          "name": "rygg_image"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.21",
      "version_original": "1.0.21"
    },
    {
      "_id": "604716928985fcd889e788d7",
      "alm_examples": [
        {
          "kind": "PortshiftInstaller",
          "metadata": {
            "name": "example-portshiftinstaller"
          },
          "spec": {
            "managementUrl": "console.portshift.io",
            "portshiftClusterId": "CLUSTER_ID"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portshift/operator-bundle@sha256:315706e1ed51c3543b44c0524ee717b36324d128d8dafac2388adf94107c4c48",
      "bundle_path_digest": "sha256:315706e1ed51c3543b44c0524ee717b36324d128d8dafac2388adf94107c4c48",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-03-09T06:32:50.831000+00:00",
      "csv_description": "### Contents\n * About\n * Requirements\n * Documentation\n * Issues and feedback\n\n### About\nThe portshift-operator is a controller that runs within a Kubernetes or Openshift cluster that provides a means to deploy and manage Portshift's runtime controller, which is a single pod (agentless admission controller) that provide comperhensive runtime security.\n\n## Use the portshift-operator to:\n\n * Deploy Portshfit controler on Kubernetes or Openshift cluster\n * Automate the registration/authentication process prior to the deployment.\n\n## Deployment Requirements\nThe Operator deploys on Kubernetes and Openshift clusters.\n\n * Kubernetes: 1.15 +\n * Openshift: 4.0 +\n\n## Documentation\nThe following documentation is provided:\n\n * [Installation](http://portshift.readme.io/)\n\n## Issues and feedback\nIf you encounter any problems or would like to give us feedback on deployments, we encourage you to raise issues here on GitHub.\n",
      "csv_display_name": "Portshift Operator",
      "csv_metadata_description": "The operator will deploy portshift agent on the cluster",
      "csv_name": "portshift-operator.v0.1.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:17:41.229000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "portshift-controller-operator",
      "provided_apis": [
        {
          "group": "portshift.io",
          "kind": "PortshiftInstaller",
          "plural": "portshiftinstallers",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:7676180f5fcd495ed9d3bf232e5ffc426767c7f8e9914637a3505da84ddcfc4e",
          "image": "registry.connect.redhat.com/portshift/operator@sha256:7676180f5fcd495ed9d3bf232e5ffc426767c7f8e9914637a3505da84ddcfc4e",
          "name": "operator-7676180f5fcd495ed9d3bf232e5ffc426767c7f8e9914637a3505da84ddcfc4e-annotation"
        },
        {
          "digest": "sha256:7676180f5fcd495ed9d3bf232e5ffc426767c7f8e9914637a3505da84ddcfc4e",
          "image": "registry.connect.redhat.com/portshift/operator@sha256:7676180f5fcd495ed9d3bf232e5ffc426767c7f8e9914637a3505da84ddcfc4e",
          "name": "portshift-operator"
        },
        {
          "digest": "sha256:f52b3097d049ac86920bd6cdd4dac3def7411dcd1757438b92f0d7d36fa4852e",
          "image": "registry.connect.redhat.com/portshift/portshift-k8s-agent@sha256:f52b3097d049ac86920bd6cdd4dac3def7411dcd1757438b92f0d7d36fa4852e",
          "name": "agent"
        },
        {
          "digest": "sha256:19a49c31102b8f4afa2ad8980d3037c78167da089f4c62023da059bbf2c77c87",
          "image": "registry.connect.redhat.com/portshift/k8s-upgrader@sha256:19a49c31102b8f4afa2ad8980d3037c78167da089f4c62023da059bbf2c77c87",
          "name": "agent_upgrader"
        },
        {
          "digest": "sha256:5569481578b0049f2bdc10158c50e8c76947d0b053ed4ed9add6838c52f5ddb7",
          "image": "registry.connect.redhat.com/portshift/gopassivedns@sha256:5569481578b0049f2bdc10158c50e8c76947d0b053ed4ed9add6838c52f5ddb7",
          "name": "agent_passive_dns_detector"
        },
        {
          "digest": "sha256:3c1567790f045dd646f65cdcd3287d5ed8a01ca3212db8f48bd5586675261e74",
          "image": "registry.connect.redhat.com/portshift/clair@sha256:3c1567790f045dd646f65cdcd3287d5ed8a01ca3212db8f48bd5586675261e74",
          "name": "clair"
        },
        {
          "digest": "sha256:b27d47eb7a66968d34dc8d8e9374b74cec1bcb20345926c3ef56b1c1e46d5f15",
          "image": "registry.connect.redhat.com/portshift/clair-db@sha256:b27d47eb7a66968d34dc8d8e9374b74cec1bcb20345926c3ef56b1c1e46d5f15",
          "name": "clair_db"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.1.6",
      "version_original": "0.1.6"
    },
    {
      "_id": "604716978985fcd889e788da",
      "alm_examples": [
        {
          "kind": "Rapidbiz",
          "metadata": {
            "labels": {
              "app.kubernetes.io/component": "server",
              "app.kubernetes.io/instance": "rapidbiz-operator",
              "app.kubernetes.io/managed-by": "ansible",
              "app.kubernetes.io/name": "rapidbiz",
              "name": "rapidbiz-operator"
            },
            "name": "example-rapidbiz"
          },
          "spec": {
            "adminpassword": "adminpwd",
            "adminuser": "admin@unknown.com",
            "company": "",
            "databasehost": "",
            "databasename": "",
            "databasepassword": "",
            "databaseport": "3306",
            "databasetype": "MySQL",
            "databaseuser": "",
            "pullpolicy": "IfNotPresent",
            "pvc": true,
            "replicas": 1,
            "resourcerequirement": {
              "limits": {
                "cpu": "8",
                "memory": "6400Mi"
              },
              "requests": {
                "cpu": "1000m",
                "memory": "1000Mi"
              }
            },
            "scalepodcpu": 75,
            "scalepodmax": 10,
            "scalepodmin": 1,
            "scalestate": false,
            "serverlicense": "",
            "serviceroute": true
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/vacava/rapidbiz-operator-bundle@sha256:57e0e6c51ed2b9ebf5347eee1fdd3ebff795cf8cf51f83e43cad4b02ea3872ad",
      "bundle_path_digest": "sha256:57e0e6c51ed2b9ebf5347eee1fdd3ebff795cf8cf51f83e43cad4b02ea3872ad",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-03-09T06:32:55.932000+00:00",
      "csv_description": "RapidBIZ Ansible Operator OLM is designed to work on Open Shift version 4.2 or greater with Kuberutes version 1.14 or greater.\n\nRapidBIZ is a simple to use, integrated cloud development, and delivery environment that enables significant productivity and cost advantages - leveraging Docker Images provides enterprise level deployment management.\n\nRequires a database either external to the cluster or one installed via a database operator or docker image.\n\nSee our website [documention](https://www.vacava.com/rapidbiz/deploy) for more detailed information.",
      "csv_display_name": "RapidBIZ Operator",
      "csv_metadata_description": "RapidBIZ is a simple to use, integrated cloud development and delivery environment that enables significant productivity advantages.",
      "csv_name": "rapidbiz-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:15:15.304000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "rapidbiz-operator-certified",
      "provided_apis": [
        {
          "group": "api.rapidbiz.com",
          "kind": "Rapidbiz",
          "plural": "rapidbizs",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:0a297bf1be48f3587577ca471587601eda7cda37fd20e834aad235ab99168d1a",
          "image": "registry.connect.redhat.com/vacava/rapidbiz-operator@sha256:0a297bf1be48f3587577ca471587601eda7cda37fd20e834aad235ab99168d1a",
          "name": "rapidbiz-operator-0a297bf1be48f3587577ca471587601eda7cda37fd20e834aad235ab99168d1a-annotation"
        },
        {
          "digest": "sha256:0a297bf1be48f3587577ca471587601eda7cda37fd20e834aad235ab99168d1a",
          "image": "registry.connect.redhat.com/vacava/rapidbiz-operator@sha256:0a297bf1be48f3587577ca471587601eda7cda37fd20e834aad235ab99168d1a",
          "name": "ansible"
        },
        {
          "digest": "sha256:0a297bf1be48f3587577ca471587601eda7cda37fd20e834aad235ab99168d1a",
          "image": "registry.connect.redhat.com/vacava/rapidbiz-operator@sha256:0a297bf1be48f3587577ca471587601eda7cda37fd20e834aad235ab99168d1a",
          "name": "operator"
        },
        {
          "digest": "sha256:af1fbbb2e68bd736aee9b213ec4cf299dc5fd0ad228d35bee8e97e9926e4e905",
          "image": "registry.connect.redhat.com/vacava/rapidbiz@sha256:af1fbbb2e68bd736aee9b213ec4cf299dc5fd0ad228d35bee8e97e9926e4e905",
          "name": "rapidbiz"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "6047169a3937aa922df5dc66",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "5.4.14-31.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "size": 3,
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "bundle_path_digest": "sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "5.4.14",
      "creation_date": "2021-03-09T06:32:58.150000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v5.4.14-7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:22:01.308000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "redislabs/operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "operator-062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217-annotation"
        },
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "redis-enterprise-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "5.4.14-7",
      "version_original": "5.4.14-7"
    },
    {
      "_id": "6047169a3937aa922df5dc68",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.12-57.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:292bef653614d21a7d7a8d7df2507978eafcf66910f978b1edf6469a42302874",
      "bundle_path_digest": "sha256:292bef653614d21a7d7a8d7df2507978eafcf66910f978b1edf6469a42302874",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.0.12",
      "creation_date": "2021-03-09T06:32:58.872000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.12-5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:19:31.353000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "name": "redis-enterprise-operator-b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f-annotation"
        },
        {
          "digest": "sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "name": "redis-enterprise-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.12-5",
      "version_original": "6.0.12-5"
    },
    {
      "_id": "6047169cdbb14c0b8248bae6",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.6-39.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "bundle_path_digest": "sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.0.6",
      "creation_date": "2021-03-09T06:33:00.447000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-24",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:12:45.533000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "redislabs/operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "operator-998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b-annotation"
        },
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "redis-enterprise-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.6-24",
      "version_original": "6.0.6-24"
    },
    {
      "_id": "6047169d8985fcd889e788db",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.8-30.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "bundle_path_digest": "sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.0.8",
      "creation_date": "2021-03-09T06:33:01.677000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:21:51.675000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator-0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1-annotation"
        },
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.8-20",
      "version_original": "6.0.8-20"
    },
    {
      "_id": "604716a05a00810ecaf7c443",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.12-57.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:292bef653614d21a7d7a8d7df2507978eafcf66910f978b1edf6469a42302874",
      "bundle_path_digest": "sha256:292bef653614d21a7d7a8d7df2507978eafcf66910f978b1edf6469a42302874",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2021-03-09T06:33:04.049000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.12-5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:13:51.180000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "name": "redis-enterprise-operator-b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f-annotation"
        },
        {
          "digest": "sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "name": "redis-enterprise-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.12-5",
      "version_original": "6.0.12-5"
    },
    {
      "_id": "604716a25a00810ecaf7c444",
      "alm_examples": [
        {
          "kind": "RocketChat",
          "metadata": {
            "name": "rocketchat-quickstart"
          },
          "spec": {
            "labels": {
              "app": "rocketchat"
            },
            "memoryLimit": "512Mi",
            "mongodbDatabase": "rocketchat",
            "mongodbReplicaName": "rs0",
            "mongodbReplicas": 1,
            "mongodbSecretName": "mongodb-secret",
            "rocketchatReplicas": 1,
            "volumeCapacity": "1Gi"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/rocketchat/rocketchat-operator-bundle@sha256:939fd27346e704244fda2c6666cda4e6f164d541e89c0000f4a46d91296831c1",
      "bundle_path_digest": "sha256:939fd27346e704244fda2c6666cda4e6f164d541e89c0000f4a46d91296831c1",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-03-09T06:33:06.549000+00:00",
      "csv_description": "# Rocket.Chat Operator\n\nThis will launch an instance of the Rocket.Chat collaboration platform on your OpenShift cluster.\nIt is designed as a \"push-button-go\" operator, leveraging Ansible for the underlying logic.\nThe operator handles the provisioning of MongoDB from Red Hat Software Collections, and the deployment of Rocket.Chat from the Red Hat Container Catalog.\n\n## Quick Instructions\n\nTo get started, you can use the included RocketChat custom resource template (provided when installing from OperatorHub), which will launch Rocket.Chat with the following options:\n\n* 1 GiB storage volume for MongoDB\n* 512 MiB memory limit each for MongoDB and Rocket.Chat\n* Single pod instances of MongoDB and Rocket.Chat\n* Automatically generated credentials for MongoDB, stored in a Kubernetes secret\n\n## Custom Installation\n\nThe default CR template is enough to get started, but for a production environment you'll likely want to adjust your resource size accordingly.\n\nStorage, memory and pod replicas can be adjusted by changing the respective fields in the RocketChat custom resource:\n\n```\napiVersion: open.rocket.chat/v1alpha1\nkind: RocketChat\nmetadata:\n  name: rocketchat-custom\nspec:\n  mongodbReplicas: 1\n  memoryLimit: 512Mi\n  rocketchatReplicas: 1\n  volumeCapacity: 1Gi\n```\n\nYou can also install Rocket.Chat using an ephemeral storage volume by setting the `spec.volumeCapacity` field of the CR to an empty string:\n\n```\napiVersion: open.rocket.chat/v1alpha1\nkind: RocketChat\nmetadata:\n  name: rocketchat-custom\nspec:\n  volumeCapacity: \"\"\n```\n\nIf you would like to provide your own MongoDB credentials, you can create a Kubernetes secret with the following fields (`keyfile` is a base64 encoded, 756 character randomized string):\n\n```\nusername:\npassword:\nadmin_password:\nkeyfile:\n```\n\nThe name of the kubernetes secret you created above should be set in the RocketChat custom resource:\n\n```\napiVersion: open.rocket.chat/v1alpha1\nkind: RocketChat\nmetadata:\n  name: rocketchat-custom\nspec:\n  mongodbSecretName: mongodb-secret-name\n```\n\nYou can customize or add labels that will be applied by the operator to all of the created objects:\n\n```\napiVersion: open.rocket.chat/v1alpha1\nkind: RocketChat\nmetadata:\n  name: rocketchat-custom\nspec:\n  labels:\n    app: rocketchat\n    env: production\n    region: na-east\n```\n\nIf desired, you can also customize the MongoDB database and replicaset names:\n\n```\napiVersion: open.rocket.chat/v1alpha1\nkind: RocketChat\nmetadata:\n  name: rocketchat-custom\nspec:\n  mongodbDatabase: rocketchat\n  mongodbReplicaName: rs0\n```\n",
      "csv_display_name": "Rocket.Chat Operator",
      "csv_metadata_description": "Deploy Rocket.Chat Collaboration Platform on OpenShift",
      "csv_name": "rocketchat-operator.v0.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:13:10.769000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "rocketchat-operator-certified",
      "provided_apis": [
        {
          "group": "open.rocket.chat",
          "kind": "RocketChat",
          "plural": "rocketchats",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:e556b5222ee2b12c0cbae134f3b081712df6077a5c4f8da693a07674f87fb571",
          "image": "quay.io/rhc4tp/rocketchat-operator@sha256:e556b5222ee2b12c0cbae134f3b081712df6077a5c4f8da693a07674f87fb571",
          "name": "rocketchat-operator-e556b5222ee2b12c0cbae134f3b081712df6077a5c4f8da693a07674f87fb571-annotation"
        },
        {
          "digest": "sha256:1a7796aea2d8e974df8c26de1ecf240917b0fd0c3594cc77f86d48e73c0a5ad1",
          "image": "registry.connect.redhat.com/rocketchat/rocketchat-operator@sha256:1a7796aea2d8e974df8c26de1ecf240917b0fd0c3594cc77f86d48e73c0a5ad1",
          "name": "rocketchat-operator"
        },
        {
          "digest": "sha256:856c0c3e3b7a71795262e29915bf748ee692ecc6dcef0ef3eff0dd1fdb2f85f7",
          "image": "registry.access.redhat.com/rhscl/mongodb-36-rhel7@sha256:856c0c3e3b7a71795262e29915bf748ee692ecc6dcef0ef3eff0dd1fdb2f85f7",
          "name": "mongodb"
        },
        {
          "digest": "sha256:d26a76943471e057a088acd4896eab5b7cdc478069656de0f896ee66ffa61cf7",
          "image": "registry.connect.redhat.com/rocketchat/rocketchat@sha256:d26a76943471e057a088acd4896eab5b7cdc478069656de0f896ee66ffa61cf7",
          "name": "rocketchat"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.1.0",
      "version_original": "0.1.0"
    },
    {
      "_id": "604716a33937aa922df5dc6a",
      "alm_examples": [
        {
          "kind": "RuntimeComponent",
          "metadata": {
            "name": "example-runtime-component"
          },
          "spec": {
            "applicationImage": "registry.connect.redhat.com/ibm/open-liberty-samples@sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/runtime-component-operator-bundle@sha256:8e8792d973514ff1e87acbfbcaef90fa41d7dc66eac939f5e74b307946f7dd37",
      "bundle_path_digest": "sha256:8e8792d973514ff1e87acbfbcaef90fa41d7dc66eac939f5e74b307946f7dd37",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "beta",
      "creation_date": "2021-03-09T06:33:07.062000+00:00",
      "csv_description": "This advanced Operator is capable of deploying any runtime component image with consistent, production-grade QoS. It enables enterprise architects to govern the way their applications get deployed & managed in the cluster, while dramatically reducing the learning curve for developers to deploy into Kubernetes - allowing them to focus on writing the code!\nHere are some key features:\n#### Application Lifecyle\nYou can deploy your runtime component container by either pointing to a container image, or an OpenShift ImageStream. When using an ImageStream the Operator will watch for any updates and will re-deploy the modified image.\n\n#### Custom RBAC\nThis Operator is capable of using a custom ServiceAccount from the caller, allowing it to follow RBAC restrictions. By default it creates a ServiceAccount if one is not specified, which can also be bound with specific roles.\n\n#### Environment Configuration\nYou can configured a variety of artifacts with your deployment, such as: labels, annotations, and environment variables from a ConfigMap, a Secret or a value.\n\n#### Routing\nExpose your application to external users via a single toggle to create a Route on OpenShift or an Ingress on other Kubernetes environments. Advanced configuration, such as TLS settings, are also easily enabled.  Expiring Route certificates are re-issued.\n\n#### High Availability via Horizontal Pod Autoscaling\nRun multiple instances of your application for high availability. Either specify a static number of replicas or easily configure horizontal auto scaling to create (and delete) instances based on resource consumption.\n\n#### Persistence and advanced storage\nEnable persistence for your application by specifying simple requirements: just tell us the size of the storage and where you would like it to be mounted and We will create and manage that storage for you.\nThis toggles a StatefulSet resource instead of a Deployment resource, so your container can recover transactions and state upon a pod restart.\nWe offer an advanced mode where the user specifies a built-in PersistentVolumeClaim, allowing them to configure many details of the persistent volume, such as its storage class and access mode.\n\n#### Service Binding\nEasily bind to available services in your cluster.  Your runtime components can expose and consume other services by simply specifying the target endpoinds: we take care of the heavy lifting such as creating k8s Secrets, injecting them into your container and watching for any changes in configuration!  This way your applications can dynamically reconnect to its required services without any intervention or interruption.\n#### Exposing metrics to Prometheus\nThe Runtime Component Operator exposes the runtime container's metrics via the [Prometheus Operator](https://operatorhub.io/operator/prometheus).\nUsers can pick between a basic mode, where they simply specify the label that Prometheus is watching to scrape the metrics from the container, or they can specify the full `ServiceMonitor` spec embedded into the RuntimeComponent's `spec.monitoring` key controlling things like the poll internal and security credentials.\n#### Easily mount logs and transaction directories\nIf you need to mount the logs and transaction data from your runtime component to an external volume such as NFS (or any storage supported in your cluster), simply add the following (customizing the folder location and size) to your RuntimeComponent CR:\n``` storage: size: 2Gi mountPath: \"/logs\" ```\n\n#### Integration with OpenShift's Certificate Manager\nThe Runtime Component Operator takes advantage of the [cert-manager tool](https://cert-manager.io/), if it is installed on the cluster. This allows the operator to automatically provision TLS certificates for pods as well as routes.\nWhen creating certificates via the RuntimeComponent CR the user can specify a particular issuer name and toggle the scopes between ClusterIssuer (cluster scoped) and Issuer (namespace scoped). If not specified, these values are retrieved from a ConfigMap, with a default value of `self-signed` and `ClusterIssuer`.\nThe certificate is mounted into the container via a Secret so that it is automatically refreshed once the certificate is updated.\n#### Integration with OpenShift Serverless\nDeploy your serverless runtime component using a single toggle.  The Operator will convert all of its generated resources into [Knative](https://knative.dev) resources, allowing your pod to automatically scale to 0 when it is idle.\n\n#### Integration with Kubernetes Application Navigator (kAppNav) and OpenShift's Topology UI\nAutomatically configures the Kubernetes resources for integration with [kAppNav](https://kappnav.io/), allowing your runtime component to compose an umbrella [Application](https://github.com/kubernetes-sigs/application).  This integration allows users to monitor all constituents resources of the application and receive alerts when the health status of a component changes.  From an integrated panel users can also launch day-2-operations, such as viewing the Kibana / Grafana dashboards, and enabling trace for a component.\nDuring this integration we also set the corresponding labels to support OpenShift's Developer Topology UI,which allows you to visualize your entire set of deployments and how they are connected.\n\nSee our [**documentation**](https://github.com/application-stacks/runtime-component-operator/tree/master/doc/) for more information.\n",
      "csv_display_name": "Runtime Component Operator",
      "csv_metadata_description": "Deploys any runtime component with dynamic and auto-tuning configuration",
      "csv_name": "runtime-component-operator.v0.7.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:15:23.956000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "runtime-component-operator-certified",
      "provided_apis": [
        {
          "group": "app.stacks",
          "kind": "RuntimeComponent",
          "plural": "runtimecomponents",
          "version": "v1beta1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:1bf98ba1e20475f591e1edbb8bbf70c86c0fe0e124a84968c339eb873e639596",
          "image": "registry.connect.redhat.com/ibm/runtime-component-operator@sha256:1bf98ba1e20475f591e1edbb8bbf70c86c0fe0e124a84968c339eb873e639596",
          "name": "runtime-component-operator-1bf98ba1e20475f591e1edbb8bbf70c86c0fe0e124a84968c339eb873e639596-annotation"
        },
        {
          "digest": "sha256:1bf98ba1e20475f591e1edbb8bbf70c86c0fe0e124a84968c339eb873e639596",
          "image": "registry.connect.redhat.com/ibm/runtime-component-operator@sha256:1bf98ba1e20475f591e1edbb8bbf70c86c0fe0e124a84968c339eb873e639596",
          "name": "runtime-component-operator"
        },
        {
          "digest": "sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
          "image": "registry.connect.redhat.com/ibm/open-liberty-samples@sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
          "name": "open-liberty-samples-8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4-annotation"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.7.0",
      "version_original": "0.7.0"
    },
    {
      "_id": "6047284c5a00810ecaf7c466",
      "alm_examples": [
        {
          "kind": "SeldonDeployment",
          "metadata": {
            "name": "seldon-model"
          },
          "spec": {
            "name": "test-deployment",
            "predictors": [
              {
                "componentSpecs": [
                  {
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/seldonio/mock-classifier@sha256:482ee477c344badcaa80e850f4339db41957f9c2396ae24f9e398b67bd5c184e",
                          "name": "classifier"
                        }
                      ]
                    }
                  }
                ],
                "graph": {
                  "children": [],
                  "endpoint": {
                    "type": "REST"
                  },
                  "name": "classifier",
                  "type": "MODEL"
                },
                "name": "example",
                "replicas": 1
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/seldonio/seldon-core-operator-bundle@sha256:0f91afcdf6ef68f7a103834d6bf85938f457af36d3fab2fec164476ecb711cfa",
      "bundle_path_digest": "sha256:0f91afcdf6ef68f7a103834d6bf85938f457af36d3fab2fec164476ecb711cfa",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-03-09T07:48:28.399000+00:00",
      "csv_description": "The Seldon operator enables for native operation of production machine learning workloads, including monitoring and operations of language-agnostic models with the benefits of real-time metrics and log analysis.\n   \n## Overview\nSeldon Core is an open source platform for deploying machine learning models on a Kubernetes cluster.\n\n* Deploy machine learning models in the cloud or on-premise.\n* Get metrics and ensure proper governance and compliance for your running machine learning models.\n* Create powerful inference graphs made up of multiple components.\n* Provide a consistent serving layer for models built using heterogeneous ML toolkits.\n\nYou can get started by following the guides in our documentation at https://docs.seldon.io/projects/seldon-core/en/latest/workflow/README.html\n",
      "csv_display_name": "Seldon Operator",
      "csv_metadata_description": "The Seldon operator for management, monitoring and operations of machine learning systems through the Seldon Engine. Once installed, the Seldon Operator provides multiple functions which facilitate the productisation, monitoring and maintenance of machine learning systems at scale.",
      "csv_name": "seldon-operator.v1.2.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:16:39.369000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "seldon-operator-certified",
      "provided_apis": [
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1"
        },
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "version": "v1alpha2"
        },
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "version": "v1alpha3"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:174abdbca57a34b0c102a3bf87f8640121ae28f2857411039d2fc9729f23efc0",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-operator@sha256:174abdbca57a34b0c102a3bf87f8640121ae28f2857411039d2fc9729f23efc0",
          "name": "seldon-core-operator-174abdbca57a34b0c102a3bf87f8640121ae28f2857411039d2fc9729f23efc0-annotation"
        },
        {
          "digest": "sha256:174abdbca57a34b0c102a3bf87f8640121ae28f2857411039d2fc9729f23efc0",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-operator@sha256:174abdbca57a34b0c102a3bf87f8640121ae28f2857411039d2fc9729f23efc0",
          "name": "manager"
        },
        {
          "digest": "sha256:f46297a51ca7b2087a7ee3d3de0312024f696474af6dec4764eeb6c2daca4247",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-executor@sha256:f46297a51ca7b2087a7ee3d3de0312024f696474af6dec4764eeb6c2daca4247",
          "name": "executor"
        },
        {
          "digest": "sha256:7560432beb443c9bcd1f72c765eff4b3c418faa6e22111eb0bb41f6e47182df6",
          "image": "registry.connect.redhat.com/seldonio/seldon-engine@sha256:7560432beb443c9bcd1f72c765eff4b3c418faa6e22111eb0bb41f6e47182df6",
          "name": "engine"
        },
        {
          "digest": "sha256:eb2b47a2f8c96604665b3d1a18d7e39b6a69dd5b061e0f867ab093afc294285c",
          "image": "registry.connect.redhat.com/seldonio/storage-initializer@sha256:eb2b47a2f8c96604665b3d1a18d7e39b6a69dd5b061e0f867ab093afc294285c",
          "name": "storage_initializer"
        },
        {
          "digest": "sha256:b370b068ea0ac1464e384549f45f9fb93da3b2970b60e0090829f384f5e9c5dc",
          "image": "registry.connect.redhat.com/seldonio/sklearnserver-rest@sha256:b370b068ea0ac1464e384549f45f9fb93da3b2970b60e0090829f384f5e9c5dc",
          "name": "sklearnserver_rest"
        },
        {
          "digest": "sha256:c835baa699e6fb3f6c7b0016d075758ce4827520c04429b032920efb7df27011",
          "image": "registry.connect.redhat.com/seldonio/sklearnserver-grpc@sha256:c835baa699e6fb3f6c7b0016d075758ce4827520c04429b032920efb7df27011",
          "name": "sklearnserver_grpc"
        },
        {
          "digest": "sha256:c8a95aae4b173db7991cbe83ca1ab1bc3165ad90fdd9de10f4998604c7dfc7a5",
          "image": "registry.connect.redhat.com/seldonio/xgboostserver-rest@sha256:c8a95aae4b173db7991cbe83ca1ab1bc3165ad90fdd9de10f4998604c7dfc7a5",
          "name": "xgboostserver_rest"
        },
        {
          "digest": "sha256:3dd28690bfdf4b19d5429a26116534c3c5cd25973b12238cd0fb1dbae8c3b8ad",
          "image": "registry.connect.redhat.com/seldonio/xgboostserver-grpc@sha256:3dd28690bfdf4b19d5429a26116534c3c5cd25973b12238cd0fb1dbae8c3b8ad",
          "name": "xgboostserver_grpc"
        },
        {
          "digest": "sha256:fa87b40b1268f12a1614762bbd83960ca13ebcf15dd4fbf0b414f33f33722719",
          "image": "registry.connect.redhat.com/seldonio/mlflowserver-rest@sha256:fa87b40b1268f12a1614762bbd83960ca13ebcf15dd4fbf0b414f33f33722719",
          "name": "mlflowserver_rest"
        },
        {
          "digest": "sha256:e085e33c822b42901dcfc9e1740126bf5432aa879b870e02c8f6ebb2195f34d7",
          "image": "registry.connect.redhat.com/seldonio/mlflowserver-grpc@sha256:e085e33c822b42901dcfc9e1740126bf5432aa879b870e02c8f6ebb2195f34d7",
          "name": "mlflowserver_grpc"
        },
        {
          "digest": "sha256:d38464683754a4c4f01f55b4bb8942df5f08429f41711638adeda82301745361",
          "image": "registry.connect.redhat.com/seldonio/tfproxy-rest@sha256:d38464683754a4c4f01f55b4bb8942df5f08429f41711638adeda82301745361",
          "name": "tfproxy_rest"
        },
        {
          "digest": "sha256:2d713271dfb7bd056d1011ceef218c76806313ce2e9afb8f92e22238038c1888",
          "image": "registry.connect.redhat.com/seldonio/tfproxy-grpc@sha256:2d713271dfb7bd056d1011ceef218c76806313ce2e9afb8f92e22238038c1888",
          "name": "tfproxy_grpc"
        },
        {
          "digest": "sha256:1dc53edc5c8d1b151782f8386c0770d0358c6397eaf42ec55ebd18f331c5ef9e",
          "image": "registry.connect.redhat.com/seldonio/tensorflow-serving@sha256:1dc53edc5c8d1b151782f8386c0770d0358c6397eaf42ec55ebd18f331c5ef9e",
          "name": "tensorflow"
        },
        {
          "digest": "sha256:e08a45f335c2ef763ac10787e4718fb4a1067d6b69ff106e8eca298fc91c3616",
          "image": "registry.connect.redhat.com/seldonio/alibiexplainer@sha256:e08a45f335c2ef763ac10787e4718fb4a1067d6b69ff106e8eca298fc91c3616",
          "name": "explainer"
        },
        {
          "digest": "sha256:350e900f1709c12c73fae170940b158e1d4ad6ce4ead9c884a763d8a27d770e2",
          "image": "registry.connect.redhat.com/seldonio/mock-classifier@sha256:350e900f1709c12c73fae170940b158e1d4ad6ce4ead9c884a763d8a27d770e2",
          "name": "mock_classifier"
        },
        {
          "digest": "sha256:482ee477c344badcaa80e850f4339db41957f9c2396ae24f9e398b67bd5c184e",
          "image": "registry.connect.redhat.com/seldonio/mock-classifier@sha256:482ee477c344badcaa80e850f4339db41957f9c2396ae24f9e398b67bd5c184e",
          "name": "mock-classifier-482ee477c344badcaa80e850f4339db41957f9c2396ae24f9e398b67bd5c184e-annotation"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.2.2",
      "version_original": "1.2.2"
    },
    {
      "_id": "6047284fdbb14c0b8248baff",
      "alm_examples": [
        {
          "kind": "SematextAgent",
          "metadata": {
            "name": "basic-agent-deployment"
          },
          "spec": {
            "region": "EU"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sematext/sematext-operator-bundle@sha256:6261bac8dbfc9453bf59eed93a860f55e15529c564058f79246a5bfe9c6ad698",
      "bundle_path_digest": "sha256:6261bac8dbfc9453bf59eed93a860f55e15529c564058f79246a5bfe9c6ad698",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-03-09T07:48:31.754000+00:00",
      "csv_description": "The Sematext Operator for Kubernetes provides an easy way to deploy Sematext Agent.\n\nSematext Agent collects metrics about hosts (CPU, memory, disk, network, processes), containers (both Docker and rkt) and orchestrator platforms and ships that to [Sematext Cloud](https://sematext.com/cloud). Sematext Cloud is available in the US and EU regions.\n\nIt installs the Sematext Agent to all nodes in your cluster via a `DaemonSet` resource.\n\n## Settings\n\nThis operator uses all the same options as the [Sematext Agent Helm Chart](https://hub.helm.sh/charts/stable/sematext-agent), please take a look to all the options in the following table:\n\n|             Parameter            |            Description            |                  Default                  |\n|----------------------------------|-----------------------------------|-------------------------------------------|\n| `containerToken`                 | Sematext Container token          | `Nil` Provide your Container token        |\n| `logsToken`                      | Sematext Logs token               | `Nil` Provide your Logs token             |\n| `infraToken`                     | Sematext Infra token              | `Nil` Provide your Infra token            |\n| `region`                         | Sematext region                   | `US` Sematext US or EU region             |\n| `agent.image.repository`         | The image repository              | `sematext/agent`                          |\n| `agent.image.tag`                | The image tag                     | `latest`                                  |\n| `agent.image.pullPolicy`         | Image pull policy                 | `Always`                                  |\n| `agent.service.port`             | Service port                      | `80`                                      |\n| `agent.service.type`             | Service type                      | `ClusterIP`                               |\n| `agent.resources`                | Agent resources                   | `{}`                                      |\n| `logagent.image.repository`      | The image repository              | `sematext/logagent`                       |\n| `logagent.image.tag`             | The image tag                     | `latest`                                  |\n| `logagent.image.pullPolicy`      | Image pull policy                 | `Always`                                  |\n| `logagent.resources`             | Logagent resources                | `{}`                                      |\n| `logagent.extraHostVolumeMounts` | Extra mounts                      | `{}`                                      |\n| `customUrl.serverBaseUrl`        | Custom Base URL                   | `Nil`                                     |\n| `customUrl.logsReceiverUrl`      | Custom Logs receiver URL          | `Nil`                                     |\n| `customUrl.eventsRecieverUrl`    | Custom Event receiver URL         | `Nil`                                     |\n| `serviceAccount.create`          | Create a service account          | `true`                                    |\n| `serviceAccount.name`            | Service account name              | `Nil` Defaults to chart name              |\n| `rbac.create`                    | RBAC enabled                      | `true`                                    |\n| `tolerations`                    | Tolerations                       | `[]`                                      |\n| `nodeSelector`                   | Node selector                     | `{}`                                      |\n\nFor example, if you want to deploy Sematext Agent in EU region, create the following resource:\n\n```yaml\napiVersion: sematext.com/v1alpha1\nkind: SematextAgent\nmetadata:\n  name: test-sematextagent\nspec:\n  region: \"EU\"\n  containerToken: YOUR_CONTAINER_TOKEN\n  logsToken: YOUR_LOGS_TOKEN\n  infraToken: YOUR_INFRA_TOKEN\n```\n\n**NOTE:** You need to create [a new Docker app in Sematext Cloud](https://apps.sematext.com/ui/integrations/create/docker) to get relevant tokens.\n\nOnce you have created the above resource, you can apply this file with `kubectl apply -f`.",
      "csv_display_name": "Sematext Operator",
      "csv_metadata_description": "Full stack observability with Sematext Monitoring Platform!",
      "csv_name": "sematext-operator.v1.0.9",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:12:26.091000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "sematext",
      "provided_apis": [
        {
          "group": "sematext.com",
          "kind": "SematextAgent",
          "plural": "sematextagents",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:b0c51c0f22ce24c5bdec6e51d137d9e35237417fc217669935d5e97b81638893",
          "image": "registry.connect.redhat.com/sematext/sematext-operator@sha256:b0c51c0f22ce24c5bdec6e51d137d9e35237417fc217669935d5e97b81638893",
          "name": "sematext-operator-b0c51c0f22ce24c5bdec6e51d137d9e35237417fc217669935d5e97b81638893-annotation"
        },
        {
          "digest": "sha256:b0c51c0f22ce24c5bdec6e51d137d9e35237417fc217669935d5e97b81638893",
          "image": "registry.connect.redhat.com/sematext/sematext-operator@sha256:b0c51c0f22ce24c5bdec6e51d137d9e35237417fc217669935d5e97b81638893",
          "name": "sematext-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.9",
      "version_original": "1.0.9"
    },
    {
      "_id": "60472851dbb14c0b8248bb00",
      "alm_examples": [
        {
          "kind": "SnykMonitor",
          "metadata": {
            "name": "snyk-monitor"
          },
          "spec": {
            "clusterName": "",
            "image": {
              "pullPolicy": "Always",
              "repository": "docker.io/snyk/kubernetes-monitor",
              "tag": "1.40.3"
            },
            "initContainerImage": {
              "repository": "registry.access.redhat.com/ubi8-minimal",
              "tag": "latest"
            },
            "integrationApi": "",
            "monitorSecrets": "snyk-monitor",
            "pvc": {
              "enabled": false,
              "name": "snyk-monitor"
            },
            "scope": "Cluster",
            "temporaryStorageSize": "50Gi"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/snyk/snyk-operator-bundle@sha256:4830b241f5e18221172ddc3a9916215dcb0164f8ec2b0317cb6d31a7c2ce76ac",
      "bundle_path_digest": "sha256:4830b241f5e18221172ddc3a9916215dcb0164f8ec2b0317cb6d31a7c2ce76ac",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-03-09T07:48:33.087000+00:00",
      "csv_description": "A Kubernetes Operator for creating and managing Snyk Kubernetes controller instances.\n\nSnyk integrates with Kubernetes, enabling you to import and test your running workloads and identify vulnerabilities in their associated images and configurations that might make those workloads less secure. Once imported, Snyk continues to monitor those workloads, identifying additional security issues as new images are deployed and the workload configuration changes.\n\n## Prerequisites\n\nTo start using the Operator and the Snyk controller that it manages, you will need to create a secret containing your Snyk integrationId and Docker config file:\n\n```\nkubectl create namespace snyk-monitor\nkubectl create secret generic snyk-monitor -n snyk-monitor --from-literal=dockercfg.json={} --from-literal=integrationId=${SNYK_INTEGRATION_ID}\n```\n\nRefer to the [Snyk documentation](https://support.snyk.io/hc/en-us/articles/360003916138-Kubernetes-integration-overview) for more details.",
      "csv_display_name": "Snyk Operator",
      "csv_metadata_description": "A Kubernetes Operator for creating and managing Snyk controller instances.",
      "csv_name": "snyk-operator-certified.v1.40.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:14:32.953000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "snyk-operator-certified",
      "provided_apis": [
        {
          "group": "charts.snyk.io",
          "kind": "SnykMonitor",
          "plural": "snykmonitors",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:d0e1d5e9069c90967082de97f5da4d31a8fab36a6913ae366869a4bfa87feef5",
          "image": "registry.hub.docker.com/snyk/kubernetes-operator@sha256:d0e1d5e9069c90967082de97f5da4d31a8fab36a6913ae366869a4bfa87feef5",
          "name": "kubernetes-operator-d0e1d5e9069c90967082de97f5da4d31a8fab36a6913ae366869a4bfa87feef5-annotation"
        },
        {
          "digest": "sha256:d0e1d5e9069c90967082de97f5da4d31a8fab36a6913ae366869a4bfa87feef5",
          "image": "registry.hub.docker.com/snyk/kubernetes-operator@sha256:d0e1d5e9069c90967082de97f5da4d31a8fab36a6913ae366869a4bfa87feef5",
          "name": "operator"
        },
        {
          "digest": "sha256:9867fa585db94f7df90cbaf39961677b2aad6862a487ed6d8a2f6b9272069649",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:9867fa585db94f7df90cbaf39961677b2aad6862a487ed6d8a2f6b9272069649",
          "name": "kube-rbac-proxy"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.40.3",
      "version_original": "1.40.3"
    },
    {
      "_id": "60472852122bd89307e010b7",
      "alm_examples": [
        {
          "kind": "IndexerCluster",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "example"
          },
          "spec": {
            "replicas": 1
          }
        },
        {
          "kind": "LicenseMaster",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "example"
          },
          "spec": {}
        },
        {
          "kind": "SearchHeadCluster",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "example"
          },
          "spec": {
            "replicas": 1
          }
        },
        {
          "kind": "Spark",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "replicas": 1
          }
        },
        {
          "kind": "Standalone",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "example"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/splunk/splunk-operator-bundle@sha256:69ab15464e35611399ced93804618510717be529f42c50e70da0ea6a0027a6bb",
      "bundle_path_digest": "sha256:69ab15464e35611399ced93804618510717be529f42c50e70da0ea6a0027a6bb",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-03-09T07:48:34.461000+00:00",
      "csv_description": "Splunk Enterprise is a platform for operational intelligence. Our software\nlets you collect, analyze, and act upon the untapped value of big data that\nyour technology infrastructure, security systems, and business applications\ngenerate. It gives you insights to drive operational performance and\nbusiness results.\n\nPlease refer to [Splunk\nproducts](https://www.splunk.com/en_us/software.html) for more knowledge\nabout the features and capabilities of Splunk, and how you can bring it into\nyour organization.\n\nPlease see the [getting started\nguide](https://splunk.github.io/splunk-operator/) to get up and running with\nthe Splunk Operator for Kubernetes.\n\n* [Known Issues for the Splunk\nOperator](https://splunk.github.io/splunk-operator/#known-issues-for-the-splunk-operator)\n* [Prerequisites for the Splunk\nOperator](https://splunk.github.io/splunk-operator/#prerequisites-for-the-splunk-operator)\n* [Installing the Splunk\nOperator](https://splunk.github.io/splunk-operator/#installing-the-splunk-operator)\n* [Creating Splunk Enterprise\nDeployments](https://splunk.github.io/splunk-operator/#creating-splunk-enterprise-deployments)\n\nCOMMUNITY SUPPORTED: Splunk Operator for Kubernetes is an open source\nproduct developed by Splunkers with contributions from the community of\npartners and customers. This unique product will be enhanced, maintained and\nsupported by the community, led by Splunkers with deep subject matter\nexpertise. The primary reason why Splunk is taking this approach is to push\nproduct development closer to those that use and depend upon it. This direct\nconnection will help us all be more successful and move at a rapid pace.\n\nFor help, please first read our [Frequently Asked\nQuestions](https://splunk.github.io/splunk-operator/FAQ.html)\n\nCommunity Support & Discussions on\n[Slack](http://splk.it/slack) channel #kubernetes\n\nFile Issues or Enhancements in\n[GitHub](https://github.com/splunk/splunk-operator/issues)\nsplunk/splunk-operator\n",
      "csv_display_name": "Splunk Operator for Kubernetes",
      "csv_metadata_description": "The Splunk Operator for Kubernetes (SOK) makes it easy for Splunk Administrators to deploy and operate Enterprise deployments in a Kubernetes infrastructure.",
      "csv_name": "splunk.v0.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:18:31.844000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "splunk-certified",
      "provided_apis": [
        {
          "group": "enterprise.splunk.com",
          "kind": "Spark",
          "plural": "sparks",
          "version": "v1alpha2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "Standalone",
          "plural": "standalones",
          "version": "v1alpha2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "IndexerCluster",
          "plural": "indexerclusters",
          "version": "v1alpha2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "LicenseMaster",
          "plural": "licensemasters",
          "version": "v1alpha2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "SearchHeadCluster",
          "plural": "searchheadclusters",
          "version": "v1alpha2"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:4c97c5fec7e4da46a7a1bf4e13c81f4b41fb6410dbf598dd60cafead8bf060a9",
          "image": "docker.io/splunk/splunk-operator@sha256:4c97c5fec7e4da46a7a1bf4e13c81f4b41fb6410dbf598dd60cafead8bf060a9",
          "name": "splunk-operator-4c97c5fec7e4da46a7a1bf4e13c81f4b41fb6410dbf598dd60cafead8bf060a9-annotation"
        },
        {
          "digest": "sha256:4c97c5fec7e4da46a7a1bf4e13c81f4b41fb6410dbf598dd60cafead8bf060a9",
          "image": "docker.io/splunk/splunk-operator@sha256:4c97c5fec7e4da46a7a1bf4e13c81f4b41fb6410dbf598dd60cafead8bf060a9",
          "name": "splunk-operator"
        },
        {
          "digest": "sha256:64dbb52a66a483a778890407be301fc7edfe8c224b8b524ec3cc1f322c9300a1",
          "image": "docker.io/splunk/splunk@sha256:64dbb52a66a483a778890407be301fc7edfe8c224b8b524ec3cc1f322c9300a1",
          "name": "splunk_enterprise"
        },
        {
          "digest": "sha256:4adf17b546f168a5c580b2445508793f4bfa4c84a41458a0b2fefc6522465a45",
          "image": "registry.connect.redhat.com/splunk/spark@sha256:4adf17b546f168a5c580b2445508793f4bfa4c84a41458a0b2fefc6522465a45",
          "name": "splunk_spark"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.1.0",
      "version_original": "0.1.0"
    },
    {
      "_id": "604764516280a414853ec5a5",
      "alm_examples": [
        {
          "kind": "Stonebranch",
          "metadata": {
            "name": "example-stonebranch"
          },
          "spec": {
            "affinity": {},
            "configmap": {
              "megaId": "5461d88d5",
              "megaName": "FX",
              "stage": "APP",
              "uagAgentClusters": "AGENT_CLUSTER_APP_5461d88d5",
              "uagEnableSsl": "yes",
              "uagNetname": "OPSAUTOCONF",
              "uagOmsServers": "7878@192.168.88.40",
              "uagUsername": "stonebranch"
            },
            "fullnameOverride": "",
            "image": {
              "pullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/stonebranch/universal-agent"
            },
            "ingress": {
              "annotations": {},
              "enabled": false,
              "hosts": [
                {
                  "host": "chart-example.local",
                  "paths": []
                }
              ],
              "tls": []
            },
            "nameOverride": "",
            "namespace": "universalagent",
            "nodeSelector": {},
            "podSecurityContext": {},
            "replicaCount": 1,
            "resources": {},
            "securityContext": {},
            "service": {
              "port": 80,
              "type": "ClusterIP"
            },
            "serviceAccount": {
              "annotations": {},
              "create": true
            },
            "tolerations": [],
            "udmlicense": {
              "password": "dummy-password-for-now",
              "secretName": "udm-license"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/stonebranch/stonebranch-operator-bundle@sha256:b39a3421cf285a88e550fd4ad9a875c0e8e0deeb8b893402400682fe576c6bdc",
      "bundle_path_digest": "sha256:b39a3421cf285a88e550fd4ad9a875c0e8e0deeb8b893402400682fe576c6bdc",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-03-09T12:04:33.879000+00:00",
      "csv_description": "Stonebranch Universal Agent IT Automation software",
      "csv_display_name": "Universalagent Operator",
      "csv_metadata_description": "Stonebranch Universal Agent IT Automation software",
      "csv_name": "universalagent-operator.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:17:25.199000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "stonebranch-universalagent-operator-certified",
      "provided_apis": [
        {
          "group": "agent.stonebranch.com",
          "kind": "Stonebranch",
          "plural": "stonebranches",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:4ff32ec74c15095313263c8be4575343ab6fa7ab62b36e6691fbc5d685a5a33e",
          "image": "registry.connect.redhat.com/stonebranch/universal-agent@sha256:4ff32ec74c15095313263c8be4575343ab6fa7ab62b36e6691fbc5d685a5a33e",
          "name": "universal-agent-4ff32ec74c15095313263c8be4575343ab6fa7ab62b36e6691fbc5d685a5a33e-annotation"
        },
        {
          "digest": "sha256:7afd61290b618a45760fb5ee3c5b8481601729131a3975fb6476fa88160e3144",
          "image": "registry.connect.redhat.com/stonebranch/stonebranch-operator@sha256:7afd61290b618a45760fb5ee3c5b8481601729131a3975fb6476fa88160e3144",
          "name": "universalagent-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.32",
      "version_original": "0.0.32"
    },
    {
      "_id": "60476454122bd89307e0111a",
      "alm_examples": [
        {
          "kind": "OpsSight",
          "metadata": {
            "name": "opssight-test"
          },
          "spec": {
            "blackduck": {
              "blackduckPassword": "<COMMON_BLACKDUCK_PWD_OPSSIGHT_TYPE_BASE64_ENCODED>",
              "blackduckSpec": {
                "certificateName": "default",
                "exposeService": "",
                "licenseKey": "<BLACKDUCK_LICENSE_KEY>",
                "livenessProbes": false,
                "namespace": "",
                "persistentStorage": false,
                "size": "small",
                "type": "opssight",
                "version": "2019.8.1"
              },
              "connectionsEnvironmentVariableName": "blackduck.json",
              "initialCount": 0,
              "maxCount": 0,
              "tlsVerification": false
            },
            "configMapName": "blackduck",
            "defaultCPU": "300m",
            "defaultMem": "1300Mi",
            "enableMetrics": true,
            "enableSkyfire": false,
            "logLevel": "debug",
            "namespace": "opssight-test",
            "perceiver": {
              "annotationIntervalSeconds": 30,
              "dumpIntervalMinutes": 30,
              "enableImagePerceiver": false,
              "enablePodPerceiver": true,
              "imagePerceiver": {
                "image": "docker.io/blackducksoftware/opssight-image-processor@sha256:8e0a60e4fff96ccea7547cc9e9b11c43de9d2bd1b03b5d3682df29240dc8d68d",
                "name": "opssight-image-processor"
              },
              "podPerceiver": {
                "image": "docker.io/blackducksoftware/opssight-pod-processor@sha256:726892dafbf26ab3e1a0d82ab37953d9ed0aa6de6709313919889d24acef4275",
                "name": "opssight-pod-processor"
              },
              "port": 3002,
              "serviceAccount": "opssight-processor"
            },
            "perceptor": {
              "checkForStalledScansPauseHours": 999999,
              "clientTimeoutMilliseconds": 100000,
              "expose": "",
              "image": "docker.io/blackducksoftware/opssight-core@sha256:ac57efb13c8b09c64699f4bdba3c1d4242359514b886d3e461ae00b032e36834",
              "modelMetricsPauseSeconds": 15,
              "name": "opssight-core",
              "port": 3001,
              "stalledScanClientTimeoutHours": 999999,
              "unknownImagePauseMilliseconds": 15000
            },
            "prometheus": {
              "expose": "",
              "image": "docker.io/prom/prometheus@sha256:7b987901dbc44d17a88e7bda42dbbbb743c161e3152662959acd9f35aeefb9a3",
              "name": "prometheus",
              "port": 9090
            },
            "scannerCPU": "300m",
            "scannerMem": "1300Mi",
            "scannerPod": {
              "imageFacade": {
                "image": "docker.io/blackducksoftware/opssight-image-getter@sha256:c518bf7b292fe56cd09a94a3d9373e806b31dff22c4df54f1b186d852b99f4cc",
                "imagePullerType": "skopeo",
                "internalRegistries": [],
                "name": "opssight-image-getter",
                "port": 3004,
                "serviceAccount": "opssight-scanner"
              },
              "name": "opssight-scanner",
              "replicaCount": 1,
              "scanner": {
                "clientTimeoutSeconds": 600,
                "image": "docker.io/blackducksoftware/opssight-scanner@sha256:128c7223ad1ae04ddb27ba6f0c612a62d78e681c01ffb6a881ab688408749ca9",
                "name": "opssight-scanner",
                "port": 3003
              }
            },
            "secretName": "blackduck",
            "skyfire": {
              "hubClientTimeoutSeconds": 120,
              "hubDumpPauseSeconds": 240,
              "image": "gcr.io/saas-hub-stg/blackducksoftware/pyfire@sha256:266be04b6e09e5ec03664600fb2280fdf9e3aedb1d68edf37d27323ba6fafea9",
              "kubeDumpIntervalSeconds": 60,
              "name": "skyfire",
              "perceptorDumpIntervalSeconds": 60,
              "port": 3005,
              "prometheusPort": 3006,
              "serviceAccount": "skyfire"
            }
          }
        },
        {
          "kind": "Blackduck",
          "metadata": {
            "name": "blackduck-ephemeral"
          },
          "spec": {
            "adminPassword": "<POSTGRES_ADMIN_USER_PASSWORD_BASE64_ENCODED>",
            "certificateName": "default",
            "exposeService": "NONE",
            "licenseKey": "<BLACKDUCK_LICENSE_KEY>",
            "livenessProbes": false,
            "namespace": "blackduck-ephemeral",
            "persistentStorage": false,
            "postgresPassword": "<POSTGRES_POSTGRES_USER_PASSWORD_BASE64_ENCODED>",
            "size": "Small",
            "type": "opssight",
            "userPassword": "<POSTGRES_BLACKDUCK_USER_PASSWORD_BASE64_ENCODED>",
            "version": "2019.8.1"
          }
        },
        {
          "kind": "Alert",
          "metadata": {
            "clusterName": "",
            "name": "alert-test"
          },
          "spec": {
            "alertMemory": "2560Mi",
            "cfsslMemory": "640Mi",
            "encryptionGlobalSalt": "",
            "encryptionPassword": "",
            "environs": [
              "ALERT_SERVER_PORT:8443",
              "PUBLIC_HUB_WEBSERVER_HOST:<<BLACK_DUCK_HOST>>",
              "PUBLIC_HUB_WEBSERVER_PORT:443"
            ],
            "exposeService": "",
            "namespace": "alert-test",
            "persistentStorage": false,
            "port": 8443,
            "pvcSize": "",
            "pvcStorageClass": "",
            "standAlone": true,
            "version": "5.0.0"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/blackducksoftware/synopsys-operator-bundle@sha256:46cee91fdddca9dc6d10fadd954676b7d582505418ba0eec0f2788c19ed1a72a",
      "bundle_path_digest": "sha256:46cee91fdddca9dc6d10fadd954676b7d582505418ba0eec0f2788c19ed1a72a",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2021-03-09T12:04:36.275000+00:00",
      "csv_description": "[Synopsys Operator](https://synopsys.atlassian.net/wiki/spaces/BDLM/pages/34373652/Synopsys+Operator) is a cloud-native administration utility for Synopsys software. Synopsys Operator assists in the deployment and management of Synopsys software like Black Duck, OpsSight Connector, and Black Duck Alert, in a Kubernetes and Red Hat OpenShift environment.\n\nThe Synopsys Operator deployment can be managed by a utility called [synopsysctl](https://github.com/blackducksoftware/synopsys-operator/releases). synopsysctl makes it easy to deploy Synopsys Operator, and it eliminates the need to edit YML/JSON configuration files when deploying and managing software with Synopsys Operator. Synopsysctl provides a rich set of command-line parameters to allow for fast and highly-configurable deployments of Black Duck, OpsSight Connector, and Black Duck Alert. synopsysctl\u2019s interface mimics that of kubectl and oc, making it immediately familiar to anyone with Kubernetes and/or Red Hat OpenShift experience.\n\n## Black Duck\n[Black Duck](https://www.synopsys.com/software-integrity/security-testing/software-composition-analysis.html) is a comprehensive solution for managing security, license compliance, and code quality risks that come from the use of open source in applications and containers. Black Duck gives you unmatched visibility into third-party code, enabling you to control it across your software supply chain and throughout the application life cycle.\n\n### Supported Features\n\n* **Find and fix security vulnerabilities** at each stage in the SDLC, with detailed, vulnerability-specific remediation guidance and technical insight.\n\n* **Eliminate risk of open source license** noncompliance and safeguard your intellectual property by using the industry\u2019s largest open source knowledge base to identify which of 2,500+ licenses are relevant to the open source in your applications.\n\n* **Scan virtually any software, firmware, and source code** to generate acomprehensive bill of materials (BoM) of what\u2019s inside.\n\n* **Automatically monitor for new vulnerabilities** hat affect your BoM, with custom policies and workflow triggers to accelerate remediation and reduce your risk exposure.\n\n## OpsSight Connector\n[Synopsys Black Duck OpsSight](https://synopsys.atlassian.net/wiki/spaces/BDLM/pages/34242566/OpsSight) for Red Hat OpenShift Container Platform provides automated open source identification and monitoring in all container images in a Kubernetes or OpenShift cluster to give teams visibility into, and control over, the risks associated with open source components in those images.\n\n### Supported Features\n\n* **Automated Detection** - OpsSight\u2019s automated multifactor open source detection inventories all the open source in container images as they are deployed.\n\n* **Security Intelligence** -  Black Duck Enhanced Vulnerability Data identifies all known vulnerabilities for the open source in your container images while actionable mitigation and remediation guidance helps minimize exploit risk.\n\n* **Policy Management** - OpsSight policy management allows teams to define open source use and security policies, which are evaluated with each scan and documented as metadata on your containers, allowing you to flag images that violate policies and prevent them from deploying to production.\n\n* **Continous Monitoring** - OpsSight continuously monitors for newly reported open source security vulnerabilities associated with open source in use, providing same-day alerts so teams can understand how newly discovered vulnerabilities affect their containers in production.\n\n## Black Duck Alert\nBlack Duck Alert is an additional deployment to Black Duck that enables you to see Security Vulnerability and Policy Management notifications through email, Slack or HipChat.\n\n## About Synopsys\n\n[Synopsys Software Integrity](https://www.synopsys.com/software-integrity.html) helps development teams build secure, high-quality software, minimizing risks while maximizing speed and productivity. Synopsys, a recognized leader in application security, provides static analysis, software composition analysis, and dynamic analysis solutions that enable teams to quickly find and fix vulnerabilities and defects in proprietary code, open source components, and application behavior.",
      "csv_display_name": "Synopsys Operator",
      "csv_metadata_description": "Synopsys Operator is a cloud-native administration utility for Synopsys software.",
      "csv_name": "synopsys-operator.2019.8.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:19:33.666000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "synopsys-certified",
      "provided_apis": [
        {
          "group": "synopsys.com",
          "kind": "Alert",
          "plural": "alerts",
          "version": "v1"
        },
        {
          "group": "synopsys.com",
          "kind": "Blackduck",
          "plural": "blackducks",
          "version": "v1"
        },
        {
          "group": "synopsys.com",
          "kind": "OpsSight",
          "plural": "opssights",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:554c0844507b8d396d24cee6316913cabe7b09a525bf968ad5a151cede8aeda8",
          "image": "registry.connect.redhat.com/blackducksoftware/synopsys-operator@sha256:554c0844507b8d396d24cee6316913cabe7b09a525bf968ad5a151cede8aeda8",
          "name": "synopsys-operator-554c0844507b8d396d24cee6316913cabe7b09a525bf968ad5a151cede8aeda8-annotation"
        },
        {
          "digest": "sha256:554c0844507b8d396d24cee6316913cabe7b09a525bf968ad5a151cede8aeda8",
          "image": "registry.connect.redhat.com/blackducksoftware/synopsys-operator@sha256:554c0844507b8d396d24cee6316913cabe7b09a525bf968ad5a151cede8aeda8",
          "name": "synopsys-operator"
        },
        {
          "digest": "sha256:266be04b6e09e5ec03664600fb2280fdf9e3aedb1d68edf37d27323ba6fafea9",
          "image": "gcr.io/saas-hub-stg/blackducksoftware/pyfire@sha256:266be04b6e09e5ec03664600fb2280fdf9e3aedb1d68edf37d27323ba6fafea9",
          "name": "blackducksoftware/pyfire-266be04b6e09e5ec03664600fb2280fdf9e3aedb1d68edf37d27323ba6fafea9-annotation"
        },
        {
          "digest": "sha256:7b987901dbc44d17a88e7bda42dbbbb743c161e3152662959acd9f35aeefb9a3",
          "image": "docker.io/prom/prometheus@sha256:7b987901dbc44d17a88e7bda42dbbbb743c161e3152662959acd9f35aeefb9a3",
          "name": "prometheus-7b987901dbc44d17a88e7bda42dbbbb743c161e3152662959acd9f35aeefb9a3-annotation"
        },
        {
          "digest": "sha256:726892dafbf26ab3e1a0d82ab37953d9ed0aa6de6709313919889d24acef4275",
          "image": "docker.io/blackducksoftware/opssight-pod-processor@sha256:726892dafbf26ab3e1a0d82ab37953d9ed0aa6de6709313919889d24acef4275",
          "name": "opssight-pod-processor-726892dafbf26ab3e1a0d82ab37953d9ed0aa6de6709313919889d24acef4275-annotation"
        },
        {
          "digest": "sha256:8e0a60e4fff96ccea7547cc9e9b11c43de9d2bd1b03b5d3682df29240dc8d68d",
          "image": "docker.io/blackducksoftware/opssight-image-processor@sha256:8e0a60e4fff96ccea7547cc9e9b11c43de9d2bd1b03b5d3682df29240dc8d68d",
          "name": "opssight-image-processor-8e0a60e4fff96ccea7547cc9e9b11c43de9d2bd1b03b5d3682df29240dc8d68d-annotation"
        },
        {
          "digest": "sha256:c518bf7b292fe56cd09a94a3d9373e806b31dff22c4df54f1b186d852b99f4cc",
          "image": "docker.io/blackducksoftware/opssight-image-getter@sha256:c518bf7b292fe56cd09a94a3d9373e806b31dff22c4df54f1b186d852b99f4cc",
          "name": "opssight-image-getter-c518bf7b292fe56cd09a94a3d9373e806b31dff22c4df54f1b186d852b99f4cc-annotation"
        },
        {
          "digest": "sha256:128c7223ad1ae04ddb27ba6f0c612a62d78e681c01ffb6a881ab688408749ca9",
          "image": "docker.io/blackducksoftware/opssight-scanner@sha256:128c7223ad1ae04ddb27ba6f0c612a62d78e681c01ffb6a881ab688408749ca9",
          "name": "opssight-scanner-128c7223ad1ae04ddb27ba6f0c612a62d78e681c01ffb6a881ab688408749ca9-annotation"
        },
        {
          "digest": "sha256:ac57efb13c8b09c64699f4bdba3c1d4242359514b886d3e461ae00b032e36834",
          "image": "docker.io/blackducksoftware/opssight-core@sha256:ac57efb13c8b09c64699f4bdba3c1d4242359514b886d3e461ae00b032e36834",
          "name": "opssight-core-ac57efb13c8b09c64699f4bdba3c1d4242359514b886d3e461ae00b032e36834-annotation"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2019.8.4",
      "version_original": "2019.8.4"
    },
    {
      "_id": "604764565a00810ecaf7c4d5",
      "alm_examples": [
        {
          "kind": "Xl",
          "metadata": {
            "name": "xl-release"
          },
          "spec": {
            "global": {
              "tag": "8.0.7"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/t8c-operator-bundle@sha256:54455b83daafad874a99acd5da452c19b0f492ed9781b50cc76940059d7673c4",
      "bundle_path_digest": "sha256:54455b83daafad874a99acd5da452c19b0f492ed9781b50cc76940059d7673c4",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-03-09T12:04:38.802000+00:00",
      "csv_description": "### Realtime Decision Automation for Multicloud Applications\nTurbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints:\n* Continuous placement of workload across multiple clouds both on-prem and public clouds providers.\n* Continuous scaling for applications and the underlying infrastructure.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a public APIs already exposed by application and infrastructure instrumentation to discover and monitor your environment.\nTurbonomic determines the right actions that drive continuous health, including continuous placement and continuous scaling for applications and the underlying cluster.\nTurbonomic leverages the built-on orchestration provided by the application and infrastructure deployment tools and automates the execution of these actions to continiously meet the respective service level objective of each application service.",
      "csv_display_name": "Turbonomic Platform Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "t8c-operator.v8.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:15:05.428000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "t8c-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:7a9e008f52d6cf55cacc9ffee78a133c1c86ea04b4e84bf6a5bb75c24d153d61",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:7a9e008f52d6cf55cacc9ffee78a133c1c86ea04b4e84bf6a5bb75c24d153d61",
          "name": "t8c-operator-7a9e008f52d6cf55cacc9ffee78a133c1c86ea04b4e84bf6a5bb75c24d153d61-annotation"
        },
        {
          "digest": "sha256:7a9e008f52d6cf55cacc9ffee78a133c1c86ea04b4e84bf6a5bb75c24d153d61",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:7a9e008f52d6cf55cacc9ffee78a133c1c86ea04b4e84bf6a5bb75c24d153d61",
          "name": "t8c-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "8.0.0",
      "version_original": "8.0.0"
    },
    {
      "_id": "60476458122bd89307e0111b",
      "alm_examples": [
        {
          "kind": "SDN",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "datapathConfig": {
              "useVrouter": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/atsgen/tf-operator-bundle@sha256:4377e3814893d2071e277b284c633d42586631ef8077a1b31b8d81058fce1380",
      "bundle_path_digest": "sha256:4377e3814893d2071e277b284c633d42586631ef8077a1b31b8d81058fce1380",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-03-09T12:04:40.518000+00:00",
      "csv_description": "## About the managed application\nTungsten Fabric is a software-defined network and security fabric built for rapid deployment at scale. It provides a highly scalable virtual networking and security platform that works with a variety of virtual machine and container orchestrators, integrating them with physical networking and compute infrastructure. It is designed to support multi-tenant networks in the largest environments while supporting multiple orchestrators simultaneously.\n\nTungsten Fabric enables usage of the same controller and forwarding components for every deployment, providing a consistent interface for managing connectivity in all the environments it supports, and is able to provide seamless connectivity between workloads managed by different orchestrators, whether virtual machines or containers, and to destinations in external networks.\n## About this Operator\nTungsten Fabric Operators is intended to simplify the lifecycle management of Tungsten Fabric SDN\n",
      "csv_display_name": "Atsgen Tungsten Fabric Operator",
      "csv_metadata_description": "Atsgen Tungsten Fabric Operator for lifecycle management of Tungsten Fabric SDN",
      "csv_name": "tf-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:15:07.308000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "tf-operator",
      "provided_apis": [
        {
          "group": "tungsten.atsgen.com",
          "kind": "SDN",
          "plural": "sdns",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:9cac80ee42af0658fe220c94719768b41d70c8f978060056c21bccc26199a633",
          "image": "registry.connect.redhat.com/atsgen/tf-operator@sha256:9cac80ee42af0658fe220c94719768b41d70c8f978060056c21bccc26199a633",
          "name": "tf-operator-9cac80ee42af0658fe220c94719768b41d70c8f978060056c21bccc26199a633-annotation"
        },
        {
          "digest": "sha256:9cac80ee42af0658fe220c94719768b41d70c8f978060056c21bccc26199a633",
          "image": "registry.connect.redhat.com/atsgen/tf-operator@sha256:9cac80ee42af0658fe220c94719768b41d70c8f978060056c21bccc26199a633",
          "name": "tf-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "6047645adbb14c0b8248bb6b",
      "alm_examples": [
        {
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:0cb9e9a9f8294c00517d0662eb8df63dca9a5c27ff83f00443b4eab3f31626d5",
      "bundle_path_digest": "sha256:0cb9e9a9f8294c00517d0662eb8df63dca9a5c27ff83f00443b4eab3f31626d5",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-03-09T12:04:42.020000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.7.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:20:57.098000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:ebe3bf3a6cd29cd2f570232e187fe95d138119e589ec8fcbd8e4e98a377d5dff",
          "image": "quay.io/tigera/operator@sha256:ebe3bf3a6cd29cd2f570232e187fe95d138119e589ec8fcbd8e4e98a377d5dff",
          "name": "operator-ebe3bf3a6cd29cd2f570232e187fe95d138119e589ec8fcbd8e4e98a377d5dff-annotation"
        },
        {
          "digest": "sha256:ebe3bf3a6cd29cd2f570232e187fe95d138119e589ec8fcbd8e4e98a377d5dff",
          "image": "quay.io/tigera/operator@sha256:ebe3bf3a6cd29cd2f570232e187fe95d138119e589ec8fcbd8e4e98a377d5dff",
          "name": "tigera-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.7.3",
      "version_original": "1.7.3"
    },
    {
      "_id": "6047645cdbb14c0b8248bb6c",
      "alm_examples": [
        {
          "kind": "Traefikee",
          "metadata": {
            "name": "example-traefikee",
            "namespace": "traefikee"
          },
          "spec": {
            "cluster": "traefikee",
            "controllers": 1,
            "proxies": 2
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/containous/traefikee-operator-bundle@sha256:d8be7fb9621c8a2224d218f62926944a86d704d92db1c2344a0f3724575991b8",
      "bundle_path_digest": "sha256:d8be7fb9621c8a2224d218f62926944a86d704d92db1c2344a0f3724575991b8",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-03-09T12:04:44.297000+00:00",
      "csv_description": "TraefikEE is a distributed, and highly available edge routing solution built on top of the open source Traefik and natively integrates with Openshift to:\n\n* Load balance any applications and easily scale out to meet production traffic needs\n* Secure services with end-to-end network and application encryption\n* Provide end-to-end monitoring and real-time tracing for better insight into application uptime and performance\n\n## Before You Start\n\nTo start using the operator you''ll need a license key\n\nRequest your [30-days free trial](https://info.containo.us/free-trial-traefikee-red-hat-openshift)\n\n* Create a Secret with your License key\n```\nkubectl create namespace traefikee\nkubectl create -n traefikee secret generic license --from-literal=license=${TRAEFIKEE_LICENSE_KEY}\n```\n\n* Generate the client credentials\n```\nexport CLUSTER=test\nteectl setup --cluster=\"${CLUSTER}\" --kubernetes --force\nkubectl create secret -n traefikee generic \"${CLUSTER}-mtls\" --from-file=bundle.zip=./bundle.zip\nkubectl label secret -n traefikee \"${CLUSTER}-mtls\" app=traefikee\nkubectl label secret -n traefikee \"${CLUSTER}-mtls\" release=\"${CLUSTER}\"\n```\n",
      "csv_display_name": "Traefikee Operator",
      "csv_metadata_description": "Traefik Enterprise Edition",
      "csv_name": "traefikee-redhat-certified.v2.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:14:21.467000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "traefikee-redhat-certified",
      "provided_apis": [
        {
          "group": "containo.us",
          "kind": "Traefikee",
          "plural": "traefikees",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:2197c7544027a17debbe0ededc166610d42d90bf957b8ae725bcd27ccf53778f",
          "image": "registry.connect.redhat.com/containous/traefikee-operator@sha256:2197c7544027a17debbe0ededc166610d42d90bf957b8ae725bcd27ccf53778f",
          "name": "traefikee-operator-2197c7544027a17debbe0ededc166610d42d90bf957b8ae725bcd27ccf53778f-annotation"
        },
        {
          "digest": "sha256:2197c7544027a17debbe0ededc166610d42d90bf957b8ae725bcd27ccf53778f",
          "image": "registry.connect.redhat.com/containous/traefikee-operator@sha256:2197c7544027a17debbe0ededc166610d42d90bf957b8ae725bcd27ccf53778f",
          "name": "ansible"
        },
        {
          "digest": "sha256:2197c7544027a17debbe0ededc166610d42d90bf957b8ae725bcd27ccf53778f",
          "image": "registry.connect.redhat.com/containous/traefikee-operator@sha256:2197c7544027a17debbe0ededc166610d42d90bf957b8ae725bcd27ccf53778f",
          "name": "operator"
        },
        {
          "digest": "sha256:86b5cce4168ed056f3d43b121ac2a4533304b857004749d80a30d6c72ede2c40",
          "image": "registry.connect.redhat.com/containous/traefikee@sha256:86b5cce4168ed056f3d43b121ac2a4533304b857004749d80a30d6c72ede2c40",
          "name": "traefikee"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.0.2",
      "version_original": "2.0.2"
    },
    {
      "_id": "604764646280a414853ec5a7",
      "alm_examples": [
        {
          "kind": "VProtectDBServerNode",
          "metadata": {
            "name": "example-vprotectdbservernode"
          },
          "spec": {
            "imagePullSecretsName": "",
            "initcontainerimage": "registry.connect.redhat.com/storware/vprotect-init@sha256:762b1b58f178857dfc25f014c1c290a8c3813fcd9ce544f75c362b3e98df3870",
            "mariadb": {
              "DBImage": "registry.redhat.io/rhel8/mariadb-103",
              "MYSQL_PASSWORD": "vprotect",
              "MYSQL_USER": "vprotect",
              "cpu": "300m",
              "memory": "512Mi",
              "port": 3306,
              "pvcStorageCapacity": "20Gi",
              "replicaCount": 1,
              "serviceName": "mariadb",
              "storageClassName": "ibmc-block-gold"
            },
            "node": {
              "containerPort": 15700,
              "cpu": "500m",
              "image": "registry.connect.redhat.com/storware/vprotect-node@sha256:c83058f7f0bb6d0106a9452e95789ee3b4a21aa61280bc80460bc2608ec1afad",
              "memory": "1Gi",
              "onlyStagingSpace": {
                "enable": true,
                "stagingCapacity": "20Gi",
                "storageClass": "ibmc-file-retain-bronze"
              },
              "provisionNode": true,
              "replicaCount": 1,
              "separateStagingAndBackupSpace": {
                "backupTo": {
                  "file": {
                    "enable": false,
                    "stagingCapacity": "20Gi",
                    "storageClass": "ibmc-file-retain-bronze"
                  },
                  "initializedBlock": {
                    "enable": false,
                    "stagingCapacity": "20Gi",
                    "storageClass": "ibmc-block-retain-bronze"
                  },
                  "rawBlock": {
                    "backupCapacity": "20Gi",
                    "enable": false
                  }
                },
                "stagingCapacity": "20Gi",
                "stagingStorageClass": "ibmc-file-retain-bronze"
              },
              "serviceName": "vprotect-node",
              "singleDeduplicatedSpace": {
                "capacity": "20Gi",
                "enable": false
              }
            },
            "server": {
              "image": "registry.connect.redhat.com/storware/vprotect-server@sha256:6e344d150aa9266ae2c99ebd538d0e20a4d27a38645855e3ada08b379a0151ec",
              "ingress": {
                "enabled": false,
                "subDomain": "my-cluster.containers.appdomain.cloud"
              },
              "replicaCount": 1,
              "routes": {
                "insecureRoute": {
                  "enabled": false,
                  "name": "vprotect-server-http-route"
                },
                "secureRoute": {
                  "enabled": false,
                  "name": "vprotect-server-https-route"
                }
              },
              "serviceName": "vprotect-server"
            },
            "useImagePullSecret": false
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/storware/vprotect-operator-bundle@sha256:3c8b2d67a329f6cd81666303009bb8a43e1970c5703b93d458f500525585c15b",
      "bundle_path_digest": "sha256:3c8b2d67a329f6cd81666303009bb8a43e1970c5703b93d458f500525585c15b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-03-09T12:04:52.233000+00:00",
      "csv_description": "The operator allows you to deploy:\n* MariaDB\n* vProtect Server\n* vProtect Node\nin one go.\n\nThe operator can monitor to see if the components are present. If they're not,\nthe operator will install the  MariaDB, vProtect Server and vProtect Node correctly without any user interaction!\n\nAll you have to do is install the operator and create an instance of MariaDB, vProtect Server and vProtect Node by creating a custom resource of type VProtectDBServerNode.\n\n\n**How to get the Application Images from registry?**\n-----\n\n- First Login to redhat catalogue webpage using your credentials.\n- Search for the Operator.\n- Click on the Operator.\n- There is a description that redirects you (upon clicking) to page that explains how to create service accounts.\n- Create a Service Account. Refer page : <https://access.redhat.com/terms-based-registry/#/accounts>\n- Once a service account is created , you can click on it and then navigate to tab Openshift Secret to get the yaml file for your ImagePullSecret.\n- Download the Secret. Create the secret using command\n\n```sh\n    kubectl create -f <secretfile.yml> --namespace=NAMESPACEHERE\n```\n- Use the name of the created secret in the CR file.\n- For all the application images we would need the secret name to be passed in the CR Spec.\n\n\n**CR Spec Details**\n----------------------\n**General Specs**\n--------\n\n  Spec                       |            Details\n-----------------------------|-----------------------------\nuseImagePullSecret:          | True if using a Secret to pull application images\nimagePullSecretsName:        | Secret name to pull images from private repository\ninitcontainerimage:          | Init container image repository URL\n\n\n**MariaDB**\n--------\n\n  Spec             |            Details\n-------------------|-----------------------------\nDBImage:           | The URL to DB image\nreplicaCount:      | Number of replicas for DB\ncpu:               | CPU configuration\nmemory:            | Memory configuration\nport:              | DB Port number\nserviceName:       | Service name for DB\npvcStorageCapacity:| Volume Capacity\nstorageClassName:  | Storage Class Name of the Volume to be claimed\nMYSQL_PASSWORD:    | DB User Password\nMYSQL_USER:        | DB User\n\n\n**vProtect Server**\n--------\n\n  Spec                       |            Details\n-----------------------------|-----------------------------\nreplicaCount:                | Number of replicas for vProtect Server\nimage:                       | vProtect Server Image URL\nserviceName:                 | vProtect Server Service name\nserviceType:                 | vProtect Server Service Type (Example : NodePort, ClusterIP etc)\ningress.enabled:             | Set to true if you need to create an Ingress\ningress.subDomain:           | Cluster Subdomain\nroutes.insecureRoute.enabled:| Set to true if you want to create an insecure route\nroutes.insecureRoute.name:   | Insecure Route name\nroutes.secureRoute.enabled:  | Set to true if you want to create an secure route\nroutes.secureRoute.name:    | Secure Route name\n\n\n**vProtect Node**\n--------\n\n  Spec                       |            Details\n-----------------------------|-----------------------------\nprovisionNode:               | Set to true if you want to provision a vProtect Node\nreplicaCount:                | Number of replicas for vProtect Node\nimage:                       | vProtect Node Image URL\ncpu:                         | CPU configuration\nmemory:                      | Memory Configuration\ncontainerPort:               | Node Container port\nserviceName:                 | Node Service Name\n\n**vProtect Node Staging Space and Backup Options** :\n--------\n  **For an instance of vProtect Node only one option can be set to true.**\n\n  Staging and Backup Space Option |            Details\n----------------------------------|-----------------------------\n**onlyStagingSpace:**             | If set to true (onlyStagingSpace.enable: true), this will create a staging space with a file type of volume mounted at /vprotect-data.\n                                  | User should provide onlyStagingSpace.stagingCapacity and onlyStagingSpace.stagingCapacity if set to true.\n                                  |\n**singleDeduplicatedSpace:**      | If set to true (singleDeduplicatedSpace.enable: true) , this will create:\n                                  | 1) emptyDir: {} at /vprotect-data\n                                  | 2) RAW Block available at /dev/sda\n                                  |\n**separateStagingAndBackupSpace:**| This allows user to choose separate space for staging and backup.\n                                  | **Staging** : A Staging space is created with a file type of volume mounted at /vprotect-data.\n                                  |               User should provide separateStagingAndBackupSpace.stagingCapacity and\n                                  |               separateStagingAndBackupSpace.stagingStorageClass of file type.\n                                  |\n                                  | **Backup**: User can backup to any one of the below options:\n                                  | 1) **RAW Block** : If set to true separateStagingAndBackupSpace.backupTo.rawBlock\n                                  |                    Creates a RAW Block available at /dev/sda.\n                                  |                    User should provide separateStagingAndBackupSpace.backupTo.rawBlock.backupCapacity\n                                  | 2) **File volume**: If set to true separateStagingAndBackupSpace.backupTo.file\n                                  |                    User should provide separateStagingAndBackupSpace.backupTo.file.backupCapacity\n                                  |                    User should provide separateStagingAndBackupSpace.backupTo.file.storageClass of type file\n                                  |                    User should provide separateStagingAndBackupSpace.backupTo.file.backupMountPath to mount the volume.\n                                  |                    If mount path is kept blank then volume will be mounted to default location - /vprotect_data/backupsDestination\n                                  | 3) **Initialized Block Volume**: If set to true separateStagingAndBackupSpace.backupTo.initializedBlock\n                                  |                    User should provide separateStagingAndBackupSpace.backupTo.initializedBlock.backupCapacity\n                                  |                    User should provide separateStagingAndBackupSpace.backupTo.initializedBlock.storageClass of type block\n                                  |                    User should provide separateStagingAndBackupSpace.backupTo.initializedBlock.backupMountPath to mount the volume\n                                  |                    If mount path is kept blank then volume will be mounted to default location - /vprotect_data/backupsDestination\n                                  |\n**Only emptyDir: {} Volume**      | If none of the above options are set to true , operator creates an emptyDir: {} at /vprotect-data\n\n**Deployment on Kubernetes:**\n-----------------------\n\n```sh\n# Let the cluster know about our new custom resource VProtectDBServerNode\nkubectl create -f deploy/crds/vprotect.storware.com_vprotectdbservernodes_crd.yaml\n# Create the 'vProtect' namespace\nkubectl apply -f deploy/namespace.yaml\n# Create necessary user and permissions to make things happen\nkubectl create -f deploy/service_account.yaml\nkubectl create -f deploy/role.yaml\nkubectl create -f deploy/role_binding.yaml\nkubectl create -f deploy/clusterrole.yaml\nkubectl create -f deploy/clusterrole_binding.yaml\n# Deploy the operator container as a pod\nkubectl apply -f deploy/operator.yaml\nkubectl create -f deploy/crds/vprotect.storware.com_v1alpha1_vprotectdbservernode_cr.yaml\n```\n",
      "csv_display_name": "vProtect Operator",
      "csv_metadata_description": "Storware vProtect is an enterprise backup solution for virtual environments. It facilitates the implementation of virtual machine backup running on every major virtualization, container or cloud platform. It supports multiple backup providers:  file system-based, object storage or enterprise grade backup providers.",
      "csv_name": "vprotect-operator.v0.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:17:09.475000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "vprotect-operator",
      "provided_apis": [
        {
          "group": "vprotect.storware.com",
          "kind": "VProtectDBServerNode",
          "plural": "vprotectdbservernodes",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:5f3331b37cae862364a775e51eee381ea782c439768558779036f827485d74f8",
          "image": "registry.connect.redhat.com/storware/vprotect-operator@sha256:5f3331b37cae862364a775e51eee381ea782c439768558779036f827485d74f8",
          "name": "vprotect-operator-5f3331b37cae862364a775e51eee381ea782c439768558779036f827485d74f8-annotation"
        },
        {
          "digest": "sha256:5f3331b37cae862364a775e51eee381ea782c439768558779036f827485d74f8",
          "image": "registry.connect.redhat.com/storware/vprotect-operator@sha256:5f3331b37cae862364a775e51eee381ea782c439768558779036f827485d74f8",
          "name": "vprotect-operator"
        },
        {
          "digest": "sha256:6934718d927eafa76117e810ba1f79ef2c909fbd57c810484b23367cc52ceb46",
          "image": "registry.redhat.io/rhel8/mariadb-103@sha256:6934718d927eafa76117e810ba1f79ef2c909fbd57c810484b23367cc52ceb46",
          "name": "db"
        },
        {
          "digest": "sha256:762b1b58f178857dfc25f014c1c290a8c3813fcd9ce544f75c362b3e98df3870",
          "image": "registry.connect.redhat.com/storware/vprotect-init@sha256:762b1b58f178857dfc25f014c1c290a8c3813fcd9ce544f75c362b3e98df3870",
          "name": "initcontainer"
        },
        {
          "digest": "sha256:6e344d150aa9266ae2c99ebd538d0e20a4d27a38645855e3ada08b379a0151ec",
          "image": "registry.connect.redhat.com/storware/vprotect-server@sha256:6e344d150aa9266ae2c99ebd538d0e20a4d27a38645855e3ada08b379a0151ec",
          "name": "server"
        },
        {
          "digest": "sha256:c83058f7f0bb6d0106a9452e95789ee3b4a21aa61280bc80460bc2608ec1afad",
          "image": "registry.connect.redhat.com/storware/vprotect-node@sha256:c83058f7f0bb6d0106a9452e95789ee3b4a21aa61280bc80460bc2608ec1afad",
          "name": "node"
        },
        {
          "digest": "sha256:c83058f7f0bb6d0106a9452e95789ee3b4a21aa61280bc80460bc2608ec1afad",
          "image": "registry.connect.redhat.com/storware/vprotect-node@sha256:c83058f7f0bb6d0106a9452e95789ee3b4a21aa61280bc80460bc2608ec1afad",
          "name": "vprotect-node-c83058f7f0bb6d0106a9452e95789ee3b4a21aa61280bc80460bc2608ec1afad-annotation"
        },
        {
          "digest": "sha256:6e344d150aa9266ae2c99ebd538d0e20a4d27a38645855e3ada08b379a0151ec",
          "image": "registry.connect.redhat.com/storware/vprotect-server@sha256:6e344d150aa9266ae2c99ebd538d0e20a4d27a38645855e3ada08b379a0151ec",
          "name": "vprotect-server-6e344d150aa9266ae2c99ebd538d0e20a4d27a38645855e3ada08b379a0151ec-annotation"
        },
        {
          "digest": "sha256:762b1b58f178857dfc25f014c1c290a8c3813fcd9ce544f75c362b3e98df3870",
          "image": "registry.connect.redhat.com/storware/vprotect-init@sha256:762b1b58f178857dfc25f014c1c290a8c3813fcd9ce544f75c362b3e98df3870",
          "name": "vprotect-init-762b1b58f178857dfc25f014c1c290a8c3813fcd9ce544f75c362b3e98df3870-annotation"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.2",
      "version_original": "0.0.2"
    },
    {
      "_id": "604764655a00810ecaf7c4da",
      "alm_examples": [
        {
          "kind": "WavefrontProxy",
          "metadata": {
            "name": "example-wavefrontproxy",
            "namespace": "wavefront"
          },
          "spec": {
            "enableAutoUpgrade": false,
            "image": "registry.connect.redhat.com/wavefronthq/proxy@sha256:5f3e0e9e3768942d6ad0c264213ae5a68d699ad3ca3e8014aed6832b8fb5efc3",
            "openshift": true,
            "storageClaimName": "wavefront-proxy-storage",
            "token": "<TOKEN>",
            "url": "<https://YOUR_CLUSTER.wavefront.com/api/>"
          }
        },
        {
          "kind": "WavefrontCollector",
          "metadata": {
            "name": "wavefront-collector",
            "namespace": "wavefront"
          },
          "spec": {
            "daemon": true,
            "enableAutoUpgrade": false,
            "env": [
              {
                "name": "HOST_PROC",
                "value": "/host/proc"
              },
              {
                "name": "POD_NODE_NAME",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "spec.nodeName"
                  }
                }
              },
              {
                "name": "POD_NAMESPACE_NAME",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "metadata.namespace"
                  }
                }
              }
            ],
            "image": "registry.connect.redhat.com/wavefronthq/wavefront-kubernetes-collector@sha256:25d54158557692b21b56f546b321601301cd470f33f560559f6b9620c1231efc",
            "openshift": true,
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node.alpha.kubernetes.io/role",
                "operator": "Exists"
              },
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists"
              }
            ],
            "useOpenshiftDefaultConfig": true
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/wavefronthq/wavefront-operator-bundle@sha256:a1cba5d7638a711eaf477dccff47d7a1bb83490c2bb05371a950b8e593bc59f4",
      "bundle_path_digest": "sha256:a1cba5d7638a711eaf477dccff47d7a1bb83490c2bb05371a950b8e593bc59f4",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-03-09T12:04:53.307000+00:00",
      "csv_description": "Wavefront OpenShift Operator automatically deploys Wavefront Collector for Kubernetes and Wavefront Proxy, enabling developers and OpenShift operators to get automated observability across the OpenShift environment, including containerized applications, Kubernetes, and underlying infrastructure. \n\nThis Operator deploys two Custom Resources Definitions:\n\n* **Wavefront Proxy:-** A Wavefront proxy ingests metrics and forwards them to the Wavefront service in a secure, fast, and reliable manner. After you install a proxy in your environment, it can handle thousands of simultaneous clients. Your data collection agents or custom code send data to the proxy, which consolidates points into configurable batches and sends the data to the Wavefront service.\n\n* **Wavefront Collector:-** With zero-configuration installation, the Wavefront Collector for Kubernetes auto-discovers and enables monitoring of Kubernetes, infrastructure, and Kubernetes workloads by sending full-stack - Kubernetes clusters, worker nodes, system, Kubernetes and Docker KPI, RED/USE of each layer and custom applications metrics to Wavefront.\n\n### Prerequisite\n\n* A Wavefront API token is needed to configure Wavefront Proxy.  Refer [Generating an API Token] (https://docs.wavefront.com/users_account_managing.html#generating-an-api-token) for generating a token.\n\n### Installing Wavefront Operator using default values\n\n* Create project with name *wavefront* in Openshift and install Wavefront Operator into it.  \n* Create Wavefront Proxy by providing Wavefront API token and URL in the Wavefront Proxy definition. \n* Create Wavefront Collector.\n\n### Advanced Options\n\nRefer Wavefront Operator [docs] (https://github.com/wavefrontHQ/wavefront-operator/blob/master/docs/openshift-operator.md) for configuring Wavefront Proxy and Wavefront Collector using advanced configuration parameters.\n",
      "csv_display_name": "Wavefront Operator",
      "csv_metadata_description": "Wavefront OpenShift Operator automatically deploys Wavefront Collector for Kubernetes and Wavefront Proxy.",
      "csv_name": "wavefront-operator.v0.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:13:35.886000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "wavefront-operator",
      "provided_apis": [
        {
          "group": "wavefront.com",
          "kind": "WavefrontCollector",
          "plural": "wavefrontcollectors",
          "version": "v1alpha1"
        },
        {
          "group": "wavefront.com",
          "kind": "WavefrontProxy",
          "plural": "wavefrontproxies",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:5ddd6c4cd765f5fe1eb5aac46013ca7b925e3ca99ae63681cab068fa3cbac8a6",
          "image": "registry.connect.redhat.com/wavefronthq/wavefront-operator@sha256:5ddd6c4cd765f5fe1eb5aac46013ca7b925e3ca99ae63681cab068fa3cbac8a6",
          "name": "wavefront-operator-5ddd6c4cd765f5fe1eb5aac46013ca7b925e3ca99ae63681cab068fa3cbac8a6-annotation"
        },
        {
          "digest": "sha256:5ddd6c4cd765f5fe1eb5aac46013ca7b925e3ca99ae63681cab068fa3cbac8a6",
          "image": "registry.connect.redhat.com/wavefronthq/wavefront-operator@sha256:5ddd6c4cd765f5fe1eb5aac46013ca7b925e3ca99ae63681cab068fa3cbac8a6",
          "name": "wavefront-operator"
        },
        {
          "digest": "sha256:25d54158557692b21b56f546b321601301cd470f33f560559f6b9620c1231efc",
          "image": "registry.connect.redhat.com/wavefronthq/wavefront-kubernetes-collector@sha256:25d54158557692b21b56f546b321601301cd470f33f560559f6b9620c1231efc",
          "name": "wavefront-kubernetes-collector-25d54158557692b21b56f546b321601301cd470f33f560559f6b9620c1231efc-annotation"
        },
        {
          "digest": "sha256:5f3e0e9e3768942d6ad0c264213ae5a68d699ad3ca3e8014aed6832b8fb5efc3",
          "image": "registry.connect.redhat.com/wavefronthq/proxy@sha256:5f3e0e9e3768942d6ad0c264213ae5a68d699ad3ca3e8014aed6832b8fb5efc3",
          "name": "proxy-5f3e0e9e3768942d6ad0c264213ae5a68d699ad3ca3e8014aed6832b8fb5efc3-annotation"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.1.0",
      "version_original": "0.1.0"
    },
    {
      "_id": "604764695a00810ecaf7c4dc",
      "alm_examples": [
        {
          "kind": "YBCluster",
          "metadata": {
            "name": "example-ybcluster",
            "namespace": "yb-operator"
          },
          "spec": {
            "image": {
              "pullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/yugabytedb/yugabyte",
              "tag": "2.1.2.0"
            },
            "master": {
              "enableLoadBalancer": true,
              "gflags": [
                {
                  "key": "default_memory_limit_to_ram_ratio",
                  "value": "0.85"
                },
                {
                  "key": "use_node_to_node_encryption",
                  "value": "true"
                }
              ],
              "masterRPCPort": 7100,
              "masterUIPort": 7000,
              "podManagementPolicy": "Parallel",
              "replicas": 3,
              "resources": {
                "limits": {
                  "cpu": 2,
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": 1,
                  "memory": "2Gi"
                }
              },
              "storage": {
                "count": 1,
                "size": "50Gi",
                "storageClass": "standard"
              }
            },
            "replicationFactor": 3,
            "subresources": {
              "status": {}
            },
            "tls": {
              "enabled": true,
              "rootCA": {
                "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lVUk9vY2RNbUxZU2YwOWRkQTBPa0VWODJtTTRVd0RRWUpLb1pJaHZjTkFRRUwKQlFBd01ERVJNQThHQTFVRUNnd0lXWFZuWVdKNWRHVXhHekFaQmdOVkJBTU1Fa05CSUdadmNpQlpkV2RoWW5sMApaU0JFUWpBZUZ3MHhPVEE1TWpNd09URXhNalphRncweE9URXdNak13T1RFeE1qWmFNREF4RVRBUEJnTlZCQW9NCkNGbDFaMkZpZVhSbE1Sc3dHUVlEVlFRRERCSkRRU0JtYjNJZ1dYVm5ZV0o1ZEdVZ1JFSXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ3hMd3hMeTZjYjhZdS9laFlmU3pteWVqcEw1cjZVSnFmeApWVDF5SUJWSktzNnZPR0QzRWdhSzZaVVZkODBzOGdZU3hzbG1UREh0cnNyWXhCSVMwRXJMVFFsODZVUVd5d1lsCjkvT09FYzdGUVRoWmdsZHRDQmwxNUZSSmp4TGk0LzFJUU1xaU93TDlGM0xjQ3JobXF1bVZKWXJmVGRtNnp4YXkKY0Q3ZlNISGw5Y3phYWFGUGRRa2JZaUt0V0p2cmJ1WEx2QkhleE0rL2FhaVIwY2FBTE94RkhKRlE0N2E1cWwvVQpOcld6emJuVjFZTkRGcEJmLzY2cm95WFh5L2xGMmhWWStYampudlRNL2M0bURWRHRRcDVKVXR6UGhGZ3ZhQngyClUvL2paeFBPblc5dVU4THdFeVdzeWhPNTNWcEREN3VMSHFHYnFrZWd0OVBtTmZsT1QwMlhBZ01CQUFHakpqQWsKTUE0R0ExVWREd0VCL3dRRUF3SUM1REFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VCTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQitXS0NlS3JiYXkwaFNMdjMreUlEWEkvaEw5TEY1N3pDUzNtRU1JTEJXcUVXbUN1R25WVXNFCktSMXA0VzBPSERXbStzTWNtbm1EcUM4U1VZMHlOM2htYnVGWWViZUs5bks0R3IzQ0VtTGk2Q3dxbzJtcWZLVHkKSk9sSU5KZDFFdW1jSlVBUEtmVGNxVkdSWlpITFlHMTVsckpyNjNMaTlYbHhqajlNNEpCejJnd2dsQ3Bqa1BxMwpSazgvYnZSbHhaNVdlNVZ1RUtTckZRNForditkSS9peFpwdjQ3UHY1TTM3bHdLRlQ5amRxbW8zbE82ODNFcEljCnF6bStrclUyb2VhZUphVUFnWlRFU296VUZGb053QzUyTjR3YWlndXo0TU5pa3ZIYWtiTEpEdW9zQTRhQTBnN0sKb2s3K2UvKzlWY0hEUllSaFN5VVhkanB2SmdyVUEyeVYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                "key": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBc1M4TVM4dW5HL0dMdjNvV0gwczVzbm82UythK2xDYW44VlU5Y2lBVlNTck9yemhnCjl4SUdpdW1WRlhmTkxQSUdFc2JKWmt3eDdhN0syTVFTRXRCS3kwMEpmT2xFRnNzR0pmZnpqaEhPeFVFNFdZSlgKYlFnWmRlUlVTWThTNHVQOVNFREtvanNDL1JkeTNBcTRacXJwbFNXSzMwM1p1czhXc25BKzMwaHg1ZlhNMm1taApUM1VKRzJJaXJWaWI2MjdseTd3UjNzVFB2Mm1va2RIR2dDenNSUnlSVU9PMnVhcGYxRGExczgyNTFkV0RReGFRClgvK3VxNk1sMTh2NVJkb1ZXUGw0NDU3MHpQM09KZzFRN1VLZVNWTGN6NFJZTDJnY2RsUC80MmNUenAxdmJsUEMKOEJNbHJNb1R1ZDFhUXcrN2l4NmhtNnBIb0xmVDVqWDVUazlObHdJREFRQUJBb0lCQUJwbEd0elR1dEpEMm9Dcwp6RXpmSlBvOGtTQ3JnQ3FMMDZyMCt0RmNqQzg1TEU4WUJBSHFjb1VSSlA5c3VHa0FxUHoxRmgyaUxqSHRQeFNwCnFOT2FxZm05UVRPVmdHb3cxbnFqaEduZXAwSGxaR0taTXpMdjZQTVNENmhob3Z1ZjRTUjVXblp1ZWhTQUFNRmMKNjNtSDdvSWtkSnF0ZTBrRC9xcVlaQlZaTW5hQ053cGpsQ0dLYmZLbjlDTHpGSUxhckxiNm4zR2x6dmpRTC9nTAphd3VnNlh5WThvcTlEVjBrZkpEV0lVZFRIc1lFYXFHcGNFWkwvNWZPSlVVcTdSSzV2eWxTVmUrWFZ5OE5jZm1sCk4rQUMrcGNwVFRRR2V0SXZsZWpsT1VhUDRTU3FNckdSUVd1Zk5pSG11a1ZtWXo5bUFsN3pRQ2xyWTZEODNBOUwKQkVkMmNYa0NnWUVBMktRVmNhVDlGRFM2ZENPdHZFL2hPUDhSNVAvY21JSjFNMXhKY2hzL1IxcUdjd0RqWkZiRwp0RGFFNVNwVExidjg4d2hKb2FDbWhlbE9renFRaWIrNXNZU2tqZERVTThIUTlhWXk3aGlxT29jL3dFUlB6ZGRRCmUyelhYRHd2QWQ2VGc3OWpLV2NhOWZxcUw0azRWOVBtbHlrVjRUVDVoaHBhVkFqbi82VDZGYXNDZ1lFQTBWL1MKT0JSdzQraEIwU0JiUU1rNTcxdk1mUEdtR0dLb1BPRWRsRzBCY0RsZTF3Wk5yQ01mYVJWdUFMOFFuQ3ZOZXg2Two1UEtUN0tOeXh5Q21IOWlaQXZjeGRjbHF5aHNncHVtTDhhM0tsb1RuSU9vSHdobUVhMWxoVCtHY01QZzEvVTl4ClVqZEY2Y0tmSFFJd2FYYkNHUTVzaFhBUU0yVU5HbStYa0ZmeTQ4VUNnWUJ3d0cxOHVVOFNmaUx3b1VVaDlqMFYKQ2dRSk9IVmFWc09pMkl4TlBBc2lHdVpRNG94Mnc0Y2xjaDZXbXdHeGt0NmlxcFNQNzJuYjFrS1Q4KzRZRTFZVgpJeUQxd2xNL0lNZWRva050a2g2KzJYZC9uTTRnSnNqM2cvMU9QdkNFTzVCeENHSVd3VmZSNEFWRk9saTl0VWFWCk04ZjBienJTNWRKUFhGZEt3VlY3Z3dLQmdBak5NV1lnSGRyRzBiVjcyYm93ZTFuL2p1b1ZzbmpGOVBLU09BOGMKUWZvNHZ5N2syZkVKalBGNjhDUGg1RTNjWFlmMmNlVlgrVFh5YlFuSDZwUGVKQmlHMGJKMDVDTlkzcGVGcTlkZQpDZTBuNnh0c0d5VmlzemxjQ1lZMUlyN0FRR3pFb1N2bW5PN0Z1ckNhZmZTQkJJblBIR3JEbWpxKzNiMGx3Y1pVCm5DWk5Bb0dCQUpJYmZKSVNkbFlBalRwYnRVbVd0K2tlemNlWVdsUkxENHNOcWx2SWQ0U2JUbmEwR2FRSWRVSHIKWWU5RjhpTVgweWh1WWhzUXoraHlkZDhCVW44TXgwRVN6c2g3d0tpak5jenJpV3JUODlmYmlxVUpocFZvWUhWNwpQVExTZ1pSUDFyUU9UekpGVEkzdjMyNkg1dzFlZzJ0NUFOcnRWenFYTng4N2FOTXQwWGNQCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
              }
            },
            "tserver": {
              "enableLoadBalancer": true,
              "gflags": [
                {
                  "key": "default_memory_limit_to_ram_ratio",
                  "value": "0.85"
                },
                {
                  "key": "use_node_to_node_encryption",
                  "value": "true"
                }
              ],
              "podManagementPolicy": "Parallel",
              "replicas": 3,
              "resources": {
                "limits": {
                  "cpu": 2,
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": 1,
                  "memory": "2Gi"
                }
              },
              "storage": {
                "count": 1,
                "size": "50Gi",
                "storageClass": "standard"
              },
              "tserverRPCPort": 9100,
              "tserverUIPort": 9000,
              "ycqlPort": 9042,
              "yedisPort": 6379,
              "ysqlPort": 5433
            }
          }
        },
        {
          "kind": "YBCluster",
          "metadata": {
            "name": "yb-test-1",
            "namespace": "yb-demo"
          },
          "spec": {
            "master": {
              "replicas": 3,
              "storage": {
                "size": "1Gi"
              }
            },
            "replicationFactor": 3,
            "tserver": {
              "replicas": 3,
              "storage": {
                "count": 1,
                "size": "1Gi"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/yugabytedb/yugabyte-operator-bundle@sha256:75af634b49ff92fa9cad7a20a9d6d86689624b15bed4c84889b677c288b8c036",
      "bundle_path_digest": "sha256:75af634b49ff92fa9cad7a20a9d6d86689624b15bed4c84889b677c288b8c036",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-03-09T12:04:57.303000+00:00",
      "csv_description": "\nYugabyteDB is distributed SQL database serving both scale-out RDBMS and internet-scale OLTP workloads with low query latency, \nextreme resilience against failures and global data distribution. YugabyteDB Kubernetes offering provides a\nkubernetes native custom resource viz. `ybclusters.yugabyte.com` for deploying and managing the YugabyteDB Clusters.\n\n### Installing YugabyteDB\n\nOnce you've installed the Operator, you can create YugabyteDB cluster using custom resource `ybcluster`. For assistance please refer to \n[deploy yugabyteDB cluster using CRD](https://docs.yugabyte.com/latest/deploy/kubernetes/single-zone/oss/yugabyte-operator/)\n\n### Supported parameters\n* **Image Override** - Mention YugabyteDB Docker image attributes such as repository, tag and pullPolicy under image.\n* **Replication Factor** - The desired replication factor for YugabyteDB Cluster. Default RF-3.\n* **Master Pod Count** - The desired pod count for master. Default is 3\n* **T-server Pod Count** - The desired pod count for tserver. Default is 3.\n* **Enable TLS** - Enable TLS encryption for YugabyteDB, if desired. It is disabled by default. To enable TLS communication \n                   refer to [configuring TLS](https://docs.yugabyte.com/latest/deploy/kubernetes/single-zone/oss/yugabyte-operator/#tls).\n\n\n### Getting Started\n\nHere are a few resources for getting started with YugaByte DB:\n\n* [Quick start guide](http://docs.yugabyte.com/latest/quick-start/) - install, create a local cluster and read/write from YugaByte DB.\n* [Explore core features](https://docs.yugabyte.com/latest/explore/) - automatic sharding & re-balancing, linear scalability, fault tolerance, tunable reads etc.\n* [Ecosystem integrations](https://docs.yugabyte.com/latest/develop/ecosystem-integrations/) - integrations with Apache Kafka/KSQL, Apache Spark, JanusGraph, KairosDB, Presto and more.\n* [Real world apps](https://docs.yugabyte.com/latest/develop/realworld-apps/) - sample real-world, end-to-end applications built using YugaByte DB.\n* [Architecture docs](https://docs.yugabyte.com/latest/architecture/) - to understand how YugaByte DB was designed and how it works\n\n### Help\n\nCannot find what you are looking for? Have a question? We love to hear from you - [please file a GitHub issue](https://github.com/YugaByte/yugabyte-db/issues) or talk to us live at [Slack](https://www.yugabyte.com/slack).\n",
      "csv_display_name": "Yugabyte Operator",
      "csv_metadata_description": "deploy and manage YugabyteDB clusters using kubernetes CRD ybclusters.yugabyte.com",
      "csv_name": "yugabyte-operator.v0.9.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:17:06.675000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "yugabyte-operator",
      "provided_apis": [
        {
          "group": "yugabyte.com",
          "kind": "YBCluster",
          "plural": "ybclusters",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:03c1977bb1e9392120e761fea2e6291750a49c0f0eacf5c065d59781358ff3f6",
          "image": "registry.connect.redhat.com/yugabytedb/yugabyte-operator@sha256:03c1977bb1e9392120e761fea2e6291750a49c0f0eacf5c065d59781358ff3f6",
          "name": "yugabyte-operator-03c1977bb1e9392120e761fea2e6291750a49c0f0eacf5c065d59781358ff3f6-annotation"
        },
        {
          "digest": "sha256:03c1977bb1e9392120e761fea2e6291750a49c0f0eacf5c065d59781358ff3f6",
          "image": "registry.connect.redhat.com/yugabytedb/yugabyte-operator@sha256:03c1977bb1e9392120e761fea2e6291750a49c0f0eacf5c065d59781358ff3f6",
          "name": "yugabyte-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.9.0",
      "version_original": "0.9.0"
    },
    {
      "_id": "6047646adbb14c0b8248bb6d",
      "alm_examples": [
        {
          "kind": "YBCluster",
          "metadata": {
            "name": "example-ybcluster",
            "namespace": "yb-operator"
          },
          "spec": {
            "image": {
              "pullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/yugabytedb/yugabyte",
              "tag": "2.1.2.0"
            },
            "master": {
              "enableLoadBalancer": true,
              "gflags": [
                {
                  "key": "default_memory_limit_to_ram_ratio",
                  "value": "0.85"
                },
                {
                  "key": "use_node_to_node_encryption",
                  "value": "true"
                }
              ],
              "masterRPCPort": 7100,
              "masterUIPort": 7000,
              "podManagementPolicy": "Parallel",
              "replicas": 3,
              "resources": {
                "limits": {
                  "cpu": 2,
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": 1,
                  "memory": "2Gi"
                }
              },
              "storage": {
                "count": 1,
                "size": "50Gi",
                "storageClass": "standard"
              }
            },
            "replicationFactor": 3,
            "subresources": {
              "status": {}
            },
            "tls": {
              "enabled": true,
              "rootCA": {
                "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lVUk9vY2RNbUxZU2YwOWRkQTBPa0VWODJtTTRVd0RRWUpLb1pJaHZjTkFRRUwKQlFBd01ERVJNQThHQTFVRUNnd0lXWFZuWVdKNWRHVXhHekFaQmdOVkJBTU1Fa05CSUdadmNpQlpkV2RoWW5sMApaU0JFUWpBZUZ3MHhPVEE1TWpNd09URXhNalphRncweE9URXdNak13T1RFeE1qWmFNREF4RVRBUEJnTlZCQW9NCkNGbDFaMkZpZVhSbE1Sc3dHUVlEVlFRRERCSkRRU0JtYjNJZ1dYVm5ZV0o1ZEdVZ1JFSXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ3hMd3hMeTZjYjhZdS9laFlmU3pteWVqcEw1cjZVSnFmeApWVDF5SUJWSktzNnZPR0QzRWdhSzZaVVZkODBzOGdZU3hzbG1UREh0cnNyWXhCSVMwRXJMVFFsODZVUVd5d1lsCjkvT09FYzdGUVRoWmdsZHRDQmwxNUZSSmp4TGk0LzFJUU1xaU93TDlGM0xjQ3JobXF1bVZKWXJmVGRtNnp4YXkKY0Q3ZlNISGw5Y3phYWFGUGRRa2JZaUt0V0p2cmJ1WEx2QkhleE0rL2FhaVIwY2FBTE94RkhKRlE0N2E1cWwvVQpOcld6emJuVjFZTkRGcEJmLzY2cm95WFh5L2xGMmhWWStYampudlRNL2M0bURWRHRRcDVKVXR6UGhGZ3ZhQngyClUvL2paeFBPblc5dVU4THdFeVdzeWhPNTNWcEREN3VMSHFHYnFrZWd0OVBtTmZsT1QwMlhBZ01CQUFHakpqQWsKTUE0R0ExVWREd0VCL3dRRUF3SUM1REFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VCTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQitXS0NlS3JiYXkwaFNMdjMreUlEWEkvaEw5TEY1N3pDUzNtRU1JTEJXcUVXbUN1R25WVXNFCktSMXA0VzBPSERXbStzTWNtbm1EcUM4U1VZMHlOM2htYnVGWWViZUs5bks0R3IzQ0VtTGk2Q3dxbzJtcWZLVHkKSk9sSU5KZDFFdW1jSlVBUEtmVGNxVkdSWlpITFlHMTVsckpyNjNMaTlYbHhqajlNNEpCejJnd2dsQ3Bqa1BxMwpSazgvYnZSbHhaNVdlNVZ1RUtTckZRNForditkSS9peFpwdjQ3UHY1TTM3bHdLRlQ5amRxbW8zbE82ODNFcEljCnF6bStrclUyb2VhZUphVUFnWlRFU296VUZGb053QzUyTjR3YWlndXo0TU5pa3ZIYWtiTEpEdW9zQTRhQTBnN0sKb2s3K2UvKzlWY0hEUllSaFN5VVhkanB2SmdyVUEyeVYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                "key": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBc1M4TVM4dW5HL0dMdjNvV0gwczVzbm82UythK2xDYW44VlU5Y2lBVlNTck9yemhnCjl4SUdpdW1WRlhmTkxQSUdFc2JKWmt3eDdhN0syTVFTRXRCS3kwMEpmT2xFRnNzR0pmZnpqaEhPeFVFNFdZSlgKYlFnWmRlUlVTWThTNHVQOVNFREtvanNDL1JkeTNBcTRacXJwbFNXSzMwM1p1czhXc25BKzMwaHg1ZlhNMm1taApUM1VKRzJJaXJWaWI2MjdseTd3UjNzVFB2Mm1va2RIR2dDenNSUnlSVU9PMnVhcGYxRGExczgyNTFkV0RReGFRClgvK3VxNk1sMTh2NVJkb1ZXUGw0NDU3MHpQM09KZzFRN1VLZVNWTGN6NFJZTDJnY2RsUC80MmNUenAxdmJsUEMKOEJNbHJNb1R1ZDFhUXcrN2l4NmhtNnBIb0xmVDVqWDVUazlObHdJREFRQUJBb0lCQUJwbEd0elR1dEpEMm9Dcwp6RXpmSlBvOGtTQ3JnQ3FMMDZyMCt0RmNqQzg1TEU4WUJBSHFjb1VSSlA5c3VHa0FxUHoxRmgyaUxqSHRQeFNwCnFOT2FxZm05UVRPVmdHb3cxbnFqaEduZXAwSGxaR0taTXpMdjZQTVNENmhob3Z1ZjRTUjVXblp1ZWhTQUFNRmMKNjNtSDdvSWtkSnF0ZTBrRC9xcVlaQlZaTW5hQ053cGpsQ0dLYmZLbjlDTHpGSUxhckxiNm4zR2x6dmpRTC9nTAphd3VnNlh5WThvcTlEVjBrZkpEV0lVZFRIc1lFYXFHcGNFWkwvNWZPSlVVcTdSSzV2eWxTVmUrWFZ5OE5jZm1sCk4rQUMrcGNwVFRRR2V0SXZsZWpsT1VhUDRTU3FNckdSUVd1Zk5pSG11a1ZtWXo5bUFsN3pRQ2xyWTZEODNBOUwKQkVkMmNYa0NnWUVBMktRVmNhVDlGRFM2ZENPdHZFL2hPUDhSNVAvY21JSjFNMXhKY2hzL1IxcUdjd0RqWkZiRwp0RGFFNVNwVExidjg4d2hKb2FDbWhlbE9renFRaWIrNXNZU2tqZERVTThIUTlhWXk3aGlxT29jL3dFUlB6ZGRRCmUyelhYRHd2QWQ2VGc3OWpLV2NhOWZxcUw0azRWOVBtbHlrVjRUVDVoaHBhVkFqbi82VDZGYXNDZ1lFQTBWL1MKT0JSdzQraEIwU0JiUU1rNTcxdk1mUEdtR0dLb1BPRWRsRzBCY0RsZTF3Wk5yQ01mYVJWdUFMOFFuQ3ZOZXg2Two1UEtUN0tOeXh5Q21IOWlaQXZjeGRjbHF5aHNncHVtTDhhM0tsb1RuSU9vSHdobUVhMWxoVCtHY01QZzEvVTl4ClVqZEY2Y0tmSFFJd2FYYkNHUTVzaFhBUU0yVU5HbStYa0ZmeTQ4VUNnWUJ3d0cxOHVVOFNmaUx3b1VVaDlqMFYKQ2dRSk9IVmFWc09pMkl4TlBBc2lHdVpRNG94Mnc0Y2xjaDZXbXdHeGt0NmlxcFNQNzJuYjFrS1Q4KzRZRTFZVgpJeUQxd2xNL0lNZWRva050a2g2KzJYZC9uTTRnSnNqM2cvMU9QdkNFTzVCeENHSVd3VmZSNEFWRk9saTl0VWFWCk04ZjBienJTNWRKUFhGZEt3VlY3Z3dLQmdBak5NV1lnSGRyRzBiVjcyYm93ZTFuL2p1b1ZzbmpGOVBLU09BOGMKUWZvNHZ5N2syZkVKalBGNjhDUGg1RTNjWFlmMmNlVlgrVFh5YlFuSDZwUGVKQmlHMGJKMDVDTlkzcGVGcTlkZQpDZTBuNnh0c0d5VmlzemxjQ1lZMUlyN0FRR3pFb1N2bW5PN0Z1ckNhZmZTQkJJblBIR3JEbWpxKzNiMGx3Y1pVCm5DWk5Bb0dCQUpJYmZKSVNkbFlBalRwYnRVbVd0K2tlemNlWVdsUkxENHNOcWx2SWQ0U2JUbmEwR2FRSWRVSHIKWWU5RjhpTVgweWh1WWhzUXoraHlkZDhCVW44TXgwRVN6c2g3d0tpak5jenJpV3JUODlmYmlxVUpocFZvWUhWNwpQVExTZ1pSUDFyUU9UekpGVEkzdjMyNkg1dzFlZzJ0NUFOcnRWenFYTng4N2FOTXQwWGNQCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
              }
            },
            "tserver": {
              "enableLoadBalancer": true,
              "gflags": [
                {
                  "key": "default_memory_limit_to_ram_ratio",
                  "value": "0.85"
                },
                {
                  "key": "use_node_to_node_encryption",
                  "value": "true"
                }
              ],
              "podManagementPolicy": "Parallel",
              "replicas": 3,
              "resources": {
                "limits": {
                  "cpu": 2,
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": 1,
                  "memory": "2Gi"
                }
              },
              "storage": {
                "count": 1,
                "size": "50Gi",
                "storageClass": "standard"
              },
              "tserverRPCPort": 9100,
              "tserverUIPort": 9000,
              "ycqlPort": 9042,
              "yedisPort": 6379,
              "ysqlPort": 5433
            }
          }
        },
        {
          "kind": "YBCluster",
          "metadata": {
            "name": "yb-test-1",
            "namespace": "yb-demo"
          },
          "spec": {
            "master": {
              "replicas": 3,
              "storage": {
                "size": "1Gi"
              }
            },
            "replicationFactor": 3,
            "tserver": {
              "replicas": 3,
              "storage": {
                "count": 1,
                "size": "1Gi"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/yugabytedb/yugabyte-operator-bundle@sha256:75af634b49ff92fa9cad7a20a9d6d86689624b15bed4c84889b677c288b8c036",
      "bundle_path_digest": "sha256:75af634b49ff92fa9cad7a20a9d6d86689624b15bed4c84889b677c288b8c036",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2021-03-09T12:04:58.413000+00:00",
      "csv_description": "\nYugabyteDB is distributed SQL database serving both scale-out RDBMS and internet-scale OLTP workloads with low query latency, \nextreme resilience against failures and global data distribution. YugabyteDB Kubernetes offering provides a\nkubernetes native custom resource viz. `ybclusters.yugabyte.com` for deploying and managing the YugabyteDB Clusters.\n\n### Installing YugabyteDB\n\nOnce you've installed the Operator, you can create YugabyteDB cluster using custom resource `ybcluster`. For assistance please refer to \n[deploy yugabyteDB cluster using CRD](https://docs.yugabyte.com/latest/deploy/kubernetes/single-zone/oss/yugabyte-operator/)\n\n### Supported parameters\n* **Image Override** - Mention YugabyteDB Docker image attributes such as repository, tag and pullPolicy under image.\n* **Replication Factor** - The desired replication factor for YugabyteDB Cluster. Default RF-3.\n* **Master Pod Count** - The desired pod count for master. Default is 3\n* **T-server Pod Count** - The desired pod count for tserver. Default is 3.\n* **Enable TLS** - Enable TLS encryption for YugabyteDB, if desired. It is disabled by default. To enable TLS communication \n                   refer to [configuring TLS](https://docs.yugabyte.com/latest/deploy/kubernetes/single-zone/oss/yugabyte-operator/#tls).\n\n\n### Getting Started\n\nHere are a few resources for getting started with YugaByte DB:\n\n* [Quick start guide](http://docs.yugabyte.com/latest/quick-start/) - install, create a local cluster and read/write from YugaByte DB.\n* [Explore core features](https://docs.yugabyte.com/latest/explore/) - automatic sharding & re-balancing, linear scalability, fault tolerance, tunable reads etc.\n* [Ecosystem integrations](https://docs.yugabyte.com/latest/develop/ecosystem-integrations/) - integrations with Apache Kafka/KSQL, Apache Spark, JanusGraph, KairosDB, Presto and more.\n* [Real world apps](https://docs.yugabyte.com/latest/develop/realworld-apps/) - sample real-world, end-to-end applications built using YugaByte DB.\n* [Architecture docs](https://docs.yugabyte.com/latest/architecture/) - to understand how YugaByte DB was designed and how it works\n\n### Help\n\nCannot find what you are looking for? Have a question? We love to hear from you - [please file a GitHub issue](https://github.com/YugaByte/yugabyte-db/issues) or talk to us live at [Slack](https://www.yugabyte.com/slack).\n",
      "csv_display_name": "Yugabyte Operator",
      "csv_metadata_description": "deploy and manage YugabyteDB clusters using kubernetes CRD ybclusters.yugabyte.com",
      "csv_name": "yugabyte-operator.v0.9.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:21:17.076000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "yugabyte-operator",
      "provided_apis": [
        {
          "group": "yugabyte.com",
          "kind": "YBCluster",
          "plural": "ybclusters",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:03c1977bb1e9392120e761fea2e6291750a49c0f0eacf5c065d59781358ff3f6",
          "image": "registry.connect.redhat.com/yugabytedb/yugabyte-operator@sha256:03c1977bb1e9392120e761fea2e6291750a49c0f0eacf5c065d59781358ff3f6",
          "name": "yugabyte-operator-03c1977bb1e9392120e761fea2e6291750a49c0f0eacf5c065d59781358ff3f6-annotation"
        },
        {
          "digest": "sha256:03c1977bb1e9392120e761fea2e6291750a49c0f0eacf5c065d59781358ff3f6",
          "image": "registry.connect.redhat.com/yugabytedb/yugabyte-operator@sha256:03c1977bb1e9392120e761fea2e6291750a49c0f0eacf5c065d59781358ff3f6",
          "name": "yugabyte-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.9.0",
      "version_original": "0.9.0"
    },
    {
      "_id": "6047646d122bd89307e0111c",
      "alm_examples": [
        {
          "kind": "ZabbixAgent",
          "metadata": {
            "labels": {
              "app": "agent",
              "vendor": "zabbix"
            },
            "name": "zabbix-agent"
          },
          "spec": {
            "active_allow": true,
            "activeservers": "",
            "allow_key": "",
            "allow_privileged": true,
            "buffer#": 100,
            "buffer_send": 5,
            "debug_level": 3,
            "deny_key": "system.run[*]",
            "host_interface": "",
            "host_interface_item": "",
            "hostname": "",
            "hostname_item": "system.hostname",
            "load_module": "",
            "log_remote_commands": true,
            "max_lines_per_second": 20,
            "metadata": "",
            "metadata_item": "",
            "passive_allow": true,
            "passive_servers": "",
            "refresh_active_checks": 120,
            "server_host": "zabbix-server",
            "start_agents": 3,
            "timeout": 3,
            "tls_accept": "unencrypted",
            "tls_ca_file_name": "",
            "tls_cert_file_name": "",
            "tls_cipher_all": "",
            "tls_cipher_cert_13": "",
            "tls_cipher_psk": "",
            "tls_cipherall_13": "",
            "tls_connect": "unencrypted",
            "tls_crl_file_name": "",
            "tls_key_file_name": "",
            "tls_psk_file_name": "",
            "tls_psk_identity": "",
            "tls_server_cert_issuer": "",
            "tls_server_cert_subject": "",
            "tlsciphercert": "",
            "tlscipherpsk13": "",
            "unsafe_user_parameters": false
          }
        },
        {
          "kind": "ZabbixAppliance",
          "metadata": {
            "labels": {
              "app": "appliance",
              "vendor": "zabbix"
            },
            "name": "zabbix-appliance"
          },
          "spec": {
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "server": {
              "cache#": "8M",
              "cache_update_frequency": 60,
              "db_tls_cipher": "",
              "db_tls_cipher13": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "export_file#": "",
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "history_storage_date_index": true,
              "history_storage_types": "",
              "housekeeping_frequency": 1,
              "load_module": "",
              "log_slow_queries": 0,
              "max_housekeeper_delete": 5000,
              "proxy_config_frequency": 3600,
              "proxy_data_frequency": 1,
              "start_alerters": 3,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_escalators": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_lld_processors": 2,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_proxy_pollers": 0,
              "start_timers": 1,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "stats_allowed_ip": "",
              "timeout": 4,
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "trend_cache#": "4M",
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "value_cache#": "8M",
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "web": {
              "db_double_ieee754": true,
              "deny_gui_access": false,
              "enable_web_access_log": true,
              "gui_access_ip_range": "",
              "gui_warning_msg": "Zabbix is under maintenance.",
              "history_storage_types": "",
              "max_execution_time": 300,
              "max_input_time": 300,
              "memory_limit": "128M",
              "post_max#": "16M",
              "server_name": "Kubernetes installation",
              "session_name": "zbx_sessionid",
              "sso_settings": "",
              "timezone": "Europe/Riga",
              "upload_max_filesize": "2M"
            },
            "web_enable_route": true,
            "zabbix_mysql_volumeclaim": "mysql-volume-claim",
            "zabbix_mysqlsecret": "zabbix-mysql-secrets"
          }
        },
        {
          "kind": "ZabbixFull",
          "metadata": {
            "labels": {
              "app": "server",
              "vendor": "zabbix"
            },
            "name": "zabbix-full"
          },
          "spec": {
            "history_storage_url": "",
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "server": {
              "cache#": "8M",
              "cache_update_frequency": 60,
              "db_tls_cipher": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "export_file#": "",
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "history_storage_date_index": true,
              "history_storage_types": "",
              "housekeeping_frequency": 1,
              "load_module": "",
              "log_slow_queries": 0,
              "max_housekeeper_delete": 5000,
              "proxy_config_frequency": 3600,
              "proxy_data_frequency": 1,
              "start_alerters": 3,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_escalators": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_lld_processors": 2,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_proxy_pollers": 0,
              "start_timers": 1,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "stats_allowed_ip": "",
              "timeout": 4,
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_cipher_all": "",
              "tls_cipher_cert_13": "",
              "tls_cipher_psk": "",
              "tls_cipherall_13": "",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tlsciphercert": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "trend_cache#": "4M",
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "value_cache#": "8M",
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "web": {
              "db_cipher_list": "",
              "db_double_ieee754": true,
              "db_encryption": false,
              "db_verify_host": false,
              "deny_gui_access": false,
              "enable_web_access_log": true,
              "gui_access_ip_range": "",
              "gui_warning_msg": "Zabbix is under maintenance.",
              "history_storage_types": "",
              "max_execution_time": 300,
              "max_input_time": 300,
              "memory_limit": "128M",
              "post_max#": "16M",
              "server_name": "Kubernetes installation",
              "session_name": "zbx_sessionid",
              "sso_settings": "",
              "timezone": "Europe/Riga",
              "upload_max_filesize": "2M"
            },
            "web#": 2,
            "web_enable_route": true,
            "zabbix_mysql_volumeclaim": "mysql-volume-claim",
            "zabbix_mysqlsecret": "zabbix-mysql-secrets"
          }
        },
        {
          "kind": "ZabbixProxyMysql",
          "metadata": {
            "labels": {
              "app": "proxy",
              "vendor": "zabbix"
            },
            "name": "zabbix-proxy-mysql"
          },
          "spec": {
            "db_server_port": 3306,
            "internal_db": true,
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "mysql_database": "zabbix_proxy",
            "proxy": {
              "cache#": "8M",
              "config_frequency": 3600,
              "data_sender_frequency": 1,
              "db_tls_cipher": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "enable_remote_commands": false,
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "hostname": "",
              "hostname_item": "system.hostname",
              "housekeeping_frequency": 1,
              "log_remote_commands": true,
              "log_slow_queries": 0,
              "proxy_heartbeat_frequency": 60,
              "proxy_local_buffer": 0,
              "proxy_mode": 0,
              "proxy_offline_buffer": 1,
              "server_host": "zabbix-server",
              "server_port": 10051,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "timeout": 4,
              "tls_accept": "unencrypted",
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_cipher_all": "",
              "tls_cipher_cert_13": "",
              "tls_cipher_psk": "",
              "tls_cipherall_13": "",
              "tls_connect": "unencrypted",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tls_psk_file_name": "",
              "tls_psk_identity": "",
              "tls_server_cert_issuer": "",
              "tls_server_cert_subject": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "zabbix_mysql_volumeclaim": "mysql-volume-claim",
            "zabbix_mysqlsecret": "zabbix-mysql-secrets"
          }
        },
        {
          "kind": "ZabbixProxySqlite",
          "metadata": {
            "labels": {
              "app": "proxy",
              "vendor": "zabbix"
            },
            "name": "zabbix-proxy-sqlite"
          },
          "spec": {
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "proxy": {
              "cache#": "8M",
              "config_frequency": 3600,
              "data_sender_frequency": 1,
              "debug_level": 3,
              "enable_remote_commands": false,
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "hostname": "",
              "hostname_item": "system.hostname",
              "housekeeping_frequency": 1,
              "log_remote_commands": true,
              "log_slow_queries": 0,
              "proxy_heartbeat_frequency": 60,
              "proxy_local_buffer": 0,
              "proxy_mode": 0,
              "proxy_offline_buffer": 1,
              "server_host": "zabbix-server",
              "server_port": 10051,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "timeout": 4,
              "tls_accept": "unencrypted",
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_cipher_all": "",
              "tls_cipher_cert_13": "",
              "tls_cipher_psk": "",
              "tls_cipherall_13": "",
              "tls_connect": "unencrypted",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tls_psk_file_name": "",
              "tls_psk_identity": "",
              "tls_server_cert_issuer": "",
              "tls_server_cert_subject": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "proxy#": 1
          }
        },
        {
          "kind": "ZabbixServer",
          "metadata": {
            "labels": {
              "app": "server",
              "vendor": "zabbix"
            },
            "name": "zabbix-server"
          },
          "spec": {
            "db_server_host": "mysql-server",
            "db_server_port": 3306,
            "history_storage_url": "",
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "mysql_database": "zabbix",
            "server": {
              "cache#": "8M",
              "cache_update_frequency": 60,
              "db_tls_cipher": "",
              "db_tls_cipher13": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "export_file#": "",
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "history_storage_date_index": true,
              "history_storage_types": "",
              "housekeeping_frequency": 1,
              "load_module": "",
              "log_slow_queries": 0,
              "max_housekeeper_delete": 5000,
              "proxy_config_frequency": 3600,
              "proxy_data_frequency": 1,
              "start_alerters": 3,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_escalators": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_lld_processors": 2,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_proxy_pollers": 0,
              "start_timers": 1,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "stats_allowed_ip": "",
              "timeout": 4,
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "trend_cache#": "4M",
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "value_cache#": "8M",
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "web": {
              "db_cipher_list": "",
              "db_double_ieee754": true,
              "db_encryption": false,
              "db_verify_host": false,
              "deny_gui_access": false,
              "enable_web_access_log": true,
              "gui_access_ip_range": "",
              "gui_warning_msg": "Zabbix is under maintenance.",
              "history_storage_types": "",
              "max_execution_time": 300,
              "max_input_time": 300,
              "memory_limit": "128M",
              "post_max#": "16M",
              "server_name": "Kubernetes installation",
              "session_name": "zbx_sessionid",
              "sso_settings": "",
              "timezone": "Europe/Riga",
              "upload_max_filesize": "2M"
            },
            "web#": 2,
            "web_enable_route": true,
            "zabbix_mysqlsecret": "zabbix-mysql-secrets"
          }
        },
        {
          "kind": "ZabbixAgent",
          "metadata": {
            "labels": {
              "app": "agent",
              "vendor": "zabbix"
            },
            "name": "zabbix-agent"
          },
          "spec": {
            "active_allow": true,
            "activeservers": "",
            "allow_key": "",
            "allow_privileged": true,
            "buffer#": 100,
            "buffer_send": 5,
            "debug_level": 3,
            "deny_key": "system.run[*]",
            "host_interface": "",
            "host_interface_item": "",
            "hostname": "",
            "hostname_item": "system.hostname",
            "load_module": "",
            "log_remote_commands": true,
            "max_lines_per_second": 20,
            "metadata": "",
            "metadata_item": "",
            "passive_allow": true,
            "passive_servers": "",
            "refresh_active_checks": 120,
            "server_host": "zabbix-server",
            "start_agents": 3,
            "timeout": 3,
            "tls_accept": "unencrypted",
            "tls_ca_file_name": "",
            "tls_cert_file_name": "",
            "tls_cipher_all": "",
            "tls_cipher_cert_13": "",
            "tls_cipher_psk": "",
            "tls_cipherall_13": "",
            "tls_connect": "unencrypted",
            "tls_crl_file_name": "",
            "tls_key_file_name": "",
            "tls_psk_file_name": "",
            "tls_psk_identity": "",
            "tls_server_cert_issuer": "",
            "tls_server_cert_subject": "",
            "tlsciphercert": "",
            "tlscipherpsk13": "",
            "unsafe_user_parameters": false
          }
        },
        {
          "kind": "ZabbixServer",
          "metadata": {
            "labels": {
              "app": "server",
              "vendor": "zabbix"
            },
            "name": "zabbix-server"
          },
          "spec": {
            "db_server_host": "mysql-server",
            "db_server_port": 3306,
            "history_storage_url": "",
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "mysql_database": "zabbix",
            "server": {
              "cache#": "8M",
              "cache_update_frequency": 60,
              "db_tls_cipher": "",
              "db_tls_cipher13": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "export_file#": "",
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "history_storage_date_index": true,
              "history_storage_types": "",
              "housekeeping_frequency": 1,
              "load_module": "",
              "log_slow_queries": 0,
              "max_housekeeper_delete": 5000,
              "proxy_config_frequency": 3600,
              "proxy_data_frequency": 1,
              "start_alerters": 3,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_escalators": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_lld_processors": 2,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_proxy_pollers": 0,
              "start_timers": 1,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "stats_allowed_ip": "",
              "timeout": 4,
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "trend_cache#": "4M",
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "value_cache#": "8M",
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "web": {
              "db_cipher_list": "",
              "db_double_ieee754": true,
              "db_encryption": false,
              "db_verify_host": false,
              "deny_gui_access": false,
              "enable_web_access_log": true,
              "gui_access_ip_range": "",
              "gui_warning_msg": "Zabbix is under maintenance.",
              "history_storage_types": "",
              "max_execution_time": 300,
              "max_input_time": 300,
              "memory_limit": "128M",
              "post_max#": "16M",
              "server_name": "Kubernetes installation",
              "session_name": "zbx_sessionid",
              "sso_settings": "",
              "timezone": "Europe/Riga",
              "upload_max_filesize": "2M"
            },
            "web#": 2,
            "web_enable_route": true,
            "zabbix_mysqlsecret": "mysql-secrets"
          }
        },
        {
          "kind": "ZabbixProxySqlite",
          "metadata": {
            "labels": {
              "app": "proxy",
              "vendor": "zabbix"
            },
            "name": "zabbix-proxy-sqlite"
          },
          "spec": {
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "proxy": {
              "cache#": "8M",
              "config_frequency": 3600,
              "data_sender_frequency": 1,
              "debug_level": 3,
              "enable_remote_commands": false,
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "hostname": "",
              "hostname_item": "system.hostname",
              "housekeeping_frequency": 1,
              "log_remote_commands": true,
              "log_slow_queries": 0,
              "proxy_heartbeat_frequency": 60,
              "proxy_local_buffer": 0,
              "proxy_mode": 0,
              "proxy_offline_buffer": 1,
              "server_host": "zabbix-server",
              "server_port": 10051,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "timeout": 4,
              "tls_accept": "unencrypted",
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_cipher_all": "",
              "tls_cipher_cert_13": "",
              "tls_cipher_psk": "",
              "tls_cipherall_13": "",
              "tls_connect": "unencrypted",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tls_psk_file_name": "",
              "tls_psk_identity": "",
              "tls_server_cert_issuer": "",
              "tls_server_cert_subject": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "proxy#": 1
          }
        },
        {
          "kind": "ZabbixProxyMysql",
          "metadata": {
            "labels": {
              "app": "proxy",
              "vendor": "zabbix"
            },
            "name": "zabbix-proxy-mysql"
          },
          "spec": {
            "db_server_port": 3306,
            "internal_db": true,
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "mysql_database": "zabbix_proxy",
            "proxy": {
              "cache#": "8M",
              "config_frequency": 3600,
              "data_sender_frequency": 1,
              "db_tls_cipher": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "enable_remote_commands": false,
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "hostname": "",
              "hostname_item": "system.hostname",
              "housekeeping_frequency": 1,
              "log_remote_commands": true,
              "log_slow_queries": 0,
              "proxy_heartbeat_frequency": 60,
              "proxy_local_buffer": 0,
              "proxy_mode": 0,
              "proxy_offline_buffer": 1,
              "server_host": "zabbix-server",
              "server_port": 10051,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "timeout": 4,
              "tls_accept": "unencrypted",
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_cipher_all": "",
              "tls_cipher_cert_13": "",
              "tls_cipher_psk": "",
              "tls_cipherall_13": "",
              "tls_connect": "unencrypted",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tls_psk_file_name": "",
              "tls_psk_identity": "",
              "tls_server_cert_issuer": "",
              "tls_server_cert_subject": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "zabbix_mysql_volumeclaim": "mysql-volume-claim",
            "zabbix_mysqlsecret": "zabbix-mysql-secrets"
          }
        },
        {
          "kind": "ZabbixFull",
          "metadata": {
            "labels": {
              "app": "server",
              "vendor": "zabbix"
            },
            "name": "zabbix-full"
          },
          "spec": {
            "history_storage_url": "",
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "server": {
              "cache#": "8M",
              "cache_update_frequency": 60,
              "db_tls_cipher": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "export_file#": "",
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "history_storage_date_index": true,
              "history_storage_types": "",
              "housekeeping_frequency": 1,
              "load_module": "",
              "log_slow_queries": 0,
              "max_housekeeper_delete": 5000,
              "proxy_config_frequency": 3600,
              "proxy_data_frequency": 1,
              "start_alerters": 3,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_escalators": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_lld_processors": 2,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_proxy_pollers": 0,
              "start_timers": 1,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "stats_allowed_ip": "",
              "timeout": 4,
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_cipher_all": "",
              "tls_cipher_cert_13": "",
              "tls_cipher_psk": "",
              "tls_cipherall_13": "",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tlsciphercert": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "trend_cache#": "4M",
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "value_cache#": "8M",
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "web": {
              "db_cipher_list": "",
              "db_double_ieee754": true,
              "db_encryption": false,
              "db_verify_host": false,
              "deny_gui_access": false,
              "enable_web_access_log": true,
              "gui_access_ip_range": "",
              "gui_warning_msg": "Zabbix is under maintenance.",
              "history_storage_types": "",
              "max_execution_time": 300,
              "max_input_time": 300,
              "memory_limit": "128M",
              "post_max#": "16M",
              "server_name": "Kubernetes installation",
              "session_name": "zbx_sessionid",
              "sso_settings": "",
              "timezone": "Europe/Riga",
              "upload_max_filesize": "2M"
            },
            "web#": 2,
            "web_enable_route": true,
            "zabbix_mysql_volumeclaim": "mysql-volume-claim",
            "zabbix_mysqlsecret": "mysql-secrets"
          }
        },
        {
          "kind": "ZabbixAppliance",
          "metadata": {
            "labels": {
              "app": "appliance",
              "vendor": "zabbix"
            },
            "name": "zabbix-appliance"
          },
          "spec": {
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "server": {
              "cache#": "8M",
              "cache_update_frequency": 60,
              "db_tls_cipher": "",
              "db_tls_cipher13": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "export_file#": "",
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "history_storage_date_index": true,
              "history_storage_types": "",
              "housekeeping_frequency": 1,
              "load_module": "",
              "log_slow_queries": 0,
              "max_housekeeper_delete": 5000,
              "proxy_config_frequency": 3600,
              "proxy_data_frequency": 1,
              "start_alerters": 3,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_escalators": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_lld_processors": 2,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_proxy_pollers": 0,
              "start_timers": 1,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "stats_allowed_ip": "",
              "timeout": 4,
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "trend_cache#": "4M",
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "value_cache#": "8M",
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "web": {
              "db_double_ieee754": true,
              "deny_gui_access": false,
              "enable_web_access_log": true,
              "gui_access_ip_range": "",
              "gui_warning_msg": "Zabbix is under maintenance.",
              "history_storage_types": "",
              "max_execution_time": 300,
              "max_input_time": 300,
              "memory_limit": "128M",
              "post_max#": "16M",
              "server_name": "Kubernetes installation",
              "session_name": "zbx_sessionid",
              "sso_settings": "",
              "timezone": "Europe/Riga",
              "upload_max_filesize": "2M"
            },
            "web_enable_route": true,
            "zabbix_mysql_volumeclaim": "mysql-volume-claim",
            "zabbix_mysqlsecret": "mysql-secrets"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/zabbix/zabbixoperator-certified-bundle@sha256:236d7cc772634f20540dc153f9a7fc66357d7d4852962c5c7b5daff61c99e5c8",
      "bundle_path_digest": "sha256:236d7cc772634f20540dc153f9a7fc66357d7d4852962c5c7b5daff61c99e5c8",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "lts",
      "creation_date": "2021-03-09T12:05:01.147000+00:00",
      "csv_description": "## About this Operator\n\nZabbix helps you to real-time monitoring of millions of metrics collected from tens of thousands of servers, virtual machines and network devices.\nThe Zabbix Operator allows users to easily deploy, manage, and maintain Zabbix deployments on OpenShift. By installing this integration you will be able to deploy Zabbix server / proxies and other components with a single command.\n## Supported Features\n* **Zabbix Server** - Simple Zabbix installation with included Zabbix server, Zabbix web-interface and Zabbix Java Gateway with MySQL database support. The feature does not provide MySQL service and requires an external MySQL database. \n* **Zabbix Server (Full)** - Zabbix installation with included Zabbix server, Zabbix web-interface, Zabbix Java Gateway and MySQL server instance.\n* **Zabbix proxy (SQLite3)** - Very simple way to gain power of Zabbix proxy. The feature has  SQLite3 support for Zabbix proxies and allow to specify amount of proxies. \n* **Zabbix proxy (MySQL)** - Another option of Zabbix proxy. The option support and deliver MySQL database.\n* **Zabbix agent** - Zabbix agent can be deployed on each available node for stability and performance monitoring on remote nodes. It allows to gather metrics with full automation!\n* **Zabbix Appliance** - Zabbix appliance very simple way to test and check Zabbix features. The option provides all core components in one solution. It includes Zabbix server, Zabbix Java Gateway, Zabbix web-interface and MySQL server in deployment. It is very useful for testing Zabbix features!\n## Prerequisites\nAll deployment options are require additional information during deployment. Please, check the following instructions and provide required configuration:\n* **Zabbix Server** - MySQL database host information and MySQL database credentials in specially formatted *Secret*. Additionally it is possible to specify SSL certificates for HTTPS support in *Secret*.\n* **Zabbix Server (Full)** - MySQL database credentials in specially formatted *Secret*. MySQL database volume name information. Additionally it is possible to specify SSL certificates for HTTPS support in *Secret*.\n* **Zabbix proxy (SQLite3)** - Zabbix server host information only.\n* **Zabbix proxy (MySQL)** - MySQL database credentials in specially formatted *Secrets* and Zabbix server host information.\n* **Zabbix agent** - Zabbix server host information only for outgoing and incoming connections. Zabbix agent uses \"privileged\" mode to monitor node resources! For example, running processes.\n* **Zabbix Appliance** - MySQL database credentials in specially formatted *Secret*. MySQL database volume name information. Additionally it is possible to specify SSL certificates for HTTPS support in *Secret*.\n### MySQL credentials\n```\nkind: Secret\napiVersion: v1\nmetadata:\n  name: zabbix-full-secrets\ndata:\n  mysql_root_password: emFiYml4X3N1cGVyX3Jvb3Q= [1]\n  mysql_zabbix_password: emFiYml4X3VzZXJfcGFzc3dvcmQ= [2]\n  mysql_zabbix_username: emFiYml4 [3]\ntype: Opaque\n```\nUsing MySQL root password (*mysqlrootpassword* [1]) Zabbix server / proxy will try to create MySQL database schema with grant permissions to *mysqlzabbixusername* [2] and *mysqlzabbixpassword* [3].\n### SSL certificates for HTTPS\n```\nkind: Secret\napiVersion: v1\nmetadata:\n  name: zabbix-web-sslsecret\ndata:\n  ssl.crt: >-\n   < ssl.crt data>\n  ssl.key: >-\n\t < ssl.key data >\n  dhparam.pem: >-\n   <  dhparam.pem data >\n```\nFiles *ssl.crt*, *ssl.key* and *dhparam.perm* are required for Zabbix web-interface for SSL support.\n",
      "csv_display_name": "Zabbix Operator",
      "csv_metadata_description": "Zabbix operator with multiple deployment variants and different components",
      "csv_name": "zabbix-operator-certified.v0.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:12:16.418000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "zabbix-operator-certified",
      "provided_apis": [
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixProxyMysql",
          "plural": "zabbixproxymysqls",
          "version": "v1alpha1"
        },
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixProxySqlite",
          "plural": "zabbixproxysqlites",
          "version": "v1alpha1"
        },
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixServer",
          "plural": "zabbixservers",
          "version": "v1alpha1"
        },
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixAgent",
          "plural": "zabbixagents",
          "version": "v1alpha1"
        },
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixAppliance",
          "plural": "zabbixappliances",
          "version": "v1alpha1"
        },
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixFull",
          "plural": "zabbixfulls",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:c2dee633a667191d3272bf1652412ac1077455f18b90168ddcaa2ac8882f0c66",
          "image": "registry.connect.redhat.com/zabbix/zabbixoperator-certified@sha256:c2dee633a667191d3272bf1652412ac1077455f18b90168ddcaa2ac8882f0c66",
          "name": "zabbixoperator-certified-c2dee633a667191d3272bf1652412ac1077455f18b90168ddcaa2ac8882f0c66-annotation"
        },
        {
          "digest": "sha256:c2dee633a667191d3272bf1652412ac1077455f18b90168ddcaa2ac8882f0c66",
          "image": "registry.connect.redhat.com/zabbix/zabbixoperator-certified@sha256:c2dee633a667191d3272bf1652412ac1077455f18b90168ddcaa2ac8882f0c66",
          "name": "ansible"
        },
        {
          "digest": "sha256:c2dee633a667191d3272bf1652412ac1077455f18b90168ddcaa2ac8882f0c66",
          "image": "registry.connect.redhat.com/zabbix/zabbixoperator-certified@sha256:c2dee633a667191d3272bf1652412ac1077455f18b90168ddcaa2ac8882f0c66",
          "name": "operator"
        },
        {
          "digest": "sha256:2f76e7cbece9d9366b613bcb1079b030ddbcc5e97b2f133b73bd0131f0869725",
          "image": "registry.connect.redhat.com/zabbix/zabbix-server-mysql-50@sha256:2f76e7cbece9d9366b613bcb1079b030ddbcc5e97b2f133b73bd0131f0869725",
          "name": "zbx_server_mysql"
        },
        {
          "digest": "sha256:9f3ba82445ea3d9754f016e21b2ea1c99c1958da928f49aee1b18377af78d365",
          "image": "registry.connect.redhat.com/zabbix/zabbix-web-mysql-50@sha256:9f3ba82445ea3d9754f016e21b2ea1c99c1958da928f49aee1b18377af78d365",
          "name": "zbx_web_mysql"
        },
        {
          "digest": "sha256:a216de448dc10b2797a70f4fc6664c2bd611840b7b6c26f066635d48c606bf06",
          "image": "registry.connect.redhat.com/zabbix/zabbix-java-gateway-50@sha256:a216de448dc10b2797a70f4fc6664c2bd611840b7b6c26f066635d48c606bf06",
          "name": "zbx_java_gateway"
        },
        {
          "digest": "sha256:054ad28ade616642fb50fd38a48df2d00a9c0c6a57df1e367caeceb6469f6c42",
          "image": "registry.connect.redhat.com/zabbix/zabbix-proxy-mysql-50@sha256:054ad28ade616642fb50fd38a48df2d00a9c0c6a57df1e367caeceb6469f6c42",
          "name": "zbx_proxy_mysql"
        },
        {
          "digest": "sha256:713a6223a01ee57efb719d6f491ef779d74104a1bc1b8599eade8b3f4a3318ed",
          "image": "registry.connect.redhat.com/zabbix/zabbix-proxy-sqlite-50@sha256:713a6223a01ee57efb719d6f491ef779d74104a1bc1b8599eade8b3f4a3318ed",
          "name": "zbx_proxy_sqlite"
        },
        {
          "digest": "sha256:229562a27ed45319ef17397fe81cac81129c84eccd2c14f6085531a86ef9b87d",
          "image": "registry.connect.redhat.com/zabbix/zabbix-agent-50@sha256:229562a27ed45319ef17397fe81cac81129c84eccd2c14f6085531a86ef9b87d",
          "name": "zbx_agent"
        },
        {
          "digest": "sha256:7236c68c494f572edf64ced85c3a083b7eafff1c6562e95bdc50e50c37e3e3bf",
          "image": "registry.connect.redhat.com/zabbix/zabbix-appliance-50@sha256:7236c68c494f572edf64ced85c3a083b7eafff1c6562e95bdc50e50c37e3e3bf",
          "name": "zbx_appliance"
        },
        {
          "digest": "sha256:e7541d9fbcb7a71ac8a68cc4efc1806bab74023961c7d3fb562ded320df90c43",
          "image": "registry.redhat.io/rhel8/mysql-80@sha256:e7541d9fbcb7a71ac8a68cc4efc1806bab74023961c7d3fb562ded320df90c43",
          "name": "db_mysql"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.2",
      "version_original": "0.0.2"
    },
    {
      "_id": "6047646f6280a414853ec5a9",
      "alm_examples": [
        {
          "kind": "AppDefinition",
          "metadata": {
            "name": "cassandra-test"
          },
          "spec": {
            "namespace": "default",
            "selector": {
              "matchLabels": {
                "app": "cassandra"
              }
            }
          }
        },
        {
          "kind": "ApplicationClone",
          "metadata": {
            "name": "cassandra-2009-02-09--19-52-14-clone"
          },
          "spec": {
            "cloneConfiguration": "dr-us-west-clone"
          }
        },
        {
          "kind": "ApplicationSnapshot",
          "metadata": {
            "name": "cassandra-2009-02-09--19-52-14"
          },
          "spec": {
            "apiObjects": [
              "{\"apiVersion\": \"v1\",\"items\": [{\"apiVersion\": \"v1\",\"kind\": \"ConfigMap\",\"metadata\": {...",
              "{\"apiVersion\": \"v1\",\"items\": [{\"apiVersion\": \"apps\u000b1\",\"kind\": \"Deployment\",\"metadata\": {..."
            ],
            "snapshotConfiguration": "dr-us-west-snapshot",
            "vpsas": [
              {
                "name": "example-vpsa",
                "provisioner": "csi.zadara.com",
                "snapshots": [
                  {
                    "cg": "vol-0000001"
                  }
                ]
              }
            ]
          }
        },
        {
          "kind": "CloneConfiguration",
          "metadata": {
            "name": "dr-us-west-clone"
          },
          "spec": {
            "appSnapshot": {
              "name": "mysql-snap-2020-01-26"
            },
            "dryRun": false,
            "prefix": "clone-",
            "targetNamespace": "test"
          }
        },
        {
          "kind": "Invoker",
          "metadata": {
            "name": "mysql-daily-backup"
          },
          "spec": {
            "snapshotConfiguration": {
              "name": "dr-us-west-snapshot"
            }
          }
        },
        {
          "kind": "SnapshotConfiguration",
          "metadata": {
            "name": "dr-us-west-snapshot"
          },
          "spec": {
            "appDefinition": "cassandra-test",
            "policies": [
              "daily-snapshot-for-month",
              "weekly-snapshot-for-year"
            ]
          }
        },
        {
          "kind": "SnapshotPolicy",
          "metadata": {
            "name": "daily-snapshot-for-month"
          },
          "spec": {
            "keepLast": 7,
            "schedule": "0 0 * * *"
          }
        },
        {
          "kind": "Vpsa",
          "metadata": {
            "name": "example-vpsa"
          },
          "spec": {
            "csi": {
              "autoExpandSupport": true,
              "iscsiMode": "rootfs",
              "livenessProbe": {
                "httpGet": {
                  "port": 9808
                },
                "periodSeconds": 5
              },
              "provisioner": "csi.zadara.com"
            },
            "hostname": "example.vpsas.zadara.com",
            "https": true,
            "token": "EXAMPLETOKEN-1234"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/zadara/zadara-operator-bundle@sha256:a7dc6b758b849f4eab38f38b5bb0c99e951d1ed5c59143337e6c5efb5973f321",
      "bundle_path_digest": "sha256:a7dc6b758b849f4eab38f38b5bb0c99e951d1ed5c59143337e6c5efb5973f321",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-03-09T12:05:03.647000+00:00",
      "csv_description": "The Zadara Operator provides storage and data management for K8s stateful\napplications as a cloud-native service, while leveraging Zadara's enterprise\ngrade Storage-as-a-Service VPSA for provisioning and managing persistent\nstorage.\n\nZadara Operator provides:\n* Zadara CSI driver automatic installation and management\n* Automatic K8s application discovery\n* Application protection using an intelligent and efficient snapshots mechanism.\n* Custom snapshots scheduling for application protection\n* Instant application clone\n* CLI for centralized management for Zadara's K8s assets\n\n## About Zadara\n\nZadara provides companies and service providers agile, secure\nenterprise storage as a consumption-based service. Any location, any\ndata type, any protocol. Zadara offers resource isolation, exceptional\nsecurity, and management control.\n\nMore information at: [Zadara Kubernetes Operator](https://github.com/zadarastorage/zadara-operator)\n",
      "csv_display_name": "Zadara Operator",
      "csv_metadata_description": "Zadara Operator enables storage provisioning via Zadara's CSI driver and data management capabilities for K8s applications.",
      "csv_name": "zoperator.v0.3.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:21:56.361000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "zoperator",
      "provided_apis": [
        {
          "group": "zadara.com",
          "kind": "ApplicationSnapshot",
          "plural": "applicationsnapshots",
          "version": "v1alpha1"
        },
        {
          "group": "zadara.com",
          "kind": "CloneConfiguration",
          "plural": "cloneconfigurations",
          "version": "v1alpha1"
        },
        {
          "group": "zadara.com",
          "kind": "Invoker",
          "plural": "invokers",
          "version": "v1alpha1"
        },
        {
          "group": "zadara.com",
          "kind": "SnapshotConfiguration",
          "plural": "snapshotconfigurations",
          "version": "v1alpha1"
        },
        {
          "group": "zadara.com",
          "kind": "SnapshotPolicy",
          "plural": "snapshotpolicies",
          "version": "v1alpha1"
        },
        {
          "group": "zadara.com",
          "kind": "Vpsa",
          "plural": "vpsas",
          "version": "v1alpha1"
        },
        {
          "group": "zadara.com",
          "kind": "AppDefinition",
          "plural": "appdefinitions",
          "version": "v1alpha1"
        },
        {
          "group": "zadara.com",
          "kind": "ApplicationClone",
          "plural": "applicationclones",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:54c23abbf75ee85939e9b87c813258b88a376586643bae6e96235590e3c8babe",
          "image": "registry.connect.redhat.com/zadara/zadara-operator@sha256:54c23abbf75ee85939e9b87c813258b88a376586643bae6e96235590e3c8babe",
          "name": "zadara-operator-54c23abbf75ee85939e9b87c813258b88a376586643bae6e96235590e3c8babe-annotation"
        },
        {
          "digest": "sha256:54c23abbf75ee85939e9b87c813258b88a376586643bae6e96235590e3c8babe",
          "image": "registry.connect.redhat.com/zadara/zadara-operator@sha256:54c23abbf75ee85939e9b87c813258b88a376586643bae6e96235590e3c8babe",
          "name": "zoperator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.3.6",
      "version_original": "0.3.6"
    }
  ],
  "page": 21,
  "page_size": 100,
  "total": 3345
}
