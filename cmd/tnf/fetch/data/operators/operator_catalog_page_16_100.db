{
  "data": [
    {
      "_id": "5fcf5db3c838eab12d2cec79",
      "alm_examples": [
        {
          "kind": "OpenUnison",
          "metadata": {
            "name": "test-openunison"
          },
          "spec": {
            "dest_secret": "openunison",
            "enable_activemq": false,
            "hosts": [
              {
                "ingress_name": "openunison",
                "names": [
                  {
                    "env_var": "OU_HOST",
                    "name": "test.apps.mydomain.com"
                  }
                ]
              }
            ],
            "key_store": {
              "key_pairs": {
                "create_keypair_template": [
                  {
                    "name": "ou",
                    "value": "k8s"
                  },
                  {
                    "name": "o",
                    "value": "Tremolo Security"
                  },
                  {
                    "name": "l",
                    "value": "Alexandria"
                  },
                  {
                    "name": "st",
                    "value": "Virginia"
                  },
                  {
                    "name": "c",
                    "value": "US"
                  }
                ],
                "keys": [
                  {
                    "create_data": {
                      "ca_cert": true,
                      "key#": 2048,
                      "server_name": "test-openunison.openunison.svc.cluster.local",
                      "sign_by_k8s_ca": false,
                      "subject_alternative_names": []
                    },
                    "import_into_ks": "keypair",
                    "name": "unison-tls",
                    "tls_secret_name": "unison-tls-secret"
                  }
                ]
              },
              "static_keys": [
                {
                  "name": "session-unison",
                  "version": 1
                }
              ],
              "trusted_certificates": []
            },
            "non_secret_data": [
              {
                "name": "REG_CRED_USER",
                "value": "rh_user"
              },
              {
                "name": "TEST_USER_NAME",
                "value": "testuser"
              },
              {
                "name": "MYVD_CONFIG_PATH",
                "value": "WEB-INF/myvd.conf"
              },
              {
                "name": "unisonKeystorePath",
                "value": "/etc/openunison/unisonKeyStore.p12"
              }
            ],
            "openshift": {
              "builder_image": "registry.connect.redhat.com/tremolosecurity/openunison-s2i-10",
              "git": {
                "branch": "master",
                "dir": "/",
                "repo": "https://github.com/TremoloSecurity/openunison-qs-simple.git"
              }
            },
            "openunison_network_configuration": {
              "activemq_dir": "/tmp/amq",
              "allowed_client_names": [],
              "ciphers": [
                "TLS_RSA_WITH_RC4_128_SHA",
                "TLS_RSA_WITH_AES_128_CBC_SHA",
                "TLS_RSA_WITH_AES_256_CBC_SHA",
                "TLS_RSA_WITH_3DES_EDE_CBC_SHA",
                "TLS_RSA_WITH_AES_128_CBC_SHA256",
                "TLS_RSA_WITH_AES_256_CBC_SHA256"
              ],
              "client_auth": "none",
              "force_to_secure": true,
              "open_external_port": 80,
              "open_port": 8080,
              "path_to_deployment": "/usr/local/openunison/work",
              "path_to_env_file": "/etc/openunison/ou.env",
              "quartz_dir": "/tmp/quartz",
              "secure_external_port": 443,
              "secure_key_alias": "unison-tls",
              "secure_port": 8443
            },
            "replicas": 1,
            "secret_data": [
              "unisonKeystorePassword",
              "TEST_USER_PASSWORD",
              "REG_CRED_PASSWORD"
            ],
            "source_secret": "openunison-secrets-source"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tremolosecurity/openunison-operator-bundle@sha256:bf50b128eefd6fb80e48f08aa8f6e6f3f384ca3d76641e7d2f5df73b055f6fbf",
      "bundle_path_digest": "sha256:bf50b128eefd6fb80e48f08aa8f6e6f3f384ca3d76641e7d2f5df73b055f6fbf",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2020-12-08T11:04:19.110000+00:00",
      "csv_description": "The OpenUnison operator automates the deployment of OpenUnison in OpenShift and OKD.  This operator will generate all the objects needed to run OpenUnison and keep them up-to-date.  On OpenShift OpenUnison is built and deployed via a Red Hat certified Source-to-Image (s2i) builder that generates a container based on your configuration.  The default example provided by the operator is a simple login page.  Tremolo Security offers [Orchestra for OpenShift](https://www.tremolosecurity.com/openshift/) to manage authentication, authorization and project onboarding for your OpenShift clusters.  \n\n## Before You Start\n\nBefore deploying, obtain an account for Red Hat Connect to be able to access certified images. Next create a source secret with information that shouldn't be stored in the `OpenUnison` custom resource, referenced by the `source_secret` attribute.  The minimal data in this secret should be at least:\n\n* `unisonKeystorePassword` - The password to use for the generated keystore\n* `REG_CRED_PASSWORD` - Your password for Red Hat Connect\n* `TEST_USER_PASSWORD` - The password for your test user \n\n An example of creating a secret used by the example configuration is:\n  \n```\n$ mkdir secret\n$ cd secret\n$ echo 'my_secret_password'  > unisonKeystorePassword\n$ echo 'my_rh_connect_password'  > REG_CRED_PASSWORD\n$ echo 'my_test_user_password'  > TEST_USER_PASSWORD\n$ oc create secret generic openunison-secrets-source --from-file=.\n```\n  \nYou should edit the `hosts` \\ `names` \\ `name` variable from `test.apps.mydomain.com` to whatever you want the host of your OpenUnison instance to be.  The operator will generate a `Route` based on this hostname with `reencrypt` enabled.  Also, update `key_store` \\ 'key_pairs' \\ `keys` for the `server_name` to reflect the correct `Service` name for your OpenUnison.  For instance if your `OpenUnison` CR has the name `test-openunison` and is being deployed in the `openunison` namespace this value should be `test-openunison.openunison.svc.cluster.local`.\n\n## Testing\n\nOnce deployed, point your browser to the host name you created via TLS (ie https://myapp.apps.domain.com)\n\n## Updating Keys\n\nThe operator builds a keystore for OpenUnison based on secrets referenced in the `OpenUnison` custom resource.  To regenerate self signed certificates (such as the default `unison-tls` certificate), simple delete the secret and update the custom resource.  To use certificates signed by a third party CA, create the secret and reference it in your `OpenUnison` custom resource.\n\n## New Images and Configuration\n\nThe OpenUnison Operator generates an OpenShift `BuildConfig` object and `ImageStream` objects.  The certified s2i builder image is rebuilt auotmaticlly by Red Hat as new packages are made available.  To update your deployment's container, simply tag it to your image stream.  To point to a new git repository for the configuration of OpenUnison, update the CR.",
      "csv_display_name": "OpenUnison",
      "csv_metadata_description": "OpenUnison Operator provides identity management and automation services including Single Sign-On (SSO), workflow based user provisioning, self service access management, auditing and reporting",
      "csv_name": "openunison.1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:47:15.381000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "openunison-ocp-certified",
      "provided_apis": [
        {
          "group": "openunison.tremolo.io",
          "kind": "OpenUnison",
          "plural": "openunisons",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:1fc3e5d2f54c0cf3668bc070450e0f0f7c5917ca36c0934ea639dbb249ac97db",
          "image": "registry.connect.redhat.com/tremolosecurity/openunison-operator@sha256:1fc3e5d2f54c0cf3668bc070450e0f0f7c5917ca36c0934ea639dbb249ac97db",
          "name": "openunison-operator-1fc3e5d2f54c0cf3668bc070450e0f0f7c5917ca36c0934ea639dbb249ac97db-annotation"
        },
        {
          "digest": "sha256:1fc3e5d2f54c0cf3668bc070450e0f0f7c5917ca36c0934ea639dbb249ac97db",
          "image": "registry.connect.redhat.com/tremolosecurity/openunison-operator@sha256:1fc3e5d2f54c0cf3668bc070450e0f0f7c5917ca36c0934ea639dbb249ac97db",
          "name": "openunison-operator"
        },
        {
          "digest": "sha256:185b4e9fae41900ccc07ce90622c9e128c832bcfe180ae1362c7b033747dcebf",
          "image": "registry.connect.redhat.com/tremolosecurity/activemq@sha256:185b4e9fae41900ccc07ce90622c9e128c832bcfe180ae1362c7b033747dcebf",
          "name": "amq"
        },
        {
          "digest": "sha256:5a91e1de68f3ce1d2fb837e09c6090da609882c42840859650e62b218904486c",
          "image": "registry.connect.redhat.com/tremolosecurity/openunison-s2i-10@sha256:5a91e1de68f3ce1d2fb837e09c6090da609882c42840859650e62b218904486c",
          "name": "s2i"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "5fcf5db4fa8a5971b4238e43",
      "alm_examples": [
        {
          "kind": "Orca",
          "metadata": {
            "name": "orca"
          },
          "spec": {
            "components": {
              "conntrack": true,
              "dns": false,
              "istio": false,
              "kube-network-policy": true,
              "pusher": true,
              "syslog": false,
              "watcher": true
            },
            "domain": "generic-bank",
            "endpoints": {
              "guru": "guru.tufin.io:443",
              "orca": "https://securecloud.tufin.io",
              "registry": "registry.tufin.io"
            },
            "ignored_config_maps": [
              "kube-system/ingress-gce-lock",
              "istio-system/istio-ingress-controller-leader-istio"
            ],
            "images": {
              "kite": "registry.connect.redhat.com/tufin/kite",
              "monitor": "registry.connect.redhat.com/tufin/monitor"
            },
            "kube_platform": "Openshift",
            "namespace": "tufin-system",
            "project": "openshift4"
          }
        },
        {
          "kind": "Policy",
          "metadata": {
            "name": "orca",
            "namespace": "placeholder"
          },
          "spec": {
            "mode": "learning",
            "networkPolicyAllowAll": true,
            "rules": []
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tufin/orca-operator-bundle@sha256:3ea67ab24efcb9b693d57ba2624de6c9dd5745c788d669dff0562c4b283d447b",
      "bundle_path_digest": "sha256:3ea67ab24efcb9b693d57ba2624de6c9dd5745c788d669dff0562c4b283d447b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2020-12-08T11:04:20.194000+00:00",
      "csv_description": "Tufin SecureCloud is a cloud-based security monitoring and enforcement platform for Kubernetes clusters, containers and microservices.\nThe SecureCloud Operator installs SecureCloud resources into your cluster. These work with the SecureCloud cloud application to give the following functionality:\n* Monitor the cluster configuration: namespaces, containers, pods, services, network policies etc.\n* Learn and visualize the cluster connectivity\n* Build a connectivity policy (whitelist)\n* Generate audit reports\n* Alert on unauthorized connections\n* Enforce the connectivity policy in the cluster and on enterprise firewalls surrounding the cluster\n* Integrate into the CI/CD pipeline to learn and update the policy continuously\n* Scan images for vulnerabilities\n## Deploying the agent\n* Sign up to SecureCloud [here] (https://www.tufin.com/tufin-orchestration-suite/securecloud)\n* You will be sent an email containing your deployment parameters\n* Complete the deployment following the instructions for generating the agent's secret [here] (https://github.com/Tufin/orca-operator/blob/master/docs/install_securecloud_operator.md)",
      "csv_display_name": "Tufin SecureCloud Operator",
      "csv_metadata_description": "Installs the SecureCloud Agent on the cluster. SecureCloud is a cloud-based security monitoring and enforcement platform for Kubernetes.",
      "csv_name": "orca-operator.v1.0.197",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:46:35.161000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "orca",
      "provided_apis": [
        {
          "group": "tufin.io",
          "kind": "Orca",
          "plural": "orcas",
          "version": "v1alpha1"
        },
        {
          "group": "networking.tufin.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:dfe69f95b629f1380879eee8e09dc1d51ebecf2a9cae18b254a3da6fd0f2951f",
          "image": "registry.connect.redhat.com/tufin/orca-operator@sha256:dfe69f95b629f1380879eee8e09dc1d51ebecf2a9cae18b254a3da6fd0f2951f",
          "name": "orca-operator-dfe69f95b629f1380879eee8e09dc1d51ebecf2a9cae18b254a3da6fd0f2951f-annotation"
        },
        {
          "digest": "sha256:dfe69f95b629f1380879eee8e09dc1d51ebecf2a9cae18b254a3da6fd0f2951f",
          "image": "registry.connect.redhat.com/tufin/orca-operator@sha256:dfe69f95b629f1380879eee8e09dc1d51ebecf2a9cae18b254a3da6fd0f2951f",
          "name": "orca-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.197",
      "version_original": "1.0.197"
    },
    {
      "_id": "5fcf5db68c8643c889cb6f12",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/perceptilabs/perceptilabs-operator-bundle@sha256:30aed432c70f6bd3da4e6365e32da1877affa4b56458c17549b119de17eaa932",
      "bundle_path_digest": "sha256:30aed432c70f6bd3da4e6365e32da1877affa4b56458c17549b119de17eaa932",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2020-12-08T11:04:22.580000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "perceptilabs-operator.v1.0.20",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:09:29.397000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "perceptilabs-operator-package",
      "provided_apis": [
        {
          "group": "perceptilabs.com",
          "kind": "PerceptiLabs",
          "plural": "perceptilabs",
          "version": "v1"
        },
        {
          "group": "perceptilabs.com",
          "kind": "PerceptiLabs",
          "plural": "perceptilabs",
          "version": "v1alpha1"
        }
      ],
      "related_images": [],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.20",
      "version_original": "1.0.20"
    },
    {
      "_id": "5fcf5dba6667346792627cd4",
      "alm_examples": [
        {
          "kind": "PortshiftInstaller",
          "metadata": {
            "name": "example-portshiftinstaller"
          },
          "spec": {
            "managementUrl": "console.portshift.io",
            "portshiftClusterId": "CLUSTER_ID"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portshift/operator-bundle@sha256:315706e1ed51c3543b44c0524ee717b36324d128d8dafac2388adf94107c4c48",
      "bundle_path_digest": "sha256:315706e1ed51c3543b44c0524ee717b36324d128d8dafac2388adf94107c4c48",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2020-12-08T11:04:26.228000+00:00",
      "csv_description": "### Contents\n * About\n * Requirements\n * Documentation\n * Issues and feedback\n\n### About\nThe portshift-operator is a controller that runs within a Kubernetes or Openshift cluster that provides a means to deploy and manage Portshift's runtime controller, which is a single pod (agentless admission controller) that provide comperhensive runtime security.\n\n## Use the portshift-operator to:\n\n * Deploy Portshfit controler on Kubernetes or Openshift cluster\n * Automate the registration/authentication process prior to the deployment.\n\n## Deployment Requirements\nThe Operator deploys on Kubernetes and Openshift clusters.\n\n * Kubernetes: 1.15 +\n * Openshift: 4.0 +\n\n## Documentation\nThe following documentation is provided:\n\n * [Installation](http://portshift.readme.io/)\n\n## Issues and feedback\nIf you encounter any problems or would like to give us feedback on deployments, we encourage you to raise issues here on GitHub.\n",
      "csv_display_name": "Portshift Operator",
      "csv_metadata_description": "The operator will deploy portshift agent on the cluster",
      "csv_name": "portshift-operator.v0.1.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T15:04:55.950000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "portshift-controller-operator",
      "provided_apis": [
        {
          "group": "portshift.io",
          "kind": "PortshiftInstaller",
          "plural": "portshiftinstallers",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:7676180f5fcd495ed9d3bf232e5ffc426767c7f8e9914637a3505da84ddcfc4e",
          "image": "registry.connect.redhat.com/portshift/operator@sha256:7676180f5fcd495ed9d3bf232e5ffc426767c7f8e9914637a3505da84ddcfc4e",
          "name": "operator-7676180f5fcd495ed9d3bf232e5ffc426767c7f8e9914637a3505da84ddcfc4e-annotation"
        },
        {
          "digest": "sha256:7676180f5fcd495ed9d3bf232e5ffc426767c7f8e9914637a3505da84ddcfc4e",
          "image": "registry.connect.redhat.com/portshift/operator@sha256:7676180f5fcd495ed9d3bf232e5ffc426767c7f8e9914637a3505da84ddcfc4e",
          "name": "portshift-operator"
        },
        {
          "digest": "sha256:f52b3097d049ac86920bd6cdd4dac3def7411dcd1757438b92f0d7d36fa4852e",
          "image": "registry.connect.redhat.com/portshift/portshift-k8s-agent@sha256:f52b3097d049ac86920bd6cdd4dac3def7411dcd1757438b92f0d7d36fa4852e",
          "name": "agent"
        },
        {
          "digest": "sha256:19a49c31102b8f4afa2ad8980d3037c78167da089f4c62023da059bbf2c77c87",
          "image": "registry.connect.redhat.com/portshift/k8s-upgrader@sha256:19a49c31102b8f4afa2ad8980d3037c78167da089f4c62023da059bbf2c77c87",
          "name": "agent_upgrader"
        },
        {
          "digest": "sha256:5569481578b0049f2bdc10158c50e8c76947d0b053ed4ed9add6838c52f5ddb7",
          "image": "registry.connect.redhat.com/portshift/gopassivedns@sha256:5569481578b0049f2bdc10158c50e8c76947d0b053ed4ed9add6838c52f5ddb7",
          "name": "agent_passive_dns_detector"
        },
        {
          "digest": "sha256:3c1567790f045dd646f65cdcd3287d5ed8a01ca3212db8f48bd5586675261e74",
          "image": "registry.connect.redhat.com/portshift/clair@sha256:3c1567790f045dd646f65cdcd3287d5ed8a01ca3212db8f48bd5586675261e74",
          "name": "clair"
        },
        {
          "digest": "sha256:b27d47eb7a66968d34dc8d8e9374b74cec1bcb20345926c3ef56b1c1e46d5f15",
          "image": "registry.connect.redhat.com/portshift/clair-db@sha256:b27d47eb7a66968d34dc8d8e9374b74cec1bcb20345926c3ef56b1c1e46d5f15",
          "name": "clair_db"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.1.6",
      "version_original": "0.1.6"
    },
    {
      "_id": "5fcf5dbfc838eab12d2cec7d",
      "alm_examples": [
        {
          "kind": "Rapidbiz",
          "metadata": {
            "labels": {
              "app.kubernetes.io/component": "server",
              "app.kubernetes.io/instance": "rapidbiz-operator",
              "app.kubernetes.io/managed-by": "ansible",
              "app.kubernetes.io/name": "rapidbiz",
              "name": "rapidbiz-operator"
            },
            "name": "example-rapidbiz"
          },
          "spec": {
            "adminpassword": "adminpwd",
            "adminuser": "admin@unknown.com",
            "company": "",
            "databasehost": "",
            "databasename": "",
            "databasepassword": "",
            "databaseport": "3306",
            "databasetype": "MySQL",
            "databaseuser": "",
            "pullpolicy": "IfNotPresent",
            "pvc": true,
            "replicas": 1,
            "resourcerequirement": {
              "limits": {
                "cpu": "8",
                "memory": "6400Mi"
              },
              "requests": {
                "cpu": "1000m",
                "memory": "1000Mi"
              }
            },
            "scalepodcpu": 75,
            "scalepodmax": 10,
            "scalepodmin": 1,
            "scalestate": false,
            "serverlicense": "",
            "serviceroute": true
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/vacava/rapidbiz-operator-bundle@sha256:57e0e6c51ed2b9ebf5347eee1fdd3ebff795cf8cf51f83e43cad4b02ea3872ad",
      "bundle_path_digest": "sha256:57e0e6c51ed2b9ebf5347eee1fdd3ebff795cf8cf51f83e43cad4b02ea3872ad",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "alpha",
      "creation_date": "2020-12-08T11:04:31.637000+00:00",
      "csv_description": "RapidBIZ Ansible Operator OLM is designed to work on Open Shift version 4.2 or greater with Kuberutes version 1.14 or greater.\n\nRapidBIZ is a simple to use, integrated cloud development, and delivery environment that enables significant productivity and cost advantages - leveraging Docker Images provides enterprise level deployment management.\n\nRequires a database either external to the cluster or one installed via a database operator or docker image.\n\nSee our website [documention](https://www.vacava.com/rapidbiz/deploy) for more detailed information.",
      "csv_display_name": "RapidBIZ Operator",
      "csv_metadata_description": "RapidBIZ is a simple to use, integrated cloud development and delivery environment that enables significant productivity advantages.",
      "csv_name": "rapidbiz-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T15:02:39.379000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "rapidbiz-operator-certified",
      "provided_apis": [
        {
          "group": "api.rapidbiz.com",
          "kind": "Rapidbiz",
          "plural": "rapidbizs",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:0a297bf1be48f3587577ca471587601eda7cda37fd20e834aad235ab99168d1a",
          "image": "registry.connect.redhat.com/vacava/rapidbiz-operator@sha256:0a297bf1be48f3587577ca471587601eda7cda37fd20e834aad235ab99168d1a",
          "name": "rapidbiz-operator-0a297bf1be48f3587577ca471587601eda7cda37fd20e834aad235ab99168d1a-annotation"
        },
        {
          "digest": "sha256:0a297bf1be48f3587577ca471587601eda7cda37fd20e834aad235ab99168d1a",
          "image": "registry.connect.redhat.com/vacava/rapidbiz-operator@sha256:0a297bf1be48f3587577ca471587601eda7cda37fd20e834aad235ab99168d1a",
          "name": "ansible"
        },
        {
          "digest": "sha256:0a297bf1be48f3587577ca471587601eda7cda37fd20e834aad235ab99168d1a",
          "image": "registry.connect.redhat.com/vacava/rapidbiz-operator@sha256:0a297bf1be48f3587577ca471587601eda7cda37fd20e834aad235ab99168d1a",
          "name": "operator"
        },
        {
          "digest": "sha256:af1fbbb2e68bd736aee9b213ec4cf299dc5fd0ad228d35bee8e97e9926e4e905",
          "image": "registry.connect.redhat.com/vacava/rapidbiz@sha256:af1fbbb2e68bd736aee9b213ec4cf299dc5fd0ad228d35bee8e97e9926e4e905",
          "name": "rapidbiz"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "5fcf5dc36667346792627cd7",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "5.4.14-31.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "size": 3,
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "bundle_path_digest": "sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "5.4.14",
      "creation_date": "2020-12-08T11:04:35.286000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v5.4.14-7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-04T15:08:23.630000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "redislabs/operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "operator-062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217-annotation"
        },
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "redis-enterprise-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "5.4.14-7",
      "version_original": "5.4.14-7"
    },
    {
      "_id": "5fcf5dc48c8643c889cb6f15",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.6-39.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "bundle_path_digest": "sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.0.6",
      "creation_date": "2020-12-08T11:04:36.506000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-24",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-04T14:58:41.067000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "redislabs/operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "operator-998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b-annotation"
        },
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "redis-enterprise-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.6-24",
      "version_original": "6.0.6-24"
    },
    {
      "_id": "5fcf5dc56667346792627cd8",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "bundle_path_digest": "sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "capabilities": [
        ""
      ],
      "channel_name": "6.0.8",
      "creation_date": "2020-12-08T11:04:37.727000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T17:17:12.412000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "related_images": [],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.8-1",
      "version_original": "6.0.8-1"
    },
    {
      "_id": "5fcf5dc8fa8a5971b4238e45",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "bundle_path_digest": "sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "capabilities": [
        ""
      ],
      "channel_name": "production",
      "creation_date": "2020-12-08T11:04:40.012000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T16:59:54.156000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "related_images": [],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.8-1",
      "version_original": "6.0.8-1"
    },
    {
      "_id": "5fcf5dca6667346792627cda",
      "alm_examples": [
        {
          "kind": "RocketChat",
          "metadata": {
            "name": "rocketchat-quickstart"
          },
          "spec": {
            "labels": {
              "app": "rocketchat"
            },
            "memoryLimit": "512Mi",
            "mongodbDatabase": "rocketchat",
            "mongodbReplicaName": "rs0",
            "mongodbReplicas": 1,
            "mongodbSecretName": "mongodb-secret",
            "rocketchatReplicas": 1,
            "volumeCapacity": "1Gi"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/rocketchat/rocketchat-operator-bundle@sha256:939fd27346e704244fda2c6666cda4e6f164d541e89c0000f4a46d91296831c1",
      "bundle_path_digest": "sha256:939fd27346e704244fda2c6666cda4e6f164d541e89c0000f4a46d91296831c1",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2020-12-08T11:04:42.146000+00:00",
      "csv_description": "# Rocket.Chat Operator\n\nThis will launch an instance of the Rocket.Chat collaboration platform on your OpenShift cluster.\nIt is designed as a \"push-button-go\" operator, leveraging Ansible for the underlying logic.\nThe operator handles the provisioning of MongoDB from Red Hat Software Collections, and the deployment of Rocket.Chat from the Red Hat Container Catalog.\n\n## Quick Instructions\n\nTo get started, you can use the included RocketChat custom resource template (provided when installing from OperatorHub), which will launch Rocket.Chat with the following options:\n\n* 1 GiB storage volume for MongoDB\n* 512 MiB memory limit each for MongoDB and Rocket.Chat\n* Single pod instances of MongoDB and Rocket.Chat\n* Automatically generated credentials for MongoDB, stored in a Kubernetes secret\n\n## Custom Installation\n\nThe default CR template is enough to get started, but for a production environment you'll likely want to adjust your resource size accordingly.\n\nStorage, memory and pod replicas can be adjusted by changing the respective fields in the RocketChat custom resource:\n\n```\napiVersion: open.rocket.chat/v1alpha1\nkind: RocketChat\nmetadata:\n  name: rocketchat-custom\nspec:\n  mongodbReplicas: 1\n  memoryLimit: 512Mi\n  rocketchatReplicas: 1\n  volumeCapacity: 1Gi\n```\n\nYou can also install Rocket.Chat using an ephemeral storage volume by setting the `spec.volumeCapacity` field of the CR to an empty string:\n\n```\napiVersion: open.rocket.chat/v1alpha1\nkind: RocketChat\nmetadata:\n  name: rocketchat-custom\nspec:\n  volumeCapacity: \"\"\n```\n\nIf you would like to provide your own MongoDB credentials, you can create a Kubernetes secret with the following fields (`keyfile` is a base64 encoded, 756 character randomized string):\n\n```\nusername:\npassword:\nadmin_password:\nkeyfile:\n```\n\nThe name of the kubernetes secret you created above should be set in the RocketChat custom resource:\n\n```\napiVersion: open.rocket.chat/v1alpha1\nkind: RocketChat\nmetadata:\n  name: rocketchat-custom\nspec:\n  mongodbSecretName: mongodb-secret-name\n```\n\nYou can customize or add labels that will be applied by the operator to all of the created objects:\n\n```\napiVersion: open.rocket.chat/v1alpha1\nkind: RocketChat\nmetadata:\n  name: rocketchat-custom\nspec:\n  labels:\n    app: rocketchat\n    env: production\n    region: na-east\n```\n\nIf desired, you can also customize the MongoDB database and replicaset names:\n\n```\napiVersion: open.rocket.chat/v1alpha1\nkind: RocketChat\nmetadata:\n  name: rocketchat-custom\nspec:\n  mongodbDatabase: rocketchat\n  mongodbReplicaName: rs0\n```\n",
      "csv_display_name": "Rocket.Chat Operator",
      "csv_metadata_description": "Deploy Rocket.Chat Collaboration Platform on OpenShift",
      "csv_name": "rocketchat-operator.v0.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T15:08:26.641000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "rocketchat-operator-certified",
      "provided_apis": [
        {
          "group": "open.rocket.chat",
          "kind": "RocketChat",
          "plural": "rocketchats",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:e556b5222ee2b12c0cbae134f3b081712df6077a5c4f8da693a07674f87fb571",
          "image": "quay.io/rhc4tp/rocketchat-operator@sha256:e556b5222ee2b12c0cbae134f3b081712df6077a5c4f8da693a07674f87fb571",
          "name": "rocketchat-operator-e556b5222ee2b12c0cbae134f3b081712df6077a5c4f8da693a07674f87fb571-annotation"
        },
        {
          "digest": "sha256:1a7796aea2d8e974df8c26de1ecf240917b0fd0c3594cc77f86d48e73c0a5ad1",
          "image": "registry.connect.redhat.com/rocketchat/rocketchat-operator@sha256:1a7796aea2d8e974df8c26de1ecf240917b0fd0c3594cc77f86d48e73c0a5ad1",
          "name": "rocketchat-operator"
        },
        {
          "digest": "sha256:856c0c3e3b7a71795262e29915bf748ee692ecc6dcef0ef3eff0dd1fdb2f85f7",
          "image": "registry.access.redhat.com/rhscl/mongodb-36-rhel7@sha256:856c0c3e3b7a71795262e29915bf748ee692ecc6dcef0ef3eff0dd1fdb2f85f7",
          "name": "mongodb"
        },
        {
          "digest": "sha256:d26a76943471e057a088acd4896eab5b7cdc478069656de0f896ee66ffa61cf7",
          "image": "registry.connect.redhat.com/rocketchat/rocketchat@sha256:d26a76943471e057a088acd4896eab5b7cdc478069656de0f896ee66ffa61cf7",
          "name": "rocketchat"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.1.0",
      "version_original": "0.1.0"
    },
    {
      "_id": "5fcf5dcbfa8a5971b4238e46",
      "alm_examples": [
        {
          "kind": "RuntimeComponent",
          "metadata": {
            "name": "example-runtime-component"
          },
          "spec": {
            "applicationImage": "registry.connect.redhat.com/ibm/open-liberty-samples@sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/runtime-component-operator-bundle@sha256:8e8792d973514ff1e87acbfbcaef90fa41d7dc66eac939f5e74b307946f7dd37",
      "bundle_path_digest": "sha256:8e8792d973514ff1e87acbfbcaef90fa41d7dc66eac939f5e74b307946f7dd37",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "beta",
      "creation_date": "2020-12-08T11:04:43.742000+00:00",
      "csv_description": "This advanced Operator is capable of deploying any runtime component image with consistent, production-grade QoS. It enables enterprise architects to govern the way their applications get deployed & managed in the cluster, while dramatically reducing the learning curve for developers to deploy into Kubernetes - allowing them to focus on writing the code!\nHere are some key features:\n#### Application Lifecyle\nYou can deploy your runtime component container by either pointing to a container image, or an OpenShift ImageStream. When using an ImageStream the Operator will watch for any updates and will re-deploy the modified image.\n\n#### Custom RBAC\nThis Operator is capable of using a custom ServiceAccount from the caller, allowing it to follow RBAC restrictions. By default it creates a ServiceAccount if one is not specified, which can also be bound with specific roles.\n\n#### Environment Configuration\nYou can configured a variety of artifacts with your deployment, such as: labels, annotations, and environment variables from a ConfigMap, a Secret or a value.\n\n#### Routing\nExpose your application to external users via a single toggle to create a Route on OpenShift or an Ingress on other Kubernetes environments. Advanced configuration, such as TLS settings, are also easily enabled.  Expiring Route certificates are re-issued.\n\n#### High Availability via Horizontal Pod Autoscaling\nRun multiple instances of your application for high availability. Either specify a static number of replicas or easily configure horizontal auto scaling to create (and delete) instances based on resource consumption.\n\n#### Persistence and advanced storage\nEnable persistence for your application by specifying simple requirements: just tell us the size of the storage and where you would like it to be mounted and We will create and manage that storage for you.\nThis toggles a StatefulSet resource instead of a Deployment resource, so your container can recover transactions and state upon a pod restart.\nWe offer an advanced mode where the user specifies a built-in PersistentVolumeClaim, allowing them to configure many details of the persistent volume, such as its storage class and access mode.\n\n#### Service Binding\nEasily bind to available services in your cluster.  Your runtime components can expose and consume other services by simply specifying the target endpoinds: we take care of the heavy lifting such as creating k8s Secrets, injecting them into your container and watching for any changes in configuration!  This way your applications can dynamically reconnect to its required services without any intervention or interruption.\n#### Exposing metrics to Prometheus\nThe Runtime Component Operator exposes the runtime container's metrics via the [Prometheus Operator](https://operatorhub.io/operator/prometheus).\nUsers can pick between a basic mode, where they simply specify the label that Prometheus is watching to scrape the metrics from the container, or they can specify the full `ServiceMonitor` spec embedded into the RuntimeComponent's `spec.monitoring` key controlling things like the poll internal and security credentials.\n#### Easily mount logs and transaction directories\nIf you need to mount the logs and transaction data from your runtime component to an external volume such as NFS (or any storage supported in your cluster), simply add the following (customizing the folder location and size) to your RuntimeComponent CR:\n``` storage: size: 2Gi mountPath: \"/logs\" ```\n\n#### Integration with OpenShift's Certificate Manager\nThe Runtime Component Operator takes advantage of the [cert-manager tool](https://cert-manager.io/), if it is installed on the cluster. This allows the operator to automatically provision TLS certificates for pods as well as routes.\nWhen creating certificates via the RuntimeComponent CR the user can specify a particular issuer name and toggle the scopes between ClusterIssuer (cluster scoped) and Issuer (namespace scoped). If not specified, these values are retrieved from a ConfigMap, with a default value of `self-signed` and `ClusterIssuer`.\nThe certificate is mounted into the container via a Secret so that it is automatically refreshed once the certificate is updated.\n#### Integration with OpenShift Serverless\nDeploy your serverless runtime component using a single toggle.  The Operator will convert all of its generated resources into [Knative](https://knative.dev) resources, allowing your pod to automatically scale to 0 when it is idle.\n\n#### Integration with Kubernetes Application Navigator (kAppNav) and OpenShift's Topology UI\nAutomatically configures the Kubernetes resources for integration with [kAppNav](https://kappnav.io/), allowing your runtime component to compose an umbrella [Application](https://github.com/kubernetes-sigs/application).  This integration allows users to monitor all constituents resources of the application and receive alerts when the health status of a component changes.  From an integrated panel users can also launch day-2-operations, such as viewing the Kibana / Grafana dashboards, and enabling trace for a component.\nDuring this integration we also set the corresponding labels to support OpenShift's Developer Topology UI,which allows you to visualize your entire set of deployments and how they are connected.\n\nSee our [**documentation**](https://github.com/application-stacks/runtime-component-operator/tree/master/doc/) for more information.\n",
      "csv_display_name": "Runtime Component Operator",
      "csv_metadata_description": "Deploys any runtime component with dynamic and auto-tuning configuration",
      "csv_name": "runtime-component-operator.v0.7.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-04T15:13:02.957000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "runtime-component-operator-certified",
      "provided_apis": [
        {
          "group": "app.stacks",
          "kind": "RuntimeComponent",
          "plural": "runtimecomponents",
          "version": "v1beta1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:1bf98ba1e20475f591e1edbb8bbf70c86c0fe0e124a84968c339eb873e639596",
          "image": "registry.connect.redhat.com/ibm/runtime-component-operator@sha256:1bf98ba1e20475f591e1edbb8bbf70c86c0fe0e124a84968c339eb873e639596",
          "name": "runtime-component-operator-1bf98ba1e20475f591e1edbb8bbf70c86c0fe0e124a84968c339eb873e639596-annotation"
        },
        {
          "digest": "sha256:1bf98ba1e20475f591e1edbb8bbf70c86c0fe0e124a84968c339eb873e639596",
          "image": "registry.connect.redhat.com/ibm/runtime-component-operator@sha256:1bf98ba1e20475f591e1edbb8bbf70c86c0fe0e124a84968c339eb873e639596",
          "name": "runtime-component-operator"
        },
        {
          "digest": "sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
          "image": "registry.connect.redhat.com/ibm/open-liberty-samples@sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
          "name": "open-liberty-samples-8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4-annotation"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.7.0",
      "version_original": "0.7.0"
    },
    {
      "_id": "5fcf5dce6667346792627cdb",
      "alm_examples": [
        {
          "kind": "SeldonDeployment",
          "metadata": {
            "name": "seldon-model"
          },
          "spec": {
            "name": "test-deployment",
            "predictors": [
              {
                "componentSpecs": [
                  {
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/seldonio/mock-classifier@sha256:482ee477c344badcaa80e850f4339db41957f9c2396ae24f9e398b67bd5c184e",
                          "name": "classifier"
                        }
                      ]
                    }
                  }
                ],
                "graph": {
                  "children": [],
                  "endpoint": {
                    "type": "REST"
                  },
                  "name": "classifier",
                  "type": "MODEL"
                },
                "name": "example",
                "replicas": 1
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/seldonio/seldon-core-operator-bundle@sha256:0f91afcdf6ef68f7a103834d6bf85938f457af36d3fab2fec164476ecb711cfa",
      "bundle_path_digest": "sha256:0f91afcdf6ef68f7a103834d6bf85938f457af36d3fab2fec164476ecb711cfa",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2020-12-08T11:04:46.567000+00:00",
      "csv_description": "The Seldon operator enables for native operation of production machine learning workloads, including monitoring and operations of language-agnostic models with the benefits of real-time metrics and log analysis.\n   \n## Overview\nSeldon Core is an open source platform for deploying machine learning models on a Kubernetes cluster.\n\n* Deploy machine learning models in the cloud or on-premise.\n* Get metrics and ensure proper governance and compliance for your running machine learning models.\n* Create powerful inference graphs made up of multiple components.\n* Provide a consistent serving layer for models built using heterogeneous ML toolkits.\n\nYou can get started by following the guides in our documentation at https://docs.seldon.io/projects/seldon-core/en/latest/workflow/README.html\n",
      "csv_display_name": "Seldon Operator",
      "csv_metadata_description": "The Seldon operator for management, monitoring and operations of machine learning systems through the Seldon Engine. Once installed, the Seldon Operator provides multiple functions which facilitate the productisation, monitoring and maintenance of machine learning systems at scale.",
      "csv_name": "seldon-operator.v1.2.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-04T14:59:48.247000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "seldon-operator-certified",
      "provided_apis": [
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1"
        },
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1alpha2"
        },
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1alpha3"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:174abdbca57a34b0c102a3bf87f8640121ae28f2857411039d2fc9729f23efc0",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-operator@sha256:174abdbca57a34b0c102a3bf87f8640121ae28f2857411039d2fc9729f23efc0",
          "name": "seldon-core-operator-174abdbca57a34b0c102a3bf87f8640121ae28f2857411039d2fc9729f23efc0-annotation"
        },
        {
          "digest": "sha256:174abdbca57a34b0c102a3bf87f8640121ae28f2857411039d2fc9729f23efc0",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-operator@sha256:174abdbca57a34b0c102a3bf87f8640121ae28f2857411039d2fc9729f23efc0",
          "name": "manager"
        },
        {
          "digest": "sha256:f46297a51ca7b2087a7ee3d3de0312024f696474af6dec4764eeb6c2daca4247",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-executor@sha256:f46297a51ca7b2087a7ee3d3de0312024f696474af6dec4764eeb6c2daca4247",
          "name": "executor"
        },
        {
          "digest": "sha256:7560432beb443c9bcd1f72c765eff4b3c418faa6e22111eb0bb41f6e47182df6",
          "image": "registry.connect.redhat.com/seldonio/seldon-engine@sha256:7560432beb443c9bcd1f72c765eff4b3c418faa6e22111eb0bb41f6e47182df6",
          "name": "engine"
        },
        {
          "digest": "sha256:eb2b47a2f8c96604665b3d1a18d7e39b6a69dd5b061e0f867ab093afc294285c",
          "image": "registry.connect.redhat.com/seldonio/storage-initializer@sha256:eb2b47a2f8c96604665b3d1a18d7e39b6a69dd5b061e0f867ab093afc294285c",
          "name": "storage_initializer"
        },
        {
          "digest": "sha256:b370b068ea0ac1464e384549f45f9fb93da3b2970b60e0090829f384f5e9c5dc",
          "image": "registry.connect.redhat.com/seldonio/sklearnserver-rest@sha256:b370b068ea0ac1464e384549f45f9fb93da3b2970b60e0090829f384f5e9c5dc",
          "name": "sklearnserver_rest"
        },
        {
          "digest": "sha256:c835baa699e6fb3f6c7b0016d075758ce4827520c04429b032920efb7df27011",
          "image": "registry.connect.redhat.com/seldonio/sklearnserver-grpc@sha256:c835baa699e6fb3f6c7b0016d075758ce4827520c04429b032920efb7df27011",
          "name": "sklearnserver_grpc"
        },
        {
          "digest": "sha256:c8a95aae4b173db7991cbe83ca1ab1bc3165ad90fdd9de10f4998604c7dfc7a5",
          "image": "registry.connect.redhat.com/seldonio/xgboostserver-rest@sha256:c8a95aae4b173db7991cbe83ca1ab1bc3165ad90fdd9de10f4998604c7dfc7a5",
          "name": "xgboostserver_rest"
        },
        {
          "digest": "sha256:3dd28690bfdf4b19d5429a26116534c3c5cd25973b12238cd0fb1dbae8c3b8ad",
          "image": "registry.connect.redhat.com/seldonio/xgboostserver-grpc@sha256:3dd28690bfdf4b19d5429a26116534c3c5cd25973b12238cd0fb1dbae8c3b8ad",
          "name": "xgboostserver_grpc"
        },
        {
          "digest": "sha256:fa87b40b1268f12a1614762bbd83960ca13ebcf15dd4fbf0b414f33f33722719",
          "image": "registry.connect.redhat.com/seldonio/mlflowserver-rest@sha256:fa87b40b1268f12a1614762bbd83960ca13ebcf15dd4fbf0b414f33f33722719",
          "name": "mlflowserver_rest"
        },
        {
          "digest": "sha256:e085e33c822b42901dcfc9e1740126bf5432aa879b870e02c8f6ebb2195f34d7",
          "image": "registry.connect.redhat.com/seldonio/mlflowserver-grpc@sha256:e085e33c822b42901dcfc9e1740126bf5432aa879b870e02c8f6ebb2195f34d7",
          "name": "mlflowserver_grpc"
        },
        {
          "digest": "sha256:d38464683754a4c4f01f55b4bb8942df5f08429f41711638adeda82301745361",
          "image": "registry.connect.redhat.com/seldonio/tfproxy-rest@sha256:d38464683754a4c4f01f55b4bb8942df5f08429f41711638adeda82301745361",
          "name": "tfproxy_rest"
        },
        {
          "digest": "sha256:2d713271dfb7bd056d1011ceef218c76806313ce2e9afb8f92e22238038c1888",
          "image": "registry.connect.redhat.com/seldonio/tfproxy-grpc@sha256:2d713271dfb7bd056d1011ceef218c76806313ce2e9afb8f92e22238038c1888",
          "name": "tfproxy_grpc"
        },
        {
          "digest": "sha256:1dc53edc5c8d1b151782f8386c0770d0358c6397eaf42ec55ebd18f331c5ef9e",
          "image": "registry.connect.redhat.com/seldonio/tensorflow-serving@sha256:1dc53edc5c8d1b151782f8386c0770d0358c6397eaf42ec55ebd18f331c5ef9e",
          "name": "tensorflow"
        },
        {
          "digest": "sha256:e08a45f335c2ef763ac10787e4718fb4a1067d6b69ff106e8eca298fc91c3616",
          "image": "registry.connect.redhat.com/seldonio/alibiexplainer@sha256:e08a45f335c2ef763ac10787e4718fb4a1067d6b69ff106e8eca298fc91c3616",
          "name": "explainer"
        },
        {
          "digest": "sha256:350e900f1709c12c73fae170940b158e1d4ad6ce4ead9c884a763d8a27d770e2",
          "image": "registry.connect.redhat.com/seldonio/mock-classifier@sha256:350e900f1709c12c73fae170940b158e1d4ad6ce4ead9c884a763d8a27d770e2",
          "name": "mock_classifier"
        },
        {
          "digest": "sha256:482ee477c344badcaa80e850f4339db41957f9c2396ae24f9e398b67bd5c184e",
          "image": "registry.connect.redhat.com/seldonio/mock-classifier@sha256:482ee477c344badcaa80e850f4339db41957f9c2396ae24f9e398b67bd5c184e",
          "name": "mock-classifier-482ee477c344badcaa80e850f4339db41957f9c2396ae24f9e398b67bd5c184e-annotation"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.2.2",
      "version_original": "1.2.2"
    },
    {
      "_id": "5fcf5dcf8c8643c889cb6f16",
      "alm_examples": [
        {
          "kind": "SematextAgent",
          "metadata": {
            "name": "basic-agent-deployment"
          },
          "spec": {
            "region": "EU"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sematext/sematext-operator-bundle@sha256:6261bac8dbfc9453bf59eed93a860f55e15529c564058f79246a5bfe9c6ad698",
      "bundle_path_digest": "sha256:6261bac8dbfc9453bf59eed93a860f55e15529c564058f79246a5bfe9c6ad698",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2020-12-08T11:04:47.725000+00:00",
      "csv_description": "The Sematext Operator for Kubernetes provides an easy way to deploy Sematext Agent.\n\nSematext Agent collects metrics about hosts (CPU, memory, disk, network, processes), containers (both Docker and rkt) and orchestrator platforms and ships that to [Sematext Cloud](https://sematext.com/cloud). Sematext Cloud is available in the US and EU regions.\n\nIt installs the Sematext Agent to all nodes in your cluster via a `DaemonSet` resource.\n\n## Settings\n\nThis operator uses all the same options as the [Sematext Agent Helm Chart](https://hub.helm.sh/charts/stable/sematext-agent), please take a look to all the options in the following table:\n\n|             Parameter            |            Description            |                  Default                  |\n|----------------------------------|-----------------------------------|-------------------------------------------|\n| `containerToken`                 | Sematext Container token          | `Nil` Provide your Container token        |\n| `logsToken`                      | Sematext Logs token               | `Nil` Provide your Logs token             |\n| `infraToken`                     | Sematext Infra token              | `Nil` Provide your Infra token            |\n| `region`                         | Sematext region                   | `US` Sematext US or EU region             |\n| `agent.image.repository`         | The image repository              | `sematext/agent`                          |\n| `agent.image.tag`                | The image tag                     | `latest`                                  |\n| `agent.image.pullPolicy`         | Image pull policy                 | `Always`                                  |\n| `agent.service.port`             | Service port                      | `80`                                      |\n| `agent.service.type`             | Service type                      | `ClusterIP`                               |\n| `agent.resources`                | Agent resources                   | `{}`                                      |\n| `logagent.image.repository`      | The image repository              | `sematext/logagent`                       |\n| `logagent.image.tag`             | The image tag                     | `latest`                                  |\n| `logagent.image.pullPolicy`      | Image pull policy                 | `Always`                                  |\n| `logagent.resources`             | Logagent resources                | `{}`                                      |\n| `logagent.extraHostVolumeMounts` | Extra mounts                      | `{}`                                      |\n| `customUrl.serverBaseUrl`        | Custom Base URL                   | `Nil`                                     |\n| `customUrl.logsReceiverUrl`      | Custom Logs receiver URL          | `Nil`                                     |\n| `customUrl.eventsRecieverUrl`    | Custom Event receiver URL         | `Nil`                                     |\n| `serviceAccount.create`          | Create a service account          | `true`                                    |\n| `serviceAccount.name`            | Service account name              | `Nil` Defaults to chart name              |\n| `rbac.create`                    | RBAC enabled                      | `true`                                    |\n| `tolerations`                    | Tolerations                       | `[]`                                      |\n| `nodeSelector`                   | Node selector                     | `{}`                                      |\n\nFor example, if you want to deploy Sematext Agent in EU region, create the following resource:\n\n```yaml\napiVersion: sematext.com/v1alpha1\nkind: SematextAgent\nmetadata:\n  name: test-sematextagent\nspec:\n  region: \"EU\"\n  containerToken: YOUR_CONTAINER_TOKEN\n  logsToken: YOUR_LOGS_TOKEN\n  infraToken: YOUR_INFRA_TOKEN\n```\n\n**NOTE:** You need to create [a new Docker app in Sematext Cloud](https://apps.sematext.com/ui/integrations/create/docker) to get relevant tokens.\n\nOnce you have created the above resource, you can apply this file with `kubectl apply -f`.",
      "csv_display_name": "Sematext Operator",
      "csv_metadata_description": "Full stack observability with Sematext Monitoring Platform!",
      "csv_name": "sematext-operator.v1.0.9",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:57:39.553000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "sematext",
      "provided_apis": [
        {
          "group": "sematext.com",
          "kind": "SematextAgent",
          "plural": "sematextagents",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:b0c51c0f22ce24c5bdec6e51d137d9e35237417fc217669935d5e97b81638893",
          "image": "registry.connect.redhat.com/sematext/sematext-operator@sha256:b0c51c0f22ce24c5bdec6e51d137d9e35237417fc217669935d5e97b81638893",
          "name": "sematext-operator-b0c51c0f22ce24c5bdec6e51d137d9e35237417fc217669935d5e97b81638893-annotation"
        },
        {
          "digest": "sha256:b0c51c0f22ce24c5bdec6e51d137d9e35237417fc217669935d5e97b81638893",
          "image": "registry.connect.redhat.com/sematext/sematext-operator@sha256:b0c51c0f22ce24c5bdec6e51d137d9e35237417fc217669935d5e97b81638893",
          "name": "sematext-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.9",
      "version_original": "1.0.9"
    },
    {
      "_id": "5fcf5dd1fa8a5971b4238e47",
      "alm_examples": [
        {
          "kind": "IndexerCluster",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "example"
          },
          "spec": {
            "replicas": 1
          }
        },
        {
          "kind": "LicenseMaster",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "example"
          },
          "spec": {}
        },
        {
          "kind": "SearchHeadCluster",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "example"
          },
          "spec": {
            "replicas": 1
          }
        },
        {
          "kind": "Spark",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "replicas": 1
          }
        },
        {
          "kind": "Standalone",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "example"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/splunk/splunk-operator-bundle@sha256:69ab15464e35611399ced93804618510717be529f42c50e70da0ea6a0027a6bb",
      "bundle_path_digest": "sha256:69ab15464e35611399ced93804618510717be529f42c50e70da0ea6a0027a6bb",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2020-12-08T11:04:49.188000+00:00",
      "csv_description": "Splunk Enterprise is a platform for operational intelligence. Our software\nlets you collect, analyze, and act upon the untapped value of big data that\nyour technology infrastructure, security systems, and business applications\ngenerate. It gives you insights to drive operational performance and\nbusiness results.\n\nPlease refer to [Splunk\nproducts](https://www.splunk.com/en_us/software.html) for more knowledge\nabout the features and capabilities of Splunk, and how you can bring it into\nyour organization.\n\nPlease see the [getting started\nguide](https://splunk.github.io/splunk-operator/) to get up and running with\nthe Splunk Operator for Kubernetes.\n\n* [Known Issues for the Splunk\nOperator](https://splunk.github.io/splunk-operator/#known-issues-for-the-splunk-operator)\n* [Prerequisites for the Splunk\nOperator](https://splunk.github.io/splunk-operator/#prerequisites-for-the-splunk-operator)\n* [Installing the Splunk\nOperator](https://splunk.github.io/splunk-operator/#installing-the-splunk-operator)\n* [Creating Splunk Enterprise\nDeployments](https://splunk.github.io/splunk-operator/#creating-splunk-enterprise-deployments)\n\nCOMMUNITY SUPPORTED: Splunk Operator for Kubernetes is an open source\nproduct developed by Splunkers with contributions from the community of\npartners and customers. This unique product will be enhanced, maintained and\nsupported by the community, led by Splunkers with deep subject matter\nexpertise. The primary reason why Splunk is taking this approach is to push\nproduct development closer to those that use and depend upon it. This direct\nconnection will help us all be more successful and move at a rapid pace.\n\nFor help, please first read our [Frequently Asked\nQuestions](https://splunk.github.io/splunk-operator/FAQ.html)\n\nCommunity Support & Discussions on\n[Slack](http://splk.it/slack) channel #kubernetes\n\nFile Issues or Enhancements in\n[GitHub](https://github.com/splunk/splunk-operator/issues)\nsplunk/splunk-operator\n",
      "csv_display_name": "Splunk Operator for Kubernetes",
      "csv_metadata_description": "The Splunk Operator for Kubernetes (SOK) makes it easy for Splunk Administrators to deploy and operate Enterprise deployments in a Kubernetes infrastructure.",
      "csv_name": "splunk.v0.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T15:07:35.555000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "splunk-certified",
      "provided_apis": [
        {
          "group": "enterprise.splunk.com",
          "kind": "Standalone",
          "plural": "standalones",
          "version": "v1alpha2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "IndexerCluster",
          "plural": "indexerclusters",
          "version": "v1alpha2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "LicenseMaster",
          "plural": "licensemasters",
          "version": "v1alpha2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "SearchHeadCluster",
          "plural": "searchheadclusters",
          "version": "v1alpha2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "Spark",
          "plural": "sparks",
          "version": "v1alpha2"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:4c97c5fec7e4da46a7a1bf4e13c81f4b41fb6410dbf598dd60cafead8bf060a9",
          "image": "docker.io/splunk/splunk-operator@sha256:4c97c5fec7e4da46a7a1bf4e13c81f4b41fb6410dbf598dd60cafead8bf060a9",
          "name": "splunk-operator-4c97c5fec7e4da46a7a1bf4e13c81f4b41fb6410dbf598dd60cafead8bf060a9-annotation"
        },
        {
          "digest": "sha256:4c97c5fec7e4da46a7a1bf4e13c81f4b41fb6410dbf598dd60cafead8bf060a9",
          "image": "docker.io/splunk/splunk-operator@sha256:4c97c5fec7e4da46a7a1bf4e13c81f4b41fb6410dbf598dd60cafead8bf060a9",
          "name": "splunk-operator"
        },
        {
          "digest": "sha256:64dbb52a66a483a778890407be301fc7edfe8c224b8b524ec3cc1f322c9300a1",
          "image": "docker.io/splunk/splunk@sha256:64dbb52a66a483a778890407be301fc7edfe8c224b8b524ec3cc1f322c9300a1",
          "name": "splunk_enterprise"
        },
        {
          "digest": "sha256:4adf17b546f168a5c580b2445508793f4bfa4c84a41458a0b2fefc6522465a45",
          "image": "registry.connect.redhat.com/splunk/spark@sha256:4adf17b546f168a5c580b2445508793f4bfa4c84a41458a0b2fefc6522465a45",
          "name": "splunk_spark"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.1.0",
      "version_original": "0.1.0"
    },
    {
      "_id": "5fcf5dd4fa8a5971b4238e48",
      "alm_examples": [
        {
          "kind": "OpsSight",
          "metadata": {
            "name": "opssight-test"
          },
          "spec": {
            "blackduck": {
              "blackduckPassword": "<COMMON_BLACKDUCK_PWD_OPSSIGHT_TYPE_BASE64_ENCODED>",
              "blackduckSpec": {
                "certificateName": "default",
                "exposeService": "",
                "licenseKey": "<BLACKDUCK_LICENSE_KEY>",
                "livenessProbes": false,
                "namespace": "",
                "persistentStorage": false,
                "size": "small",
                "type": "opssight",
                "version": "2019.8.1"
              },
              "connectionsEnvironmentVariableName": "blackduck.json",
              "initialCount": 0,
              "maxCount": 0,
              "tlsVerification": false
            },
            "configMapName": "blackduck",
            "defaultCPU": "300m",
            "defaultMem": "1300Mi",
            "enableMetrics": true,
            "enableSkyfire": false,
            "logLevel": "debug",
            "namespace": "opssight-test",
            "perceiver": {
              "annotationIntervalSeconds": 30,
              "dumpIntervalMinutes": 30,
              "enableImagePerceiver": false,
              "enablePodPerceiver": true,
              "imagePerceiver": {
                "image": "docker.io/blackducksoftware/opssight-image-processor@sha256:8e0a60e4fff96ccea7547cc9e9b11c43de9d2bd1b03b5d3682df29240dc8d68d",
                "name": "opssight-image-processor"
              },
              "podPerceiver": {
                "image": "docker.io/blackducksoftware/opssight-pod-processor@sha256:726892dafbf26ab3e1a0d82ab37953d9ed0aa6de6709313919889d24acef4275",
                "name": "opssight-pod-processor"
              },
              "port": 3002,
              "serviceAccount": "opssight-processor"
            },
            "perceptor": {
              "checkForStalledScansPauseHours": 999999,
              "clientTimeoutMilliseconds": 100000,
              "expose": "",
              "image": "docker.io/blackducksoftware/opssight-core@sha256:ac57efb13c8b09c64699f4bdba3c1d4242359514b886d3e461ae00b032e36834",
              "modelMetricsPauseSeconds": 15,
              "name": "opssight-core",
              "port": 3001,
              "stalledScanClientTimeoutHours": 999999,
              "unknownImagePauseMilliseconds": 15000
            },
            "prometheus": {
              "expose": "",
              "image": "docker.io/prom/prometheus@sha256:7b987901dbc44d17a88e7bda42dbbbb743c161e3152662959acd9f35aeefb9a3",
              "name": "prometheus",
              "port": 9090
            },
            "scannerCPU": "300m",
            "scannerMem": "1300Mi",
            "scannerPod": {
              "imageFacade": {
                "image": "docker.io/blackducksoftware/opssight-image-getter@sha256:c518bf7b292fe56cd09a94a3d9373e806b31dff22c4df54f1b186d852b99f4cc",
                "imagePullerType": "skopeo",
                "internalRegistries": [],
                "name": "opssight-image-getter",
                "port": 3004,
                "serviceAccount": "opssight-scanner"
              },
              "name": "opssight-scanner",
              "replicaCount": 1,
              "scanner": {
                "clientTimeoutSeconds": 600,
                "image": "docker.io/blackducksoftware/opssight-scanner@sha256:128c7223ad1ae04ddb27ba6f0c612a62d78e681c01ffb6a881ab688408749ca9",
                "name": "opssight-scanner",
                "port": 3003
              }
            },
            "secretName": "blackduck",
            "skyfire": {
              "hubClientTimeoutSeconds": 120,
              "hubDumpPauseSeconds": 240,
              "image": "gcr.io/saas-hub-stg/blackducksoftware/pyfire@sha256:266be04b6e09e5ec03664600fb2280fdf9e3aedb1d68edf37d27323ba6fafea9",
              "kubeDumpIntervalSeconds": 60,
              "name": "skyfire",
              "perceptorDumpIntervalSeconds": 60,
              "port": 3005,
              "prometheusPort": 3006,
              "serviceAccount": "skyfire"
            }
          }
        },
        {
          "kind": "Blackduck",
          "metadata": {
            "name": "blackduck-ephemeral"
          },
          "spec": {
            "adminPassword": "<POSTGRES_ADMIN_USER_PASSWORD_BASE64_ENCODED>",
            "certificateName": "default",
            "exposeService": "NONE",
            "licenseKey": "<BLACKDUCK_LICENSE_KEY>",
            "livenessProbes": false,
            "namespace": "blackduck-ephemeral",
            "persistentStorage": false,
            "postgresPassword": "<POSTGRES_POSTGRES_USER_PASSWORD_BASE64_ENCODED>",
            "size": "Small",
            "type": "opssight",
            "userPassword": "<POSTGRES_BLACKDUCK_USER_PASSWORD_BASE64_ENCODED>",
            "version": "2019.8.1"
          }
        },
        {
          "kind": "Alert",
          "metadata": {
            "clusterName": "",
            "name": "alert-test"
          },
          "spec": {
            "alertMemory": "2560Mi",
            "cfsslMemory": "640Mi",
            "encryptionGlobalSalt": "",
            "encryptionPassword": "",
            "environs": [
              "ALERT_SERVER_PORT:8443",
              "PUBLIC_HUB_WEBSERVER_HOST:<<BLACK_DUCK_HOST>>",
              "PUBLIC_HUB_WEBSERVER_PORT:443"
            ],
            "exposeService": "",
            "namespace": "alert-test",
            "persistentStorage": false,
            "port": 8443,
            "pvcSize": "",
            "pvcStorageClass": "",
            "standAlone": true,
            "version": "5.0.0"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/blackducksoftware/synopsys-operator-bundle@sha256:46cee91fdddca9dc6d10fadd954676b7d582505418ba0eec0f2788c19ed1a72a",
      "bundle_path_digest": "sha256:46cee91fdddca9dc6d10fadd954676b7d582505418ba0eec0f2788c19ed1a72a",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2020-12-08T11:04:52.866000+00:00",
      "csv_description": "[Synopsys Operator](https://synopsys.atlassian.net/wiki/spaces/BDLM/pages/34373652/Synopsys+Operator) is a cloud-native administration utility for Synopsys software. Synopsys Operator assists in the deployment and management of Synopsys software like Black Duck, OpsSight Connector, and Black Duck Alert, in a Kubernetes and Red Hat OpenShift environment.\n\nThe Synopsys Operator deployment can be managed by a utility called [synopsysctl](https://github.com/blackducksoftware/synopsys-operator/releases). synopsysctl makes it easy to deploy Synopsys Operator, and it eliminates the need to edit YML/JSON configuration files when deploying and managing software with Synopsys Operator. Synopsysctl provides a rich set of command-line parameters to allow for fast and highly-configurable deployments of Black Duck, OpsSight Connector, and Black Duck Alert. synopsysctl\u2019s interface mimics that of kubectl and oc, making it immediately familiar to anyone with Kubernetes and/or Red Hat OpenShift experience.\n\n## Black Duck\n[Black Duck](https://www.synopsys.com/software-integrity/security-testing/software-composition-analysis.html) is a comprehensive solution for managing security, license compliance, and code quality risks that come from the use of open source in applications and containers. Black Duck gives you unmatched visibility into third-party code, enabling you to control it across your software supply chain and throughout the application life cycle.\n\n### Supported Features\n\n* **Find and fix security vulnerabilities** at each stage in the SDLC, with detailed, vulnerability-specific remediation guidance and technical insight.\n\n* **Eliminate risk of open source license** noncompliance and safeguard your intellectual property by using the industry\u2019s largest open source knowledge base to identify which of 2,500+ licenses are relevant to the open source in your applications.\n\n* **Scan virtually any software, firmware, and source code** to generate acomprehensive bill of materials (BoM) of what\u2019s inside.\n\n* **Automatically monitor for new vulnerabilities** hat affect your BoM, with custom policies and workflow triggers to accelerate remediation and reduce your risk exposure.\n\n## OpsSight Connector\n[Synopsys Black Duck OpsSight](https://synopsys.atlassian.net/wiki/spaces/BDLM/pages/34242566/OpsSight) for Red Hat OpenShift Container Platform provides automated open source identification and monitoring in all container images in a Kubernetes or OpenShift cluster to give teams visibility into, and control over, the risks associated with open source components in those images.\n\n### Supported Features\n\n* **Automated Detection** - OpsSight\u2019s automated multifactor open source detection inventories all the open source in container images as they are deployed.\n\n* **Security Intelligence** -  Black Duck Enhanced Vulnerability Data identifies all known vulnerabilities for the open source in your container images while actionable mitigation and remediation guidance helps minimize exploit risk.\n\n* **Policy Management** - OpsSight policy management allows teams to define open source use and security policies, which are evaluated with each scan and documented as metadata on your containers, allowing you to flag images that violate policies and prevent them from deploying to production.\n\n* **Continous Monitoring** - OpsSight continuously monitors for newly reported open source security vulnerabilities associated with open source in use, providing same-day alerts so teams can understand how newly discovered vulnerabilities affect their containers in production.\n\n## Black Duck Alert\nBlack Duck Alert is an additional deployment to Black Duck that enables you to see Security Vulnerability and Policy Management notifications through email, Slack or HipChat.\n\n## About Synopsys\n\n[Synopsys Software Integrity](https://www.synopsys.com/software-integrity.html) helps development teams build secure, high-quality software, minimizing risks while maximizing speed and productivity. Synopsys, a recognized leader in application security, provides static analysis, software composition analysis, and dynamic analysis solutions that enable teams to quickly find and fix vulnerabilities and defects in proprietary code, open source components, and application behavior.",
      "csv_display_name": "Synopsys Operator",
      "csv_metadata_description": "Synopsys Operator is a cloud-native administration utility for Synopsys software.",
      "csv_name": "synopsys-operator.2019.8.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T15:12:05.586000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "synopsys-certified",
      "provided_apis": [
        {
          "group": "synopsys.com",
          "kind": "Alert",
          "plural": "alerts",
          "version": "v1"
        },
        {
          "group": "synopsys.com",
          "kind": "Blackduck",
          "plural": "blackducks",
          "version": "v1"
        },
        {
          "group": "synopsys.com",
          "kind": "OpsSight",
          "plural": "opssights",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:554c0844507b8d396d24cee6316913cabe7b09a525bf968ad5a151cede8aeda8",
          "image": "registry.connect.redhat.com/blackducksoftware/synopsys-operator@sha256:554c0844507b8d396d24cee6316913cabe7b09a525bf968ad5a151cede8aeda8",
          "name": "synopsys-operator-554c0844507b8d396d24cee6316913cabe7b09a525bf968ad5a151cede8aeda8-annotation"
        },
        {
          "digest": "sha256:554c0844507b8d396d24cee6316913cabe7b09a525bf968ad5a151cede8aeda8",
          "image": "registry.connect.redhat.com/blackducksoftware/synopsys-operator@sha256:554c0844507b8d396d24cee6316913cabe7b09a525bf968ad5a151cede8aeda8",
          "name": "synopsys-operator"
        },
        {
          "digest": "sha256:266be04b6e09e5ec03664600fb2280fdf9e3aedb1d68edf37d27323ba6fafea9",
          "image": "gcr.io/saas-hub-stg/blackducksoftware/pyfire@sha256:266be04b6e09e5ec03664600fb2280fdf9e3aedb1d68edf37d27323ba6fafea9",
          "name": "blackducksoftware/pyfire-266be04b6e09e5ec03664600fb2280fdf9e3aedb1d68edf37d27323ba6fafea9-annotation"
        },
        {
          "digest": "sha256:7b987901dbc44d17a88e7bda42dbbbb743c161e3152662959acd9f35aeefb9a3",
          "image": "docker.io/prom/prometheus@sha256:7b987901dbc44d17a88e7bda42dbbbb743c161e3152662959acd9f35aeefb9a3",
          "name": "prometheus-7b987901dbc44d17a88e7bda42dbbbb743c161e3152662959acd9f35aeefb9a3-annotation"
        },
        {
          "digest": "sha256:726892dafbf26ab3e1a0d82ab37953d9ed0aa6de6709313919889d24acef4275",
          "image": "docker.io/blackducksoftware/opssight-pod-processor@sha256:726892dafbf26ab3e1a0d82ab37953d9ed0aa6de6709313919889d24acef4275",
          "name": "opssight-pod-processor-726892dafbf26ab3e1a0d82ab37953d9ed0aa6de6709313919889d24acef4275-annotation"
        },
        {
          "digest": "sha256:8e0a60e4fff96ccea7547cc9e9b11c43de9d2bd1b03b5d3682df29240dc8d68d",
          "image": "docker.io/blackducksoftware/opssight-image-processor@sha256:8e0a60e4fff96ccea7547cc9e9b11c43de9d2bd1b03b5d3682df29240dc8d68d",
          "name": "opssight-image-processor-8e0a60e4fff96ccea7547cc9e9b11c43de9d2bd1b03b5d3682df29240dc8d68d-annotation"
        },
        {
          "digest": "sha256:c518bf7b292fe56cd09a94a3d9373e806b31dff22c4df54f1b186d852b99f4cc",
          "image": "docker.io/blackducksoftware/opssight-image-getter@sha256:c518bf7b292fe56cd09a94a3d9373e806b31dff22c4df54f1b186d852b99f4cc",
          "name": "opssight-image-getter-c518bf7b292fe56cd09a94a3d9373e806b31dff22c4df54f1b186d852b99f4cc-annotation"
        },
        {
          "digest": "sha256:128c7223ad1ae04ddb27ba6f0c612a62d78e681c01ffb6a881ab688408749ca9",
          "image": "docker.io/blackducksoftware/opssight-scanner@sha256:128c7223ad1ae04ddb27ba6f0c612a62d78e681c01ffb6a881ab688408749ca9",
          "name": "opssight-scanner-128c7223ad1ae04ddb27ba6f0c612a62d78e681c01ffb6a881ab688408749ca9-annotation"
        },
        {
          "digest": "sha256:ac57efb13c8b09c64699f4bdba3c1d4242359514b886d3e461ae00b032e36834",
          "image": "docker.io/blackducksoftware/opssight-core@sha256:ac57efb13c8b09c64699f4bdba3c1d4242359514b886d3e461ae00b032e36834",
          "name": "opssight-core-ac57efb13c8b09c64699f4bdba3c1d4242359514b886d3e461ae00b032e36834-annotation"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2019.8.4",
      "version_original": "2019.8.4"
    },
    {
      "_id": "5fcf5dd78c8643c889cb6f18",
      "alm_examples": [
        {
          "kind": "Xl",
          "metadata": {
            "name": "xl-release"
          },
          "spec": {
            "global": {
              "tag": "7.22.9"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/t8c-operator-bundle@sha256:8890c8329b9968a041860d9eea7685a103b6643882dc569eb634d467442c79c2",
      "bundle_path_digest": "sha256:8890c8329b9968a041860d9eea7685a103b6643882dc569eb634d467442c79c2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2020-12-08T11:04:55.348000+00:00",
      "csv_description": "### Realtime Decision Automation for Multicloud Applications\nTurbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints:\n* Continuous placement of workload across multiple clouds both on-prem and public clouds providers.\n* Continuous scaling for applications and the underlying infrastructure.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a public APIs already exposed by application and infrastructure instrumentation to discover and monitor your environment.\nTurbonomic determines the right actions that drive continuous health, including continuous placement and continuous scaling for applications and the underlying cluster.\nTurbonomic leverages the built-on orchestration provided by the application and infrastructure deployment tools and automates the execution of these actions to continiously meet the respective service level objective of each application service.",
      "csv_display_name": "Turbonomic Platform Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "t8c-operator.v7.22.9",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:48:55.584000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "t8c-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:b8f6fa73da944ddb7db366792b3c1b264032e267b20f3e00099b1e244e452605",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:b8f6fa73da944ddb7db366792b3c1b264032e267b20f3e00099b1e244e452605",
          "name": "t8c-operator-b8f6fa73da944ddb7db366792b3c1b264032e267b20f3e00099b1e244e452605-annotation"
        },
        {
          "digest": "sha256:b8f6fa73da944ddb7db366792b3c1b264032e267b20f3e00099b1e244e452605",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:b8f6fa73da944ddb7db366792b3c1b264032e267b20f3e00099b1e244e452605",
          "name": "t8c-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "7.22.9",
      "version_original": "7.22.9"
    },
    {
      "_id": "5fcf5dd8c838eab12d2cec80",
      "alm_examples": [
        {
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:0cb9e9a9f8294c00517d0662eb8df63dca9a5c27ff83f00443b4eab3f31626d5",
      "bundle_path_digest": "sha256:0cb9e9a9f8294c00517d0662eb8df63dca9a5c27ff83f00443b4eab3f31626d5",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2020-12-08T11:04:56.564000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.7.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-04T14:49:09.318000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:ebe3bf3a6cd29cd2f570232e187fe95d138119e589ec8fcbd8e4e98a377d5dff",
          "image": "quay.io/tigera/operator@sha256:ebe3bf3a6cd29cd2f570232e187fe95d138119e589ec8fcbd8e4e98a377d5dff",
          "name": "operator-ebe3bf3a6cd29cd2f570232e187fe95d138119e589ec8fcbd8e4e98a377d5dff-annotation"
        },
        {
          "digest": "sha256:ebe3bf3a6cd29cd2f570232e187fe95d138119e589ec8fcbd8e4e98a377d5dff",
          "image": "quay.io/tigera/operator@sha256:ebe3bf3a6cd29cd2f570232e187fe95d138119e589ec8fcbd8e4e98a377d5dff",
          "name": "tigera-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.7.3",
      "version_original": "1.7.3"
    },
    {
      "_id": "5fcf5ddbfa8a5971b4238e49",
      "alm_examples": [
        {
          "kind": "Traefikee",
          "metadata": {
            "name": "example-traefikee",
            "namespace": "traefikee"
          },
          "spec": {
            "cluster": "traefikee",
            "controllers": 1,
            "proxies": 2
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/containous/traefikee-operator-bundle@sha256:d8be7fb9621c8a2224d218f62926944a86d704d92db1c2344a0f3724575991b8",
      "bundle_path_digest": "sha256:d8be7fb9621c8a2224d218f62926944a86d704d92db1c2344a0f3724575991b8",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2020-12-08T11:04:59.186000+00:00",
      "csv_description": "TraefikEE is a distributed, and highly available edge routing solution built on top of the open source Traefik and natively integrates with Openshift to:\n\n* Load balance any applications and easily scale out to meet production traffic needs\n* Secure services with end-to-end network and application encryption\n* Provide end-to-end monitoring and real-time tracing for better insight into application uptime and performance\n\n## Before You Start\n\nTo start using the operator you''ll need a license key\n\nRequest your [30-days free trial](https://info.containo.us/free-trial-traefikee-red-hat-openshift)\n\n* Create a Secret with your License key\n```\nkubectl create namespace traefikee\nkubectl create -n traefikee secret generic license --from-literal=license=${TRAEFIKEE_LICENSE_KEY}\n```\n\n* Generate the client credentials\n```\nexport CLUSTER=test\nteectl setup --cluster=\"${CLUSTER}\" --kubernetes --force\nkubectl create secret -n traefikee generic \"${CLUSTER}-mtls\" --from-file=bundle.zip=./bundle.zip\nkubectl label secret -n traefikee \"${CLUSTER}-mtls\" app=traefikee\nkubectl label secret -n traefikee \"${CLUSTER}-mtls\" release=\"${CLUSTER}\"\n```\n",
      "csv_display_name": "Traefikee Operator",
      "csv_metadata_description": "Traefik Enterprise Edition",
      "csv_name": "traefikee-redhat-certified.v2.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T15:08:33.429000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "traefikee-redhat-certified",
      "provided_apis": [
        {
          "group": "containo.us",
          "kind": "Traefikee",
          "plural": "traefikees",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:2197c7544027a17debbe0ededc166610d42d90bf957b8ae725bcd27ccf53778f",
          "image": "registry.connect.redhat.com/containous/traefikee-operator@sha256:2197c7544027a17debbe0ededc166610d42d90bf957b8ae725bcd27ccf53778f",
          "name": "traefikee-operator-2197c7544027a17debbe0ededc166610d42d90bf957b8ae725bcd27ccf53778f-annotation"
        },
        {
          "digest": "sha256:2197c7544027a17debbe0ededc166610d42d90bf957b8ae725bcd27ccf53778f",
          "image": "registry.connect.redhat.com/containous/traefikee-operator@sha256:2197c7544027a17debbe0ededc166610d42d90bf957b8ae725bcd27ccf53778f",
          "name": "ansible"
        },
        {
          "digest": "sha256:2197c7544027a17debbe0ededc166610d42d90bf957b8ae725bcd27ccf53778f",
          "image": "registry.connect.redhat.com/containous/traefikee-operator@sha256:2197c7544027a17debbe0ededc166610d42d90bf957b8ae725bcd27ccf53778f",
          "name": "operator"
        },
        {
          "digest": "sha256:86b5cce4168ed056f3d43b121ac2a4533304b857004749d80a30d6c72ede2c40",
          "image": "registry.connect.redhat.com/containous/traefikee@sha256:86b5cce4168ed056f3d43b121ac2a4533304b857004749d80a30d6c72ede2c40",
          "name": "traefikee"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.0.2",
      "version_original": "2.0.2"
    },
    {
      "_id": "5fcf5de1c838eab12d2cec82",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/storware/vprotect-operator-bundle@sha256:119f046b27bcf6bc70b1f04d56fe86e8d1c223c8c5ba238f323821a4c14b4bae",
      "bundle_path_digest": "sha256:119f046b27bcf6bc70b1f04d56fe86e8d1c223c8c5ba238f323821a4c14b4bae",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2020-12-08T11:05:05.497000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "vprotect-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:28:22.442000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "vprotect-operator",
      "provided_apis": [
        {
          "group": "vprotect.storware.com",
          "kind": "VProtectDBServerNode",
          "plural": "vprotectdbservernodes",
          "version": "v1alpha1"
        }
      ],
      "related_images": [],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "5fcf5de26667346792627cdf",
      "alm_examples": [
        {
          "kind": "WavefrontProxy",
          "metadata": {
            "name": "example-wavefrontproxy",
            "namespace": "wavefront"
          },
          "spec": {
            "enableAutoUpgrade": false,
            "image": "registry.connect.redhat.com/wavefronthq/proxy@sha256:5f3e0e9e3768942d6ad0c264213ae5a68d699ad3ca3e8014aed6832b8fb5efc3",
            "openshift": true,
            "storageClaimName": "wavefront-proxy-storage",
            "token": "<TOKEN>",
            "url": "<https://YOUR_CLUSTER.wavefront.com/api/>"
          }
        },
        {
          "kind": "WavefrontCollector",
          "metadata": {
            "name": "wavefront-collector",
            "namespace": "wavefront"
          },
          "spec": {
            "daemon": true,
            "enableAutoUpgrade": false,
            "env": [
              {
                "name": "HOST_PROC",
                "value": "/host/proc"
              },
              {
                "name": "POD_NODE_NAME",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "spec.nodeName"
                  }
                }
              },
              {
                "name": "POD_NAMESPACE_NAME",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "metadata.namespace"
                  }
                }
              }
            ],
            "image": "registry.connect.redhat.com/wavefronthq/wavefront-kubernetes-collector@sha256:25d54158557692b21b56f546b321601301cd470f33f560559f6b9620c1231efc",
            "openshift": true,
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node.alpha.kubernetes.io/role",
                "operator": "Exists"
              },
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists"
              }
            ],
            "useOpenshiftDefaultConfig": true
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/wavefronthq/wavefront-operator-bundle@sha256:a1cba5d7638a711eaf477dccff47d7a1bb83490c2bb05371a950b8e593bc59f4",
      "bundle_path_digest": "sha256:a1cba5d7638a711eaf477dccff47d7a1bb83490c2bb05371a950b8e593bc59f4",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2020-12-08T11:05:06.856000+00:00",
      "csv_description": "Wavefront OpenShift Operator automatically deploys Wavefront Collector for Kubernetes and Wavefront Proxy, enabling developers and OpenShift operators to get automated observability across the OpenShift environment, including containerized applications, Kubernetes, and underlying infrastructure. \n\nThis Operator deploys two Custom Resources Definitions:\n\n* **Wavefront Proxy:-** A Wavefront proxy ingests metrics and forwards them to the Wavefront service in a secure, fast, and reliable manner. After you install a proxy in your environment, it can handle thousands of simultaneous clients. Your data collection agents or custom code send data to the proxy, which consolidates points into configurable batches and sends the data to the Wavefront service.\n\n* **Wavefront Collector:-** With zero-configuration installation, the Wavefront Collector for Kubernetes auto-discovers and enables monitoring of Kubernetes, infrastructure, and Kubernetes workloads by sending full-stack - Kubernetes clusters, worker nodes, system, Kubernetes and Docker KPI, RED/USE of each layer and custom applications metrics to Wavefront.\n\n### Prerequisite\n\n* A Wavefront API token is needed to configure Wavefront Proxy.  Refer [Generating an API Token] (https://docs.wavefront.com/users_account_managing.html#generating-an-api-token) for generating a token.\n\n### Installing Wavefront Operator using default values\n\n* Create project with name *wavefront* in Openshift and install Wavefront Operator into it.  \n* Create Wavefront Proxy by providing Wavefront API token and URL in the Wavefront Proxy definition. \n* Create Wavefront Collector.\n\n### Advanced Options\n\nRefer Wavefront Operator [docs] (https://github.com/wavefrontHQ/wavefront-operator/blob/master/docs/openshift-operator.md) for configuring Wavefront Proxy and Wavefront Collector using advanced configuration parameters.\n",
      "csv_display_name": "Wavefront Operator",
      "csv_metadata_description": "Wavefront OpenShift Operator automatically deploys Wavefront Collector for Kubernetes and Wavefront Proxy.",
      "csv_name": "wavefront-operator.v0.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:47:55.130000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "wavefront-operator",
      "provided_apis": [
        {
          "group": "wavefront.com",
          "kind": "WavefrontCollector",
          "plural": "wavefrontcollectors",
          "version": "v1alpha1"
        },
        {
          "group": "wavefront.com",
          "kind": "WavefrontProxy",
          "plural": "wavefrontproxies",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:5ddd6c4cd765f5fe1eb5aac46013ca7b925e3ca99ae63681cab068fa3cbac8a6",
          "image": "registry.connect.redhat.com/wavefronthq/wavefront-operator@sha256:5ddd6c4cd765f5fe1eb5aac46013ca7b925e3ca99ae63681cab068fa3cbac8a6",
          "name": "wavefront-operator-5ddd6c4cd765f5fe1eb5aac46013ca7b925e3ca99ae63681cab068fa3cbac8a6-annotation"
        },
        {
          "digest": "sha256:5ddd6c4cd765f5fe1eb5aac46013ca7b925e3ca99ae63681cab068fa3cbac8a6",
          "image": "registry.connect.redhat.com/wavefronthq/wavefront-operator@sha256:5ddd6c4cd765f5fe1eb5aac46013ca7b925e3ca99ae63681cab068fa3cbac8a6",
          "name": "wavefront-operator"
        },
        {
          "digest": "sha256:25d54158557692b21b56f546b321601301cd470f33f560559f6b9620c1231efc",
          "image": "registry.connect.redhat.com/wavefronthq/wavefront-kubernetes-collector@sha256:25d54158557692b21b56f546b321601301cd470f33f560559f6b9620c1231efc",
          "name": "wavefront-kubernetes-collector-25d54158557692b21b56f546b321601301cd470f33f560559f6b9620c1231efc-annotation"
        },
        {
          "digest": "sha256:5f3e0e9e3768942d6ad0c264213ae5a68d699ad3ca3e8014aed6832b8fb5efc3",
          "image": "registry.connect.redhat.com/wavefronthq/proxy@sha256:5f3e0e9e3768942d6ad0c264213ae5a68d699ad3ca3e8014aed6832b8fb5efc3",
          "name": "proxy-5f3e0e9e3768942d6ad0c264213ae5a68d699ad3ca3e8014aed6832b8fb5efc3-annotation"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.1.0",
      "version_original": "0.1.0"
    },
    {
      "_id": "5fcf5de5c838eab12d2cec83",
      "alm_examples": [
        {
          "kind": "YBCluster",
          "metadata": {
            "name": "example-ybcluster",
            "namespace": "yb-operator"
          },
          "spec": {
            "image": {
              "pullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/yugabytedb/yugabyte",
              "tag": "2.1.2.0"
            },
            "master": {
              "enableLoadBalancer": true,
              "gflags": [
                {
                  "key": "default_memory_limit_to_ram_ratio",
                  "value": "0.85"
                },
                {
                  "key": "use_node_to_node_encryption",
                  "value": "true"
                }
              ],
              "masterRPCPort": 7100,
              "masterUIPort": 7000,
              "podManagementPolicy": "Parallel",
              "replicas": 3,
              "resources": {
                "limits": {
                  "cpu": 2,
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": 1,
                  "memory": "2Gi"
                }
              },
              "storage": {
                "count": 1,
                "size": "50Gi",
                "storageClass": "standard"
              }
            },
            "replicationFactor": 3,
            "subresources": {
              "status": {}
            },
            "tls": {
              "enabled": true,
              "rootCA": {
                "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lVUk9vY2RNbUxZU2YwOWRkQTBPa0VWODJtTTRVd0RRWUpLb1pJaHZjTkFRRUwKQlFBd01ERVJNQThHQTFVRUNnd0lXWFZuWVdKNWRHVXhHekFaQmdOVkJBTU1Fa05CSUdadmNpQlpkV2RoWW5sMApaU0JFUWpBZUZ3MHhPVEE1TWpNd09URXhNalphRncweE9URXdNak13T1RFeE1qWmFNREF4RVRBUEJnTlZCQW9NCkNGbDFaMkZpZVhSbE1Sc3dHUVlEVlFRRERCSkRRU0JtYjNJZ1dYVm5ZV0o1ZEdVZ1JFSXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ3hMd3hMeTZjYjhZdS9laFlmU3pteWVqcEw1cjZVSnFmeApWVDF5SUJWSktzNnZPR0QzRWdhSzZaVVZkODBzOGdZU3hzbG1UREh0cnNyWXhCSVMwRXJMVFFsODZVUVd5d1lsCjkvT09FYzdGUVRoWmdsZHRDQmwxNUZSSmp4TGk0LzFJUU1xaU93TDlGM0xjQ3JobXF1bVZKWXJmVGRtNnp4YXkKY0Q3ZlNISGw5Y3phYWFGUGRRa2JZaUt0V0p2cmJ1WEx2QkhleE0rL2FhaVIwY2FBTE94RkhKRlE0N2E1cWwvVQpOcld6emJuVjFZTkRGcEJmLzY2cm95WFh5L2xGMmhWWStYampudlRNL2M0bURWRHRRcDVKVXR6UGhGZ3ZhQngyClUvL2paeFBPblc5dVU4THdFeVdzeWhPNTNWcEREN3VMSHFHYnFrZWd0OVBtTmZsT1QwMlhBZ01CQUFHakpqQWsKTUE0R0ExVWREd0VCL3dRRUF3SUM1REFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VCTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQitXS0NlS3JiYXkwaFNMdjMreUlEWEkvaEw5TEY1N3pDUzNtRU1JTEJXcUVXbUN1R25WVXNFCktSMXA0VzBPSERXbStzTWNtbm1EcUM4U1VZMHlOM2htYnVGWWViZUs5bks0R3IzQ0VtTGk2Q3dxbzJtcWZLVHkKSk9sSU5KZDFFdW1jSlVBUEtmVGNxVkdSWlpITFlHMTVsckpyNjNMaTlYbHhqajlNNEpCejJnd2dsQ3Bqa1BxMwpSazgvYnZSbHhaNVdlNVZ1RUtTckZRNForditkSS9peFpwdjQ3UHY1TTM3bHdLRlQ5amRxbW8zbE82ODNFcEljCnF6bStrclUyb2VhZUphVUFnWlRFU296VUZGb053QzUyTjR3YWlndXo0TU5pa3ZIYWtiTEpEdW9zQTRhQTBnN0sKb2s3K2UvKzlWY0hEUllSaFN5VVhkanB2SmdyVUEyeVYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                "key": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBc1M4TVM4dW5HL0dMdjNvV0gwczVzbm82UythK2xDYW44VlU5Y2lBVlNTck9yemhnCjl4SUdpdW1WRlhmTkxQSUdFc2JKWmt3eDdhN0syTVFTRXRCS3kwMEpmT2xFRnNzR0pmZnpqaEhPeFVFNFdZSlgKYlFnWmRlUlVTWThTNHVQOVNFREtvanNDL1JkeTNBcTRacXJwbFNXSzMwM1p1czhXc25BKzMwaHg1ZlhNMm1taApUM1VKRzJJaXJWaWI2MjdseTd3UjNzVFB2Mm1va2RIR2dDenNSUnlSVU9PMnVhcGYxRGExczgyNTFkV0RReGFRClgvK3VxNk1sMTh2NVJkb1ZXUGw0NDU3MHpQM09KZzFRN1VLZVNWTGN6NFJZTDJnY2RsUC80MmNUenAxdmJsUEMKOEJNbHJNb1R1ZDFhUXcrN2l4NmhtNnBIb0xmVDVqWDVUazlObHdJREFRQUJBb0lCQUJwbEd0elR1dEpEMm9Dcwp6RXpmSlBvOGtTQ3JnQ3FMMDZyMCt0RmNqQzg1TEU4WUJBSHFjb1VSSlA5c3VHa0FxUHoxRmgyaUxqSHRQeFNwCnFOT2FxZm05UVRPVmdHb3cxbnFqaEduZXAwSGxaR0taTXpMdjZQTVNENmhob3Z1ZjRTUjVXblp1ZWhTQUFNRmMKNjNtSDdvSWtkSnF0ZTBrRC9xcVlaQlZaTW5hQ053cGpsQ0dLYmZLbjlDTHpGSUxhckxiNm4zR2x6dmpRTC9nTAphd3VnNlh5WThvcTlEVjBrZkpEV0lVZFRIc1lFYXFHcGNFWkwvNWZPSlVVcTdSSzV2eWxTVmUrWFZ5OE5jZm1sCk4rQUMrcGNwVFRRR2V0SXZsZWpsT1VhUDRTU3FNckdSUVd1Zk5pSG11a1ZtWXo5bUFsN3pRQ2xyWTZEODNBOUwKQkVkMmNYa0NnWUVBMktRVmNhVDlGRFM2ZENPdHZFL2hPUDhSNVAvY21JSjFNMXhKY2hzL1IxcUdjd0RqWkZiRwp0RGFFNVNwVExidjg4d2hKb2FDbWhlbE9renFRaWIrNXNZU2tqZERVTThIUTlhWXk3aGlxT29jL3dFUlB6ZGRRCmUyelhYRHd2QWQ2VGc3OWpLV2NhOWZxcUw0azRWOVBtbHlrVjRUVDVoaHBhVkFqbi82VDZGYXNDZ1lFQTBWL1MKT0JSdzQraEIwU0JiUU1rNTcxdk1mUEdtR0dLb1BPRWRsRzBCY0RsZTF3Wk5yQ01mYVJWdUFMOFFuQ3ZOZXg2Two1UEtUN0tOeXh5Q21IOWlaQXZjeGRjbHF5aHNncHVtTDhhM0tsb1RuSU9vSHdobUVhMWxoVCtHY01QZzEvVTl4ClVqZEY2Y0tmSFFJd2FYYkNHUTVzaFhBUU0yVU5HbStYa0ZmeTQ4VUNnWUJ3d0cxOHVVOFNmaUx3b1VVaDlqMFYKQ2dRSk9IVmFWc09pMkl4TlBBc2lHdVpRNG94Mnc0Y2xjaDZXbXdHeGt0NmlxcFNQNzJuYjFrS1Q4KzRZRTFZVgpJeUQxd2xNL0lNZWRva050a2g2KzJYZC9uTTRnSnNqM2cvMU9QdkNFTzVCeENHSVd3VmZSNEFWRk9saTl0VWFWCk04ZjBienJTNWRKUFhGZEt3VlY3Z3dLQmdBak5NV1lnSGRyRzBiVjcyYm93ZTFuL2p1b1ZzbmpGOVBLU09BOGMKUWZvNHZ5N2syZkVKalBGNjhDUGg1RTNjWFlmMmNlVlgrVFh5YlFuSDZwUGVKQmlHMGJKMDVDTlkzcGVGcTlkZQpDZTBuNnh0c0d5VmlzemxjQ1lZMUlyN0FRR3pFb1N2bW5PN0Z1ckNhZmZTQkJJblBIR3JEbWpxKzNiMGx3Y1pVCm5DWk5Bb0dCQUpJYmZKSVNkbFlBalRwYnRVbVd0K2tlemNlWVdsUkxENHNOcWx2SWQ0U2JUbmEwR2FRSWRVSHIKWWU5RjhpTVgweWh1WWhzUXoraHlkZDhCVW44TXgwRVN6c2g3d0tpak5jenJpV3JUODlmYmlxVUpocFZvWUhWNwpQVExTZ1pSUDFyUU9UekpGVEkzdjMyNkg1dzFlZzJ0NUFOcnRWenFYTng4N2FOTXQwWGNQCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
              }
            },
            "tserver": {
              "enableLoadBalancer": true,
              "gflags": [
                {
                  "key": "default_memory_limit_to_ram_ratio",
                  "value": "0.85"
                },
                {
                  "key": "use_node_to_node_encryption",
                  "value": "true"
                }
              ],
              "podManagementPolicy": "Parallel",
              "replicas": 3,
              "resources": {
                "limits": {
                  "cpu": 2,
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": 1,
                  "memory": "2Gi"
                }
              },
              "storage": {
                "count": 1,
                "size": "50Gi",
                "storageClass": "standard"
              },
              "tserverRPCPort": 9100,
              "tserverUIPort": 9000,
              "ycqlPort": 9042,
              "yedisPort": 6379,
              "ysqlPort": 5433
            }
          }
        },
        {
          "kind": "YBCluster",
          "metadata": {
            "name": "yb-test-1",
            "namespace": "yb-demo"
          },
          "spec": {
            "master": {
              "replicas": 3,
              "storage": {
                "size": "1Gi"
              }
            },
            "replicationFactor": 3,
            "tserver": {
              "replicas": 3,
              "storage": {
                "count": 1,
                "size": "1Gi"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/yugabytedb/yugabyte-operator-bundle@sha256:75af634b49ff92fa9cad7a20a9d6d86689624b15bed4c84889b677c288b8c036",
      "bundle_path_digest": "sha256:75af634b49ff92fa9cad7a20a9d6d86689624b15bed4c84889b677c288b8c036",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2020-12-08T11:05:09.133000+00:00",
      "csv_description": "\nYugabyteDB is distributed SQL database serving both scale-out RDBMS and internet-scale OLTP workloads with low query latency, \nextreme resilience against failures and global data distribution. YugabyteDB Kubernetes offering provides a\nkubernetes native custom resource viz. `ybclusters.yugabyte.com` for deploying and managing the YugabyteDB Clusters.\n\n### Installing YugabyteDB\n\nOnce you've installed the Operator, you can create YugabyteDB cluster using custom resource `ybcluster`. For assistance please refer to \n[deploy yugabyteDB cluster using CRD](https://docs.yugabyte.com/latest/deploy/kubernetes/single-zone/oss/yugabyte-operator/)\n\n### Supported parameters\n* **Image Override** - Mention YugabyteDB Docker image attributes such as repository, tag and pullPolicy under image.\n* **Replication Factor** - The desired replication factor for YugabyteDB Cluster. Default RF-3.\n* **Master Pod Count** - The desired pod count for master. Default is 3\n* **T-server Pod Count** - The desired pod count for tserver. Default is 3.\n* **Enable TLS** - Enable TLS encryption for YugabyteDB, if desired. It is disabled by default. To enable TLS communication \n                   refer to [configuring TLS](https://docs.yugabyte.com/latest/deploy/kubernetes/single-zone/oss/yugabyte-operator/#tls).\n\n\n### Getting Started\n\nHere are a few resources for getting started with YugaByte DB:\n\n* [Quick start guide](http://docs.yugabyte.com/latest/quick-start/) - install, create a local cluster and read/write from YugaByte DB.\n* [Explore core features](https://docs.yugabyte.com/latest/explore/) - automatic sharding & re-balancing, linear scalability, fault tolerance, tunable reads etc.\n* [Ecosystem integrations](https://docs.yugabyte.com/latest/develop/ecosystem-integrations/) - integrations with Apache Kafka/KSQL, Apache Spark, JanusGraph, KairosDB, Presto and more.\n* [Real world apps](https://docs.yugabyte.com/latest/develop/realworld-apps/) - sample real-world, end-to-end applications built using YugaByte DB.\n* [Architecture docs](https://docs.yugabyte.com/latest/architecture/) - to understand how YugaByte DB was designed and how it works\n\n### Help\n\nCannot find what you are looking for? Have a question? We love to hear from you - [please file a GitHub issue](https://github.com/YugaByte/yugabyte-db/issues) or talk to us live at [Slack](https://www.yugabyte.com/slack).\n",
      "csv_display_name": "Yugabyte Operator",
      "csv_metadata_description": "deploy and manage YugabyteDB clusters using kubernetes CRD ybclusters.yugabyte.com",
      "csv_name": "yugabyte-operator.v0.9.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-04T15:12:21.647000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "yugabyte-operator",
      "provided_apis": [
        {
          "group": "yugabyte.com",
          "kind": "YBCluster",
          "plural": "ybclusters",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:03c1977bb1e9392120e761fea2e6291750a49c0f0eacf5c065d59781358ff3f6",
          "image": "registry.connect.redhat.com/yugabytedb/yugabyte-operator@sha256:03c1977bb1e9392120e761fea2e6291750a49c0f0eacf5c065d59781358ff3f6",
          "name": "yugabyte-operator-03c1977bb1e9392120e761fea2e6291750a49c0f0eacf5c065d59781358ff3f6-annotation"
        },
        {
          "digest": "sha256:03c1977bb1e9392120e761fea2e6291750a49c0f0eacf5c065d59781358ff3f6",
          "image": "registry.connect.redhat.com/yugabytedb/yugabyte-operator@sha256:03c1977bb1e9392120e761fea2e6291750a49c0f0eacf5c065d59781358ff3f6",
          "name": "yugabyte-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.9.0",
      "version_original": "0.9.0"
    },
    {
      "_id": "5fcf5de6fa8a5971b4238e4d",
      "alm_examples": [
        {
          "kind": "YBCluster",
          "metadata": {
            "name": "example-ybcluster",
            "namespace": "yb-operator"
          },
          "spec": {
            "image": {
              "pullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/yugabytedb/yugabyte",
              "tag": "2.1.2.0"
            },
            "master": {
              "enableLoadBalancer": true,
              "gflags": [
                {
                  "key": "default_memory_limit_to_ram_ratio",
                  "value": "0.85"
                },
                {
                  "key": "use_node_to_node_encryption",
                  "value": "true"
                }
              ],
              "masterRPCPort": 7100,
              "masterUIPort": 7000,
              "podManagementPolicy": "Parallel",
              "replicas": 3,
              "resources": {
                "limits": {
                  "cpu": 2,
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": 1,
                  "memory": "2Gi"
                }
              },
              "storage": {
                "count": 1,
                "size": "50Gi",
                "storageClass": "standard"
              }
            },
            "replicationFactor": 3,
            "subresources": {
              "status": {}
            },
            "tls": {
              "enabled": true,
              "rootCA": {
                "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lVUk9vY2RNbUxZU2YwOWRkQTBPa0VWODJtTTRVd0RRWUpLb1pJaHZjTkFRRUwKQlFBd01ERVJNQThHQTFVRUNnd0lXWFZuWVdKNWRHVXhHekFaQmdOVkJBTU1Fa05CSUdadmNpQlpkV2RoWW5sMApaU0JFUWpBZUZ3MHhPVEE1TWpNd09URXhNalphRncweE9URXdNak13T1RFeE1qWmFNREF4RVRBUEJnTlZCQW9NCkNGbDFaMkZpZVhSbE1Sc3dHUVlEVlFRRERCSkRRU0JtYjNJZ1dYVm5ZV0o1ZEdVZ1JFSXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ3hMd3hMeTZjYjhZdS9laFlmU3pteWVqcEw1cjZVSnFmeApWVDF5SUJWSktzNnZPR0QzRWdhSzZaVVZkODBzOGdZU3hzbG1UREh0cnNyWXhCSVMwRXJMVFFsODZVUVd5d1lsCjkvT09FYzdGUVRoWmdsZHRDQmwxNUZSSmp4TGk0LzFJUU1xaU93TDlGM0xjQ3JobXF1bVZKWXJmVGRtNnp4YXkKY0Q3ZlNISGw5Y3phYWFGUGRRa2JZaUt0V0p2cmJ1WEx2QkhleE0rL2FhaVIwY2FBTE94RkhKRlE0N2E1cWwvVQpOcld6emJuVjFZTkRGcEJmLzY2cm95WFh5L2xGMmhWWStYampudlRNL2M0bURWRHRRcDVKVXR6UGhGZ3ZhQngyClUvL2paeFBPblc5dVU4THdFeVdzeWhPNTNWcEREN3VMSHFHYnFrZWd0OVBtTmZsT1QwMlhBZ01CQUFHakpqQWsKTUE0R0ExVWREd0VCL3dRRUF3SUM1REFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VCTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQitXS0NlS3JiYXkwaFNMdjMreUlEWEkvaEw5TEY1N3pDUzNtRU1JTEJXcUVXbUN1R25WVXNFCktSMXA0VzBPSERXbStzTWNtbm1EcUM4U1VZMHlOM2htYnVGWWViZUs5bks0R3IzQ0VtTGk2Q3dxbzJtcWZLVHkKSk9sSU5KZDFFdW1jSlVBUEtmVGNxVkdSWlpITFlHMTVsckpyNjNMaTlYbHhqajlNNEpCejJnd2dsQ3Bqa1BxMwpSazgvYnZSbHhaNVdlNVZ1RUtTckZRNForditkSS9peFpwdjQ3UHY1TTM3bHdLRlQ5amRxbW8zbE82ODNFcEljCnF6bStrclUyb2VhZUphVUFnWlRFU296VUZGb053QzUyTjR3YWlndXo0TU5pa3ZIYWtiTEpEdW9zQTRhQTBnN0sKb2s3K2UvKzlWY0hEUllSaFN5VVhkanB2SmdyVUEyeVYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                "key": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBc1M4TVM4dW5HL0dMdjNvV0gwczVzbm82UythK2xDYW44VlU5Y2lBVlNTck9yemhnCjl4SUdpdW1WRlhmTkxQSUdFc2JKWmt3eDdhN0syTVFTRXRCS3kwMEpmT2xFRnNzR0pmZnpqaEhPeFVFNFdZSlgKYlFnWmRlUlVTWThTNHVQOVNFREtvanNDL1JkeTNBcTRacXJwbFNXSzMwM1p1czhXc25BKzMwaHg1ZlhNMm1taApUM1VKRzJJaXJWaWI2MjdseTd3UjNzVFB2Mm1va2RIR2dDenNSUnlSVU9PMnVhcGYxRGExczgyNTFkV0RReGFRClgvK3VxNk1sMTh2NVJkb1ZXUGw0NDU3MHpQM09KZzFRN1VLZVNWTGN6NFJZTDJnY2RsUC80MmNUenAxdmJsUEMKOEJNbHJNb1R1ZDFhUXcrN2l4NmhtNnBIb0xmVDVqWDVUazlObHdJREFRQUJBb0lCQUJwbEd0elR1dEpEMm9Dcwp6RXpmSlBvOGtTQ3JnQ3FMMDZyMCt0RmNqQzg1TEU4WUJBSHFjb1VSSlA5c3VHa0FxUHoxRmgyaUxqSHRQeFNwCnFOT2FxZm05UVRPVmdHb3cxbnFqaEduZXAwSGxaR0taTXpMdjZQTVNENmhob3Z1ZjRTUjVXblp1ZWhTQUFNRmMKNjNtSDdvSWtkSnF0ZTBrRC9xcVlaQlZaTW5hQ053cGpsQ0dLYmZLbjlDTHpGSUxhckxiNm4zR2x6dmpRTC9nTAphd3VnNlh5WThvcTlEVjBrZkpEV0lVZFRIc1lFYXFHcGNFWkwvNWZPSlVVcTdSSzV2eWxTVmUrWFZ5OE5jZm1sCk4rQUMrcGNwVFRRR2V0SXZsZWpsT1VhUDRTU3FNckdSUVd1Zk5pSG11a1ZtWXo5bUFsN3pRQ2xyWTZEODNBOUwKQkVkMmNYa0NnWUVBMktRVmNhVDlGRFM2ZENPdHZFL2hPUDhSNVAvY21JSjFNMXhKY2hzL1IxcUdjd0RqWkZiRwp0RGFFNVNwVExidjg4d2hKb2FDbWhlbE9renFRaWIrNXNZU2tqZERVTThIUTlhWXk3aGlxT29jL3dFUlB6ZGRRCmUyelhYRHd2QWQ2VGc3OWpLV2NhOWZxcUw0azRWOVBtbHlrVjRUVDVoaHBhVkFqbi82VDZGYXNDZ1lFQTBWL1MKT0JSdzQraEIwU0JiUU1rNTcxdk1mUEdtR0dLb1BPRWRsRzBCY0RsZTF3Wk5yQ01mYVJWdUFMOFFuQ3ZOZXg2Two1UEtUN0tOeXh5Q21IOWlaQXZjeGRjbHF5aHNncHVtTDhhM0tsb1RuSU9vSHdobUVhMWxoVCtHY01QZzEvVTl4ClVqZEY2Y0tmSFFJd2FYYkNHUTVzaFhBUU0yVU5HbStYa0ZmeTQ4VUNnWUJ3d0cxOHVVOFNmaUx3b1VVaDlqMFYKQ2dRSk9IVmFWc09pMkl4TlBBc2lHdVpRNG94Mnc0Y2xjaDZXbXdHeGt0NmlxcFNQNzJuYjFrS1Q4KzRZRTFZVgpJeUQxd2xNL0lNZWRva050a2g2KzJYZC9uTTRnSnNqM2cvMU9QdkNFTzVCeENHSVd3VmZSNEFWRk9saTl0VWFWCk04ZjBienJTNWRKUFhGZEt3VlY3Z3dLQmdBak5NV1lnSGRyRzBiVjcyYm93ZTFuL2p1b1ZzbmpGOVBLU09BOGMKUWZvNHZ5N2syZkVKalBGNjhDUGg1RTNjWFlmMmNlVlgrVFh5YlFuSDZwUGVKQmlHMGJKMDVDTlkzcGVGcTlkZQpDZTBuNnh0c0d5VmlzemxjQ1lZMUlyN0FRR3pFb1N2bW5PN0Z1ckNhZmZTQkJJblBIR3JEbWpxKzNiMGx3Y1pVCm5DWk5Bb0dCQUpJYmZKSVNkbFlBalRwYnRVbVd0K2tlemNlWVdsUkxENHNOcWx2SWQ0U2JUbmEwR2FRSWRVSHIKWWU5RjhpTVgweWh1WWhzUXoraHlkZDhCVW44TXgwRVN6c2g3d0tpak5jenJpV3JUODlmYmlxVUpocFZvWUhWNwpQVExTZ1pSUDFyUU9UekpGVEkzdjMyNkg1dzFlZzJ0NUFOcnRWenFYTng4N2FOTXQwWGNQCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
              }
            },
            "tserver": {
              "enableLoadBalancer": true,
              "gflags": [
                {
                  "key": "default_memory_limit_to_ram_ratio",
                  "value": "0.85"
                },
                {
                  "key": "use_node_to_node_encryption",
                  "value": "true"
                }
              ],
              "podManagementPolicy": "Parallel",
              "replicas": 3,
              "resources": {
                "limits": {
                  "cpu": 2,
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": 1,
                  "memory": "2Gi"
                }
              },
              "storage": {
                "count": 1,
                "size": "50Gi",
                "storageClass": "standard"
              },
              "tserverRPCPort": 9100,
              "tserverUIPort": 9000,
              "ycqlPort": 9042,
              "yedisPort": 6379,
              "ysqlPort": 5433
            }
          }
        },
        {
          "kind": "YBCluster",
          "metadata": {
            "name": "yb-test-1",
            "namespace": "yb-demo"
          },
          "spec": {
            "master": {
              "replicas": 3,
              "storage": {
                "size": "1Gi"
              }
            },
            "replicationFactor": 3,
            "tserver": {
              "replicas": 3,
              "storage": {
                "count": 1,
                "size": "1Gi"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/yugabytedb/yugabyte-operator-bundle@sha256:75af634b49ff92fa9cad7a20a9d6d86689624b15bed4c84889b677c288b8c036",
      "bundle_path_digest": "sha256:75af634b49ff92fa9cad7a20a9d6d86689624b15bed4c84889b677c288b8c036",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2020-12-08T11:05:10.511000+00:00",
      "csv_description": "\nYugabyteDB is distributed SQL database serving both scale-out RDBMS and internet-scale OLTP workloads with low query latency, \nextreme resilience against failures and global data distribution. YugabyteDB Kubernetes offering provides a\nkubernetes native custom resource viz. `ybclusters.yugabyte.com` for deploying and managing the YugabyteDB Clusters.\n\n### Installing YugabyteDB\n\nOnce you've installed the Operator, you can create YugabyteDB cluster using custom resource `ybcluster`. For assistance please refer to \n[deploy yugabyteDB cluster using CRD](https://docs.yugabyte.com/latest/deploy/kubernetes/single-zone/oss/yugabyte-operator/)\n\n### Supported parameters\n* **Image Override** - Mention YugabyteDB Docker image attributes such as repository, tag and pullPolicy under image.\n* **Replication Factor** - The desired replication factor for YugabyteDB Cluster. Default RF-3.\n* **Master Pod Count** - The desired pod count for master. Default is 3\n* **T-server Pod Count** - The desired pod count for tserver. Default is 3.\n* **Enable TLS** - Enable TLS encryption for YugabyteDB, if desired. It is disabled by default. To enable TLS communication \n                   refer to [configuring TLS](https://docs.yugabyte.com/latest/deploy/kubernetes/single-zone/oss/yugabyte-operator/#tls).\n\n\n### Getting Started\n\nHere are a few resources for getting started with YugaByte DB:\n\n* [Quick start guide](http://docs.yugabyte.com/latest/quick-start/) - install, create a local cluster and read/write from YugaByte DB.\n* [Explore core features](https://docs.yugabyte.com/latest/explore/) - automatic sharding & re-balancing, linear scalability, fault tolerance, tunable reads etc.\n* [Ecosystem integrations](https://docs.yugabyte.com/latest/develop/ecosystem-integrations/) - integrations with Apache Kafka/KSQL, Apache Spark, JanusGraph, KairosDB, Presto and more.\n* [Real world apps](https://docs.yugabyte.com/latest/develop/realworld-apps/) - sample real-world, end-to-end applications built using YugaByte DB.\n* [Architecture docs](https://docs.yugabyte.com/latest/architecture/) - to understand how YugaByte DB was designed and how it works\n\n### Help\n\nCannot find what you are looking for? Have a question? We love to hear from you - [please file a GitHub issue](https://github.com/YugaByte/yugabyte-db/issues) or talk to us live at [Slack](https://www.yugabyte.com/slack).\n",
      "csv_display_name": "Yugabyte Operator",
      "csv_metadata_description": "deploy and manage YugabyteDB clusters using kubernetes CRD ybclusters.yugabyte.com",
      "csv_name": "yugabyte-operator.v0.9.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:51:43.479000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "yugabyte-operator",
      "provided_apis": [
        {
          "group": "yugabyte.com",
          "kind": "YBCluster",
          "plural": "ybclusters",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:03c1977bb1e9392120e761fea2e6291750a49c0f0eacf5c065d59781358ff3f6",
          "image": "registry.connect.redhat.com/yugabytedb/yugabyte-operator@sha256:03c1977bb1e9392120e761fea2e6291750a49c0f0eacf5c065d59781358ff3f6",
          "name": "yugabyte-operator-03c1977bb1e9392120e761fea2e6291750a49c0f0eacf5c065d59781358ff3f6-annotation"
        },
        {
          "digest": "sha256:03c1977bb1e9392120e761fea2e6291750a49c0f0eacf5c065d59781358ff3f6",
          "image": "registry.connect.redhat.com/yugabytedb/yugabyte-operator@sha256:03c1977bb1e9392120e761fea2e6291750a49c0f0eacf5c065d59781358ff3f6",
          "name": "yugabyte-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.9.0",
      "version_original": "0.9.0"
    },
    {
      "_id": "5fcf5de8c838eab12d2cec84",
      "alm_examples": [
        {
          "kind": "ZabbixAgent",
          "metadata": {
            "labels": {
              "app": "agent",
              "vendor": "zabbix"
            },
            "name": "zabbix-agent"
          },
          "spec": {
            "active_allow": true,
            "activeservers": "",
            "allow_key": "",
            "allow_privileged": true,
            "buffer#": 100,
            "buffer_send": 5,
            "debug_level": 3,
            "deny_key": "system.run[*]",
            "host_interface": "",
            "host_interface_item": "",
            "hostname": "",
            "hostname_item": "system.hostname",
            "load_module": "",
            "log_remote_commands": true,
            "max_lines_per_second": 20,
            "metadata": "",
            "metadata_item": "",
            "passive_allow": true,
            "passive_servers": "",
            "refresh_active_checks": 120,
            "server_host": "zabbix-server",
            "start_agents": 3,
            "timeout": 3,
            "tls_accept": "unencrypted",
            "tls_ca_file_name": "",
            "tls_cert_file_name": "",
            "tls_cipher_all": "",
            "tls_cipher_cert_13": "",
            "tls_cipher_psk": "",
            "tls_cipherall_13": "",
            "tls_connect": "unencrypted",
            "tls_crl_file_name": "",
            "tls_key_file_name": "",
            "tls_psk_file_name": "",
            "tls_psk_identity": "",
            "tls_server_cert_issuer": "",
            "tls_server_cert_subject": "",
            "tlsciphercert": "",
            "tlscipherpsk13": "",
            "unsafe_user_parameters": false
          }
        },
        {
          "kind": "ZabbixAppliance",
          "metadata": {
            "labels": {
              "app": "appliance",
              "vendor": "zabbix"
            },
            "name": "zabbix-appliance"
          },
          "spec": {
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "server": {
              "cache#": "8M",
              "cache_update_frequency": 60,
              "db_tls_cipher": "",
              "db_tls_cipher13": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "export_file#": "",
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "history_storage_date_index": true,
              "history_storage_types": "",
              "housekeeping_frequency": 1,
              "load_module": "",
              "log_slow_queries": 0,
              "max_housekeeper_delete": 5000,
              "proxy_config_frequency": 3600,
              "proxy_data_frequency": 1,
              "start_alerters": 3,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_escalators": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_lld_processors": 2,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_proxy_pollers": 0,
              "start_timers": 1,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "stats_allowed_ip": "",
              "timeout": 4,
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "trend_cache#": "4M",
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "value_cache#": "8M",
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "web": {
              "db_double_ieee754": true,
              "deny_gui_access": false,
              "enable_web_access_log": true,
              "gui_access_ip_range": "",
              "gui_warning_msg": "Zabbix is under maintenance.",
              "history_storage_types": "",
              "max_execution_time": 300,
              "max_input_time": 300,
              "memory_limit": "128M",
              "post_max#": "16M",
              "server_name": "Kubernetes installation",
              "session_name": "zbx_sessionid",
              "sso_settings": "",
              "timezone": "Europe/Riga",
              "upload_max_filesize": "2M"
            },
            "web_enable_route": true,
            "zabbix_mysql_volumeclaim": "mysql-volume-claim",
            "zabbix_mysqlsecret": "zabbix-mysql-secrets"
          }
        },
        {
          "kind": "ZabbixFull",
          "metadata": {
            "labels": {
              "app": "server",
              "vendor": "zabbix"
            },
            "name": "zabbix-full"
          },
          "spec": {
            "history_storage_url": "",
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "server": {
              "cache#": "8M",
              "cache_update_frequency": 60,
              "db_tls_cipher": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "export_file#": "",
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "history_storage_date_index": true,
              "history_storage_types": "",
              "housekeeping_frequency": 1,
              "load_module": "",
              "log_slow_queries": 0,
              "max_housekeeper_delete": 5000,
              "proxy_config_frequency": 3600,
              "proxy_data_frequency": 1,
              "start_alerters": 3,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_escalators": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_lld_processors": 2,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_proxy_pollers": 0,
              "start_timers": 1,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "stats_allowed_ip": "",
              "timeout": 4,
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_cipher_all": "",
              "tls_cipher_cert_13": "",
              "tls_cipher_psk": "",
              "tls_cipherall_13": "",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tlsciphercert": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "trend_cache#": "4M",
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "value_cache#": "8M",
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "web": {
              "db_cipher_list": "",
              "db_double_ieee754": true,
              "db_encryption": false,
              "db_verify_host": false,
              "deny_gui_access": false,
              "enable_web_access_log": true,
              "gui_access_ip_range": "",
              "gui_warning_msg": "Zabbix is under maintenance.",
              "history_storage_types": "",
              "max_execution_time": 300,
              "max_input_time": 300,
              "memory_limit": "128M",
              "post_max#": "16M",
              "server_name": "Kubernetes installation",
              "session_name": "zbx_sessionid",
              "sso_settings": "",
              "timezone": "Europe/Riga",
              "upload_max_filesize": "2M"
            },
            "web#": 2,
            "web_enable_route": true,
            "zabbix_mysql_volumeclaim": "mysql-volume-claim",
            "zabbix_mysqlsecret": "zabbix-mysql-secrets"
          }
        },
        {
          "kind": "ZabbixProxyMysql",
          "metadata": {
            "labels": {
              "app": "proxy",
              "vendor": "zabbix"
            },
            "name": "zabbix-proxy-mysql"
          },
          "spec": {
            "db_server_port": 3306,
            "internal_db": true,
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "mysql_database": "zabbix_proxy",
            "proxy": {
              "cache#": "8M",
              "config_frequency": 3600,
              "data_sender_frequency": 1,
              "db_tls_cipher": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "enable_remote_commands": false,
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "hostname": "",
              "hostname_item": "system.hostname",
              "housekeeping_frequency": 1,
              "log_remote_commands": true,
              "log_slow_queries": 0,
              "proxy_heartbeat_frequency": 60,
              "proxy_local_buffer": 0,
              "proxy_mode": 0,
              "proxy_offline_buffer": 1,
              "server_host": "zabbix-server",
              "server_port": 10051,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "timeout": 4,
              "tls_accept": "unencrypted",
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_cipher_all": "",
              "tls_cipher_cert_13": "",
              "tls_cipher_psk": "",
              "tls_cipherall_13": "",
              "tls_connect": "unencrypted",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tls_psk_file_name": "",
              "tls_psk_identity": "",
              "tls_server_cert_issuer": "",
              "tls_server_cert_subject": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "zabbix_mysql_volumeclaim": "mysql-volume-claim",
            "zabbix_mysqlsecret": "zabbix-mysql-secrets"
          }
        },
        {
          "kind": "ZabbixProxySqlite",
          "metadata": {
            "labels": {
              "app": "proxy",
              "vendor": "zabbix"
            },
            "name": "zabbix-proxy-sqlite"
          },
          "spec": {
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "proxy": {
              "cache#": "8M",
              "config_frequency": 3600,
              "data_sender_frequency": 1,
              "debug_level": 3,
              "enable_remote_commands": false,
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "hostname": "",
              "hostname_item": "system.hostname",
              "housekeeping_frequency": 1,
              "log_remote_commands": true,
              "log_slow_queries": 0,
              "proxy_heartbeat_frequency": 60,
              "proxy_local_buffer": 0,
              "proxy_mode": 0,
              "proxy_offline_buffer": 1,
              "server_host": "zabbix-server",
              "server_port": 10051,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "timeout": 4,
              "tls_accept": "unencrypted",
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_cipher_all": "",
              "tls_cipher_cert_13": "",
              "tls_cipher_psk": "",
              "tls_cipherall_13": "",
              "tls_connect": "unencrypted",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tls_psk_file_name": "",
              "tls_psk_identity": "",
              "tls_server_cert_issuer": "",
              "tls_server_cert_subject": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "proxy#": 1
          }
        },
        {
          "kind": "ZabbixServer",
          "metadata": {
            "labels": {
              "app": "server",
              "vendor": "zabbix"
            },
            "name": "zabbix-server"
          },
          "spec": {
            "db_server_host": "mysql-server",
            "db_server_port": 3306,
            "history_storage_url": "",
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "mysql_database": "zabbix",
            "server": {
              "cache#": "8M",
              "cache_update_frequency": 60,
              "db_tls_cipher": "",
              "db_tls_cipher13": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "export_file#": "",
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "history_storage_date_index": true,
              "history_storage_types": "",
              "housekeeping_frequency": 1,
              "load_module": "",
              "log_slow_queries": 0,
              "max_housekeeper_delete": 5000,
              "proxy_config_frequency": 3600,
              "proxy_data_frequency": 1,
              "start_alerters": 3,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_escalators": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_lld_processors": 2,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_proxy_pollers": 0,
              "start_timers": 1,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "stats_allowed_ip": "",
              "timeout": 4,
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "trend_cache#": "4M",
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "value_cache#": "8M",
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "web": {
              "db_cipher_list": "",
              "db_double_ieee754": true,
              "db_encryption": false,
              "db_verify_host": false,
              "deny_gui_access": false,
              "enable_web_access_log": true,
              "gui_access_ip_range": "",
              "gui_warning_msg": "Zabbix is under maintenance.",
              "history_storage_types": "",
              "max_execution_time": 300,
              "max_input_time": 300,
              "memory_limit": "128M",
              "post_max#": "16M",
              "server_name": "Kubernetes installation",
              "session_name": "zbx_sessionid",
              "sso_settings": "",
              "timezone": "Europe/Riga",
              "upload_max_filesize": "2M"
            },
            "web#": 2,
            "web_enable_route": true,
            "zabbix_mysqlsecret": "zabbix-mysql-secrets"
          }
        },
        {
          "kind": "ZabbixAgent",
          "metadata": {
            "labels": {
              "app": "agent",
              "vendor": "zabbix"
            },
            "name": "zabbix-agent"
          },
          "spec": {
            "active_allow": true,
            "activeservers": "",
            "allow_key": "",
            "allow_privileged": true,
            "buffer#": 100,
            "buffer_send": 5,
            "debug_level": 3,
            "deny_key": "system.run[*]",
            "host_interface": "",
            "host_interface_item": "",
            "hostname": "",
            "hostname_item": "system.hostname",
            "load_module": "",
            "log_remote_commands": true,
            "max_lines_per_second": 20,
            "metadata": "",
            "metadata_item": "",
            "passive_allow": true,
            "passive_servers": "",
            "refresh_active_checks": 120,
            "server_host": "zabbix-server",
            "start_agents": 3,
            "timeout": 3,
            "tls_accept": "unencrypted",
            "tls_ca_file_name": "",
            "tls_cert_file_name": "",
            "tls_cipher_all": "",
            "tls_cipher_cert_13": "",
            "tls_cipher_psk": "",
            "tls_cipherall_13": "",
            "tls_connect": "unencrypted",
            "tls_crl_file_name": "",
            "tls_key_file_name": "",
            "tls_psk_file_name": "",
            "tls_psk_identity": "",
            "tls_server_cert_issuer": "",
            "tls_server_cert_subject": "",
            "tlsciphercert": "",
            "tlscipherpsk13": "",
            "unsafe_user_parameters": false
          }
        },
        {
          "kind": "ZabbixServer",
          "metadata": {
            "labels": {
              "app": "server",
              "vendor": "zabbix"
            },
            "name": "zabbix-server"
          },
          "spec": {
            "db_server_host": "mysql-server",
            "db_server_port": 3306,
            "history_storage_url": "",
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "mysql_database": "zabbix",
            "server": {
              "cache#": "8M",
              "cache_update_frequency": 60,
              "db_tls_cipher": "",
              "db_tls_cipher13": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "export_file#": "",
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "history_storage_date_index": true,
              "history_storage_types": "",
              "housekeeping_frequency": 1,
              "load_module": "",
              "log_slow_queries": 0,
              "max_housekeeper_delete": 5000,
              "proxy_config_frequency": 3600,
              "proxy_data_frequency": 1,
              "start_alerters": 3,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_escalators": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_lld_processors": 2,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_proxy_pollers": 0,
              "start_timers": 1,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "stats_allowed_ip": "",
              "timeout": 4,
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "trend_cache#": "4M",
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "value_cache#": "8M",
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "web": {
              "db_cipher_list": "",
              "db_double_ieee754": true,
              "db_encryption": false,
              "db_verify_host": false,
              "deny_gui_access": false,
              "enable_web_access_log": true,
              "gui_access_ip_range": "",
              "gui_warning_msg": "Zabbix is under maintenance.",
              "history_storage_types": "",
              "max_execution_time": 300,
              "max_input_time": 300,
              "memory_limit": "128M",
              "post_max#": "16M",
              "server_name": "Kubernetes installation",
              "session_name": "zbx_sessionid",
              "sso_settings": "",
              "timezone": "Europe/Riga",
              "upload_max_filesize": "2M"
            },
            "web#": 2,
            "web_enable_route": true,
            "zabbix_mysqlsecret": "mysql-secrets"
          }
        },
        {
          "kind": "ZabbixProxySqlite",
          "metadata": {
            "labels": {
              "app": "proxy",
              "vendor": "zabbix"
            },
            "name": "zabbix-proxy-sqlite"
          },
          "spec": {
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "proxy": {
              "cache#": "8M",
              "config_frequency": 3600,
              "data_sender_frequency": 1,
              "debug_level": 3,
              "enable_remote_commands": false,
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "hostname": "",
              "hostname_item": "system.hostname",
              "housekeeping_frequency": 1,
              "log_remote_commands": true,
              "log_slow_queries": 0,
              "proxy_heartbeat_frequency": 60,
              "proxy_local_buffer": 0,
              "proxy_mode": 0,
              "proxy_offline_buffer": 1,
              "server_host": "zabbix-server",
              "server_port": 10051,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "timeout": 4,
              "tls_accept": "unencrypted",
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_cipher_all": "",
              "tls_cipher_cert_13": "",
              "tls_cipher_psk": "",
              "tls_cipherall_13": "",
              "tls_connect": "unencrypted",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tls_psk_file_name": "",
              "tls_psk_identity": "",
              "tls_server_cert_issuer": "",
              "tls_server_cert_subject": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "proxy#": 1
          }
        },
        {
          "kind": "ZabbixProxyMysql",
          "metadata": {
            "labels": {
              "app": "proxy",
              "vendor": "zabbix"
            },
            "name": "zabbix-proxy-mysql"
          },
          "spec": {
            "db_server_port": 3306,
            "internal_db": true,
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "mysql_database": "zabbix_proxy",
            "proxy": {
              "cache#": "8M",
              "config_frequency": 3600,
              "data_sender_frequency": 1,
              "db_tls_cipher": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "enable_remote_commands": false,
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "hostname": "",
              "hostname_item": "system.hostname",
              "housekeeping_frequency": 1,
              "log_remote_commands": true,
              "log_slow_queries": 0,
              "proxy_heartbeat_frequency": 60,
              "proxy_local_buffer": 0,
              "proxy_mode": 0,
              "proxy_offline_buffer": 1,
              "server_host": "zabbix-server",
              "server_port": 10051,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "timeout": 4,
              "tls_accept": "unencrypted",
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_cipher_all": "",
              "tls_cipher_cert_13": "",
              "tls_cipher_psk": "",
              "tls_cipherall_13": "",
              "tls_connect": "unencrypted",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tls_psk_file_name": "",
              "tls_psk_identity": "",
              "tls_server_cert_issuer": "",
              "tls_server_cert_subject": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "zabbix_mysql_volumeclaim": "mysql-volume-claim",
            "zabbix_mysqlsecret": "zabbix-mysql-secrets"
          }
        },
        {
          "kind": "ZabbixFull",
          "metadata": {
            "labels": {
              "app": "server",
              "vendor": "zabbix"
            },
            "name": "zabbix-full"
          },
          "spec": {
            "history_storage_url": "",
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "server": {
              "cache#": "8M",
              "cache_update_frequency": 60,
              "db_tls_cipher": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "export_file#": "",
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "history_storage_date_index": true,
              "history_storage_types": "",
              "housekeeping_frequency": 1,
              "load_module": "",
              "log_slow_queries": 0,
              "max_housekeeper_delete": 5000,
              "proxy_config_frequency": 3600,
              "proxy_data_frequency": 1,
              "start_alerters": 3,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_escalators": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_lld_processors": 2,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_proxy_pollers": 0,
              "start_timers": 1,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "stats_allowed_ip": "",
              "timeout": 4,
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_cipher_all": "",
              "tls_cipher_cert_13": "",
              "tls_cipher_psk": "",
              "tls_cipherall_13": "",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tlsciphercert": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "trend_cache#": "4M",
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "value_cache#": "8M",
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "web": {
              "db_cipher_list": "",
              "db_double_ieee754": true,
              "db_encryption": false,
              "db_verify_host": false,
              "deny_gui_access": false,
              "enable_web_access_log": true,
              "gui_access_ip_range": "",
              "gui_warning_msg": "Zabbix is under maintenance.",
              "history_storage_types": "",
              "max_execution_time": 300,
              "max_input_time": 300,
              "memory_limit": "128M",
              "post_max#": "16M",
              "server_name": "Kubernetes installation",
              "session_name": "zbx_sessionid",
              "sso_settings": "",
              "timezone": "Europe/Riga",
              "upload_max_filesize": "2M"
            },
            "web#": 2,
            "web_enable_route": true,
            "zabbix_mysql_volumeclaim": "mysql-volume-claim",
            "zabbix_mysqlsecret": "mysql-secrets"
          }
        },
        {
          "kind": "ZabbixAppliance",
          "metadata": {
            "labels": {
              "app": "appliance",
              "vendor": "zabbix"
            },
            "name": "zabbix-appliance"
          },
          "spec": {
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "server": {
              "cache#": "8M",
              "cache_update_frequency": 60,
              "db_tls_cipher": "",
              "db_tls_cipher13": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "export_file#": "",
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "history_storage_date_index": true,
              "history_storage_types": "",
              "housekeeping_frequency": 1,
              "load_module": "",
              "log_slow_queries": 0,
              "max_housekeeper_delete": 5000,
              "proxy_config_frequency": 3600,
              "proxy_data_frequency": 1,
              "start_alerters": 3,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_escalators": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_lld_processors": 2,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_proxy_pollers": 0,
              "start_timers": 1,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "stats_allowed_ip": "",
              "timeout": 4,
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "trend_cache#": "4M",
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "value_cache#": "8M",
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "web": {
              "db_double_ieee754": true,
              "deny_gui_access": false,
              "enable_web_access_log": true,
              "gui_access_ip_range": "",
              "gui_warning_msg": "Zabbix is under maintenance.",
              "history_storage_types": "",
              "max_execution_time": 300,
              "max_input_time": 300,
              "memory_limit": "128M",
              "post_max#": "16M",
              "server_name": "Kubernetes installation",
              "session_name": "zbx_sessionid",
              "sso_settings": "",
              "timezone": "Europe/Riga",
              "upload_max_filesize": "2M"
            },
            "web_enable_route": true,
            "zabbix_mysql_volumeclaim": "mysql-volume-claim",
            "zabbix_mysqlsecret": "mysql-secrets"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/zabbix/zabbixoperator-certified-bundle@sha256:236d7cc772634f20540dc153f9a7fc66357d7d4852962c5c7b5daff61c99e5c8",
      "bundle_path_digest": "sha256:236d7cc772634f20540dc153f9a7fc66357d7d4852962c5c7b5daff61c99e5c8",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "lts",
      "creation_date": "2020-12-08T11:05:12.238000+00:00",
      "csv_description": "## About this Operator\n\nZabbix helps you to real-time monitoring of millions of metrics collected from tens of thousands of servers, virtual machines and network devices.\nThe Zabbix Operator allows users to easily deploy, manage, and maintain Zabbix deployments on OpenShift. By installing this integration you will be able to deploy Zabbix server / proxies and other components with a single command.\n## Supported Features\n* **Zabbix Server** - Simple Zabbix installation with included Zabbix server, Zabbix web-interface and Zabbix Java Gateway with MySQL database support. The feature does not provide MySQL service and requires an external MySQL database. \n* **Zabbix Server (Full)** - Zabbix installation with included Zabbix server, Zabbix web-interface, Zabbix Java Gateway and MySQL server instance.\n* **Zabbix proxy (SQLite3)** - Very simple way to gain power of Zabbix proxy. The feature has  SQLite3 support for Zabbix proxies and allow to specify amount of proxies. \n* **Zabbix proxy (MySQL)** - Another option of Zabbix proxy. The option support and deliver MySQL database.\n* **Zabbix agent** - Zabbix agent can be deployed on each available node for stability and performance monitoring on remote nodes. It allows to gather metrics with full automation!\n* **Zabbix Appliance** - Zabbix appliance very simple way to test and check Zabbix features. The option provides all core components in one solution. It includes Zabbix server, Zabbix Java Gateway, Zabbix web-interface and MySQL server in deployment. It is very useful for testing Zabbix features!\n## Prerequisites\nAll deployment options are require additional information during deployment. Please, check the following instructions and provide required configuration:\n* **Zabbix Server** - MySQL database host information and MySQL database credentials in specially formatted *Secret*. Additionally it is possible to specify SSL certificates for HTTPS support in *Secret*.\n* **Zabbix Server (Full)** - MySQL database credentials in specially formatted *Secret*. MySQL database volume name information. Additionally it is possible to specify SSL certificates for HTTPS support in *Secret*.\n* **Zabbix proxy (SQLite3)** - Zabbix server host information only.\n* **Zabbix proxy (MySQL)** - MySQL database credentials in specially formatted *Secrets* and Zabbix server host information.\n* **Zabbix agent** - Zabbix server host information only for outgoing and incoming connections. Zabbix agent uses \"privileged\" mode to monitor node resources! For example, running processes.\n* **Zabbix Appliance** - MySQL database credentials in specially formatted *Secret*. MySQL database volume name information. Additionally it is possible to specify SSL certificates for HTTPS support in *Secret*.\n### MySQL credentials\n```\nkind: Secret\napiVersion: v1\nmetadata:\n  name: zabbix-full-secrets\ndata:\n  mysql_root_password: emFiYml4X3N1cGVyX3Jvb3Q= [1]\n  mysql_zabbix_password: emFiYml4X3VzZXJfcGFzc3dvcmQ= [2]\n  mysql_zabbix_username: emFiYml4 [3]\ntype: Opaque\n```\nUsing MySQL root password (*mysqlrootpassword* [1]) Zabbix server / proxy will try to create MySQL database schema with grant permissions to *mysqlzabbixusername* [2] and *mysqlzabbixpassword* [3].\n### SSL certificates for HTTPS\n```\nkind: Secret\napiVersion: v1\nmetadata:\n  name: zabbix-web-sslsecret\ndata:\n  ssl.crt: >-\n   < ssl.crt data>\n  ssl.key: >-\n\t < ssl.key data >\n  dhparam.pem: >-\n   <  dhparam.pem data >\n```\nFiles *ssl.crt*, *ssl.key* and *dhparam.perm* are required for Zabbix web-interface for SSL support.\n",
      "csv_display_name": "Zabbix Operator",
      "csv_metadata_description": "Zabbix operator with multiple deployment variants and different components",
      "csv_name": "zabbix-operator-certified.v0.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T15:10:47.949000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "zabbix-operator-certified",
      "provided_apis": [
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixAppliance",
          "plural": "zabbixappliances",
          "version": "v1alpha1"
        },
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixFull",
          "plural": "zabbixfulls",
          "version": "v1alpha1"
        },
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixProxyMysql",
          "plural": "zabbixproxymysqls",
          "version": "v1alpha1"
        },
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixProxySqlite",
          "plural": "zabbixproxysqlites",
          "version": "v1alpha1"
        },
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixServer",
          "plural": "zabbixservers",
          "version": "v1alpha1"
        },
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixAgent",
          "plural": "zabbixagents",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:c2dee633a667191d3272bf1652412ac1077455f18b90168ddcaa2ac8882f0c66",
          "image": "registry.connect.redhat.com/zabbix/zabbixoperator-certified@sha256:c2dee633a667191d3272bf1652412ac1077455f18b90168ddcaa2ac8882f0c66",
          "name": "zabbixoperator-certified-c2dee633a667191d3272bf1652412ac1077455f18b90168ddcaa2ac8882f0c66-annotation"
        },
        {
          "digest": "sha256:c2dee633a667191d3272bf1652412ac1077455f18b90168ddcaa2ac8882f0c66",
          "image": "registry.connect.redhat.com/zabbix/zabbixoperator-certified@sha256:c2dee633a667191d3272bf1652412ac1077455f18b90168ddcaa2ac8882f0c66",
          "name": "ansible"
        },
        {
          "digest": "sha256:c2dee633a667191d3272bf1652412ac1077455f18b90168ddcaa2ac8882f0c66",
          "image": "registry.connect.redhat.com/zabbix/zabbixoperator-certified@sha256:c2dee633a667191d3272bf1652412ac1077455f18b90168ddcaa2ac8882f0c66",
          "name": "operator"
        },
        {
          "digest": "sha256:2f76e7cbece9d9366b613bcb1079b030ddbcc5e97b2f133b73bd0131f0869725",
          "image": "registry.connect.redhat.com/zabbix/zabbix-server-mysql-50@sha256:2f76e7cbece9d9366b613bcb1079b030ddbcc5e97b2f133b73bd0131f0869725",
          "name": "zbx_server_mysql"
        },
        {
          "digest": "sha256:9f3ba82445ea3d9754f016e21b2ea1c99c1958da928f49aee1b18377af78d365",
          "image": "registry.connect.redhat.com/zabbix/zabbix-web-mysql-50@sha256:9f3ba82445ea3d9754f016e21b2ea1c99c1958da928f49aee1b18377af78d365",
          "name": "zbx_web_mysql"
        },
        {
          "digest": "sha256:a216de448dc10b2797a70f4fc6664c2bd611840b7b6c26f066635d48c606bf06",
          "image": "registry.connect.redhat.com/zabbix/zabbix-java-gateway-50@sha256:a216de448dc10b2797a70f4fc6664c2bd611840b7b6c26f066635d48c606bf06",
          "name": "zbx_java_gateway"
        },
        {
          "digest": "sha256:054ad28ade616642fb50fd38a48df2d00a9c0c6a57df1e367caeceb6469f6c42",
          "image": "registry.connect.redhat.com/zabbix/zabbix-proxy-mysql-50@sha256:054ad28ade616642fb50fd38a48df2d00a9c0c6a57df1e367caeceb6469f6c42",
          "name": "zbx_proxy_mysql"
        },
        {
          "digest": "sha256:713a6223a01ee57efb719d6f491ef779d74104a1bc1b8599eade8b3f4a3318ed",
          "image": "registry.connect.redhat.com/zabbix/zabbix-proxy-sqlite-50@sha256:713a6223a01ee57efb719d6f491ef779d74104a1bc1b8599eade8b3f4a3318ed",
          "name": "zbx_proxy_sqlite"
        },
        {
          "digest": "sha256:229562a27ed45319ef17397fe81cac81129c84eccd2c14f6085531a86ef9b87d",
          "image": "registry.connect.redhat.com/zabbix/zabbix-agent-50@sha256:229562a27ed45319ef17397fe81cac81129c84eccd2c14f6085531a86ef9b87d",
          "name": "zbx_agent"
        },
        {
          "digest": "sha256:7236c68c494f572edf64ced85c3a083b7eafff1c6562e95bdc50e50c37e3e3bf",
          "image": "registry.connect.redhat.com/zabbix/zabbix-appliance-50@sha256:7236c68c494f572edf64ced85c3a083b7eafff1c6562e95bdc50e50c37e3e3bf",
          "name": "zbx_appliance"
        },
        {
          "digest": "sha256:e7541d9fbcb7a71ac8a68cc4efc1806bab74023961c7d3fb562ded320df90c43",
          "image": "registry.redhat.io/rhel8/mysql-80@sha256:e7541d9fbcb7a71ac8a68cc4efc1806bab74023961c7d3fb562ded320df90c43",
          "name": "db_mysql"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.0.2",
      "version_original": "0.0.2"
    },
    {
      "_id": "5fcf5de9c838eab12d2cec85",
      "alm_examples": [
        {
          "kind": "AppDefinition",
          "metadata": {
            "name": "cassandra-test"
          },
          "spec": {
            "namespace": "default",
            "selector": {
              "matchLabels": {
                "app": "cassandra"
              }
            }
          }
        },
        {
          "kind": "ApplicationClone",
          "metadata": {
            "name": "cassandra-2009-02-09--19-52-14-clone"
          },
          "spec": {
            "cloneConfiguration": "dr-us-west-clone"
          }
        },
        {
          "kind": "ApplicationSnapshot",
          "metadata": {
            "name": "cassandra-2009-02-09--19-52-14"
          },
          "spec": {
            "apiObjects": [
              "{\"apiVersion\": \"v1\",\"items\": [{\"apiVersion\": \"v1\",\"kind\": \"ConfigMap\",\"metadata\": {...",
              "{\"apiVersion\": \"v1\",\"items\": [{\"apiVersion\": \"apps\u000b1\",\"kind\": \"Deployment\",\"metadata\": {..."
            ],
            "snapshotConfiguration": "dr-us-west-snapshot",
            "vpsas": [
              {
                "name": "example-vpsa",
                "provisioner": "csi.zadara.com",
                "snapshots": [
                  {
                    "cg": "vol-0000001"
                  }
                ]
              }
            ]
          }
        },
        {
          "kind": "CloneConfiguration",
          "metadata": {
            "name": "dr-us-west-clone"
          },
          "spec": {
            "appSnapshot": {
              "name": "mysql-snap-2020-01-26"
            },
            "dryRun": false,
            "prefix": "clone-",
            "targetNamespace": "test"
          }
        },
        {
          "kind": "Invoker",
          "metadata": {
            "name": "mysql-daily-backup"
          },
          "spec": {
            "snapshotConfiguration": {
              "name": "dr-us-west-snapshot"
            }
          }
        },
        {
          "kind": "SnapshotConfiguration",
          "metadata": {
            "name": "dr-us-west-snapshot"
          },
          "spec": {
            "appDefinition": "cassandra-test",
            "policies": [
              "daily-snapshot-for-month",
              "weekly-snapshot-for-year"
            ]
          }
        },
        {
          "kind": "SnapshotPolicy",
          "metadata": {
            "name": "daily-snapshot-for-month"
          },
          "spec": {
            "keepLast": 7,
            "schedule": "0 0 * * *"
          }
        },
        {
          "kind": "Vpsa",
          "metadata": {
            "name": "example-vpsa"
          },
          "spec": {
            "csi": {
              "autoExpandSupport": true,
              "iscsiMode": "rootfs",
              "livenessProbe": {
                "httpGet": {
                  "port": 9808
                },
                "periodSeconds": 5
              },
              "provisioner": "csi.zadara.com"
            },
            "hostname": "example.vpsas.zadara.com",
            "https": true,
            "token": "EXAMPLETOKEN-1234"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/zadara/zadara-operator-bundle@sha256:a7dc6b758b849f4eab38f38b5bb0c99e951d1ed5c59143337e6c5efb5973f321",
      "bundle_path_digest": "sha256:a7dc6b758b849f4eab38f38b5bb0c99e951d1ed5c59143337e6c5efb5973f321",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "alpha",
      "creation_date": "2020-12-08T11:05:13.612000+00:00",
      "csv_description": "The Zadara Operator provides storage and data management for K8s stateful\napplications as a cloud-native service, while leveraging Zadara's enterprise\ngrade Storage-as-a-Service VPSA for provisioning and managing persistent\nstorage.\n\nZadara Operator provides:\n* Zadara CSI driver automatic installation and management\n* Automatic K8s application discovery\n* Application protection using an intelligent and efficient snapshots mechanism.\n* Custom snapshots scheduling for application protection\n* Instant application clone\n* CLI for centralized management for Zadara's K8s assets\n\n## About Zadara\n\nZadara provides companies and service providers agile, secure\nenterprise storage as a consumption-based service. Any location, any\ndata type, any protocol. Zadara offers resource isolation, exceptional\nsecurity, and management control.\n\nMore information at: [Zadara Kubernetes Operator](https://github.com/zadarastorage/zadara-operator)\n",
      "csv_display_name": "Zadara Operator",
      "csv_metadata_description": "Zadara Operator enables storage provisioning via Zadara's CSI driver and data management capabilities for K8s applications.",
      "csv_name": "zoperator.v0.3.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T15:12:10.860000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "zoperator",
      "provided_apis": [
        {
          "group": "zadara.com",
          "kind": "Invoker",
          "plural": "invokers",
          "version": "v1alpha1"
        },
        {
          "group": "zadara.com",
          "kind": "SnapshotConfiguration",
          "plural": "snapshotconfigurations",
          "version": "v1alpha1"
        },
        {
          "group": "zadara.com",
          "kind": "SnapshotPolicy",
          "plural": "snapshotpolicies",
          "version": "v1alpha1"
        },
        {
          "group": "zadara.com",
          "kind": "Vpsa",
          "plural": "vpsas",
          "version": "v1alpha1"
        },
        {
          "group": "zadara.com",
          "kind": "AppDefinition",
          "plural": "appdefinitions",
          "version": "v1alpha1"
        },
        {
          "group": "zadara.com",
          "kind": "ApplicationClone",
          "plural": "applicationclones",
          "version": "v1alpha1"
        },
        {
          "group": "zadara.com",
          "kind": "ApplicationSnapshot",
          "plural": "applicationsnapshots",
          "version": "v1alpha1"
        },
        {
          "group": "zadara.com",
          "kind": "CloneConfiguration",
          "plural": "cloneconfigurations",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:54c23abbf75ee85939e9b87c813258b88a376586643bae6e96235590e3c8babe",
          "image": "registry.connect.redhat.com/zadara/zadara-operator@sha256:54c23abbf75ee85939e9b87c813258b88a376586643bae6e96235590e3c8babe",
          "name": "zadara-operator-54c23abbf75ee85939e9b87c813258b88a376586643bae6e96235590e3c8babe-annotation"
        },
        {
          "digest": "sha256:54c23abbf75ee85939e9b87c813258b88a376586643bae6e96235590e3c8babe",
          "image": "registry.connect.redhat.com/zadara/zadara-operator@sha256:54c23abbf75ee85939e9b87c813258b88a376586643bae6e96235590e3c8babe",
          "name": "zoperator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.3.6",
      "version_original": "0.3.6"
    },
    {
      "_id": "5fd7a192e159c6759ea46831",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/data-explorer-operator-bundle@sha256:29de0c8f38adb379957ec2564eea036e4f839980377e52c49f8b462e3033c7aa",
      "bundle_path_digest": "sha256:29de0c8f38adb379957ec2564eea036e4f839980377e52c49f8b462e3033c7aa",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2020-12-14T17:32:02.687000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "data-explorer-operator.v0.1.2",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T16:38:07.898000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "data-explorer-operator-certified",
      "provided_apis": [
        {
          "group": "data-explorer.com",
          "kind": "DashboardWithJupyterHub",
          "plural": "dashboardwithjupyterhubs",
          "version": "v1alpha1"
        }
      ],
      "related_images": [],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.1.2",
      "version_original": "0.1.2"
    },
    {
      "_id": "5fd7a521e0860b64ba30487f",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/data-explorer-operator-bundle@sha256:29de0c8f38adb379957ec2564eea036e4f839980377e52c49f8b462e3033c7aa",
      "bundle_path_digest": "sha256:29de0c8f38adb379957ec2564eea036e4f839980377e52c49f8b462e3033c7aa",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2020-12-14T17:47:13.508000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "data-explorer-operator.v0.1.2",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:19:02.198000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "data-explorer-operator-certified",
      "provided_apis": [
        {
          "group": "data-explorer.com",
          "kind": "DashboardWithJupyterHub",
          "version": "v1alpha1"
        }
      ],
      "related_images": [],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.1.2",
      "version_original": "0.1.2"
    },
    {
      "_id": "5fd9082f9664a4a4f7aa43de",
      "alm_examples": [
        {
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "adminPassword": "Password1",
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "enforcer": {
              "enforceMode": true
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "platform": "openshift",
              "requirements": true
            },
            "route": true,
            "runAsNonRoot": false,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "platform": "openshift",
              "serviceAccount": "aqua-sa"
            },
            "runAsNonRoot": false
          }
        },
        {
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa"
            },
            "token": "token"
          }
        },
        {
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "password",
                "name": "aqua-aqua-db"
              }
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "aqua-db",
              "port": 5432,
              "username": "postgres"
            },
            "infra": {
              "namespace": "aqua",
              "platform": "openshift",
              "serviceAccount": "aqua-sa"
            },
            "runAsNonRoot": false
          }
        },
        {
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "Password1",
              "username": "administrator"
            },
            "runAsNonRoot": false
          }
        },
        {
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "adminPassword": "Password1",
            "common": {
              "databaseSecret": {
                "key": "password",
                "name": "aqua-aqua-db"
              }
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "aqua-db",
              "port": 5432,
              "username": "postgres"
            },
            "infra": {
              "namespace": "aqua",
              "platform": "openshift",
              "serviceAccount": "aqua-sa"
            },
            "runAsNonRoot": false
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:e3b33c305cd178151b2d61fe3fd7e17285179087e65fc7d9ff710b37fcecc256",
      "bundle_path_digest": "sha256:e3b33c305cd178151b2d61fe3fd7e17285179087e65fc7d9ff710b37fcecc256",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2020-12-15T19:02:07.570000+00:00",
      "csv_description": "The Aqua Security Operator is used to deploy and manage the Aqua Cloud Native Security Platform (CSP) and its components:\n* Server (aka \"console\")\n* Database (optional; you can map an external database as well)\n* Gateway\n* Enforcer\n* Scanner\n\nUse the Aqua Operator to:\n* Deploy Aqua CSP on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua CSP components\n* Automatically scale the number of Aqua scanners based on the number of images in the scan queue\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/master/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nMake sure you have a license and access to the Aqua registry. To obtain a license, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n\nIt is advised that you read about the [Aqua Environment and Configuration](https://docs.aquasec.com/docs/purpose-of-this-section) before deploying and using the Operator.\n\n## Deploying the Aqua Operator\n\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/master/docs/DeployOpenShiftOperator.md).\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v5.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-04T14:36:31.509000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [],
      "related_images": [
        {
          "digest": "sha256:498825a0deb6405ba9d92a447768f93961590616229688aba5161c639e9798c3",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:498825a0deb6405ba9d92a447768f93961590616229688aba5161c639e9798c3",
          "name": "aquasec-498825a0deb6405ba9d92a447768f93961590616229688aba5161c639e9798c3-annotation"
        },
        {
          "digest": "sha256:498825a0deb6405ba9d92a447768f93961590616229688aba5161c639e9798c3",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:498825a0deb6405ba9d92a447768f93961590616229688aba5161c639e9798c3",
          "name": "aqua-operator"
        },
        {
          "digest": "sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "image": "registry.connect.redhat.com/aquasec/database@sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "name": "database"
        },
        {
          "digest": "sha256:4c1613f7205ea53880ee2d0e1952c081aea6e69404c607d1aaa07521791de4af",
          "image": "registry.connect.redhat.com/aquasec/gateway@sha256:4c1613f7205ea53880ee2d0e1952c081aea6e69404c607d1aaa07521791de4af",
          "name": "gateway"
        },
        {
          "digest": "sha256:3fbb9a05010ddce79ded29a5ed52aa25c17e60eede24d964599f2025c1f5d53a",
          "image": "registry.connect.redhat.com/aquasec/console@sha256:3fbb9a05010ddce79ded29a5ed52aa25c17e60eede24d964599f2025c1f5d53a",
          "name": "server"
        },
        {
          "digest": "sha256:aa02423c62b7d7ec56439c263761dbf975901bf3b6cd0c61f10833bc42329633",
          "image": "registry.connect.redhat.com/aquasec/scanner@sha256:aa02423c62b7d7ec56439c263761dbf975901bf3b6cd0c61f10833bc42329633",
          "name": "scanner"
        },
        {
          "digest": "sha256:b9d24aeaff3074e345eb9ccd694d480cc92e457ca4bcbe96e80051c2d06ead44",
          "image": "registry.connect.redhat.com/aquasec/enforcer@sha256:b9d24aeaff3074e345eb9ccd694d480cc92e457ca4bcbe96e80051c2d06ead44",
          "name": "enforcer"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "5.0.0",
      "version_original": "5.0.0"
    },
    {
      "_id": "5fd908367639f675dcb2ddf8",
      "alm_examples": [
        {
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "adminPassword": "Password1",
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "enforcer": {
              "enforceMode": true
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "platform": "openshift",
              "requirements": true
            },
            "route": true,
            "runAsNonRoot": false,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "platform": "openshift",
              "serviceAccount": "aqua-sa"
            },
            "runAsNonRoot": false
          }
        },
        {
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa"
            },
            "token": "token"
          }
        },
        {
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "password",
                "name": "aqua-aqua-db"
              }
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "aqua-db",
              "port": 5432,
              "username": "postgres"
            },
            "infra": {
              "namespace": "aqua",
              "platform": "openshift",
              "serviceAccount": "aqua-sa"
            },
            "runAsNonRoot": false
          }
        },
        {
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "Password1",
              "username": "administrator"
            },
            "runAsNonRoot": false
          }
        },
        {
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "adminPassword": "Password1",
            "common": {
              "databaseSecret": {
                "key": "password",
                "name": "aqua-aqua-db"
              }
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "aqua-db",
              "port": 5432,
              "username": "postgres"
            },
            "infra": {
              "namespace": "aqua",
              "platform": "openshift",
              "serviceAccount": "aqua-sa"
            },
            "runAsNonRoot": false
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:e3b33c305cd178151b2d61fe3fd7e17285179087e65fc7d9ff710b37fcecc256",
      "bundle_path_digest": "sha256:e3b33c305cd178151b2d61fe3fd7e17285179087e65fc7d9ff710b37fcecc256",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2020-12-15T19:02:14.118000+00:00",
      "csv_description": "The Aqua Security Operator is used to deploy and manage the Aqua Cloud Native Security Platform (CSP) and its components:\n* Server (aka \"console\")\n* Database (optional; you can map an external database as well)\n* Gateway\n* Enforcer\n* Scanner\n\nUse the Aqua Operator to:\n* Deploy Aqua CSP on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua CSP components\n* Automatically scale the number of Aqua scanners based on the number of images in the scan queue\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/master/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nMake sure you have a license and access to the Aqua registry. To obtain a license, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n\nIt is advised that you read about the [Aqua Environment and Configuration](https://docs.aquasec.com/docs/purpose-of-this-section) before deploying and using the Operator.\n\n## Deploying the Aqua Operator\n\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/master/docs/DeployOpenShiftOperator.md).\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v5.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:22:39.503000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "plural": "aquacsps",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "plural": "aquadatabases",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "plural": "aquaenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "plural": "aquagateways",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "plural": "aquascanners",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "plural": "aquaservers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:498825a0deb6405ba9d92a447768f93961590616229688aba5161c639e9798c3",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:498825a0deb6405ba9d92a447768f93961590616229688aba5161c639e9798c3",
          "name": "aquasec-498825a0deb6405ba9d92a447768f93961590616229688aba5161c639e9798c3-annotation"
        },
        {
          "digest": "sha256:498825a0deb6405ba9d92a447768f93961590616229688aba5161c639e9798c3",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:498825a0deb6405ba9d92a447768f93961590616229688aba5161c639e9798c3",
          "name": "aqua-operator"
        },
        {
          "digest": "sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "image": "registry.connect.redhat.com/aquasec/database@sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "name": "database"
        },
        {
          "digest": "sha256:4c1613f7205ea53880ee2d0e1952c081aea6e69404c607d1aaa07521791de4af",
          "image": "registry.connect.redhat.com/aquasec/gateway@sha256:4c1613f7205ea53880ee2d0e1952c081aea6e69404c607d1aaa07521791de4af",
          "name": "gateway"
        },
        {
          "digest": "sha256:3fbb9a05010ddce79ded29a5ed52aa25c17e60eede24d964599f2025c1f5d53a",
          "image": "registry.connect.redhat.com/aquasec/console@sha256:3fbb9a05010ddce79ded29a5ed52aa25c17e60eede24d964599f2025c1f5d53a",
          "name": "server"
        },
        {
          "digest": "sha256:aa02423c62b7d7ec56439c263761dbf975901bf3b6cd0c61f10833bc42329633",
          "image": "registry.connect.redhat.com/aquasec/scanner@sha256:aa02423c62b7d7ec56439c263761dbf975901bf3b6cd0c61f10833bc42329633",
          "name": "scanner"
        },
        {
          "digest": "sha256:b9d24aeaff3074e345eb9ccd694d480cc92e457ca4bcbe96e80051c2d06ead44",
          "image": "registry.connect.redhat.com/aquasec/enforcer@sha256:b9d24aeaff3074e345eb9ccd694d480cc92e457ca4bcbe96e80051c2d06ead44",
          "name": "enforcer"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "5.0.0",
      "version_original": "5.0.0"
    },
    {
      "_id": "5ff5e989bbf0225b399e2c65",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/datastax/cass-operator-bundle@sha256:c4301602f0ee5f44e496952ee205d33ee339523fcbe95635c7087829e8df161c",
      "bundle_path_digest": "sha256:c4301602f0ee5f44e496952ee205d33ee339523fcbe95635c7087829e8df161c",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-01-06T16:47:05.252000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "cass-operator.v1.4.1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:27:45.494000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "cass-operator",
      "provided_apis": [
        {
          "group": "cassandra.datastax.com",
          "kind": "CassandraDatacenter",
          "plural": "cassandradatacenters",
          "version": "v1beta1"
        }
      ],
      "related_images": [],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.4.1",
      "version_original": "1.4.1"
    },
    {
      "_id": "5ff5e98abbf0225b399e2c66",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/datastax/cass-operator-bundle@sha256:c4301602f0ee5f44e496952ee205d33ee339523fcbe95635c7087829e8df161c",
      "bundle_path_digest": "sha256:c4301602f0ee5f44e496952ee205d33ee339523fcbe95635c7087829e8df161c",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-01-06T16:47:06.005000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "cass-operator.v1.4.1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T16:43:44.537000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "cass-operator",
      "provided_apis": [
        {
          "group": "cassandra.datastax.com",
          "kind": "CassandraDatacenter",
          "plural": "cassandradatacenters",
          "version": "v1beta1"
        }
      ],
      "related_images": [],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.4.1",
      "version_original": "1.4.1"
    },
    {
      "_id": "5ff5e99ef909d6298ed458b7",
      "alm_examples": [
        {
          "kind": "CouchbaseCluster",
          "metadata": {
            "name": "cb-example"
          },
          "spec": {
            "backup": {
              "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:3d0a9de740110b924b1ad5e83bb1e36b308f1b53f9e76a50cffcbeda9d34ea78",
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              },
              "serviceAccountName": "couchbase-backup"
            },
            "buckets": {
              "managed": true,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            },
            "cluster": {
              "analyticsServiceMemoryQuota": "1Gi",
              "autoCompaction": {
                "databaseFragmentationThreshold": {
                  "percent": 30,
                  "size": "1Gi"
                },
                "parallelCompaction": false,
                "timeWindow": {
                  "abortCompactionOutsideWindow": true,
                  "end": "06:00",
                  "start": "02:00"
                },
                "tombstonePurgeInterval": "72h",
                "viewFragmentationThreshold": {
                  "percent": 30,
                  "size": "1Gi"
                }
              },
              "autoFailoverMaxCount": 3,
              "autoFailoverOnDataDiskIssues": true,
              "autoFailoverOnDataDiskIssuesTimePeriod": "120s",
              "autoFailoverServerGroup": false,
              "autoFailoverTimeout": "120s",
              "clusterName": "cb-example",
              "dataServiceMemoryQuota": "256Mi",
              "eventingServiceMemoryQuota": "256Mi",
              "indexServiceMemoryQuota": "256Mi",
              "indexStorageSetting": "memory_optimized",
              "searchServiceMemoryQuota": "256Mi"
            },
            "enablePreviewScaling": false,
            "hibernate": false,
            "hibernationStrategy": "Immediate",
            "image": "registry.connect.redhat.com/couchbase/server@sha256:fd6d9c0ef033009e76d60dc36f55ce7f3aaa942a7be9c2b66c335eabc8f5b11e",
            "logRetentionCount": 20,
            "logRetentionTime": "604800s",
            "monitoring": {
              "prometheus": {
                "enabled": false,
                "image": "registry.connect.redhat.com/couchbase/exporter@sha256:18015c72d17a33a21ea221d48fddf493848fc1ca5702007f289369c5815fb3df"
              }
            },
            "networking": {
              "adminConsoleServiceType": "NodePort",
              "adminConsoleServices": [
                "data"
              ],
              "exposeAdminConsole": true,
              "exposedFeatureServiceType": "NodePort",
              "exposedFeatures": [
                "xdcr"
              ]
            },
            "recoveryPolicy": "PrioritizeDataIntegrity",
            "security": {
              "adminSecret": "cb-example-auth",
              "rbac": {
                "managed": true,
                "selector": {
                  "matchLabels": {
                    "cluster": "cb-example"
                  }
                }
              }
            },
            "servers": [
              {
                "name": "all_services",
                "services": [
                  "data",
                  "index",
                  "query",
                  "search",
                  "eventing",
                  "analytics"
                ],
                "size": 3
              }
            ],
            "upgradeStrategy": "RollingUpgrade",
            "xdcr": {
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            }
          }
        },
        {
          "kind": "CouchbaseBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "default"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "enableIndexReplica": true,
            "evictionPolicy": "valueOnly",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "kind": "CouchbaseEphemeralBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "ephemeral-bucket"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "evictionPolicy": "noEviction",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "kind": "CouchbaseMemcachedBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "memcached-bucket"
          },
          "spec": {
            "enableFlush": false,
            "memoryQuota": "100Mi"
          }
        },
        {
          "kind": "CouchbaseUser",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-user"
          },
          "spec": {
            "authDomain": "local",
            "authSecret": "cb-example-auth",
            "fullName": "My User"
          }
        },
        {
          "kind": "CouchbaseGroup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-group"
          },
          "spec": {
            "roles": [
              {
                "bucket": "default",
                "name": "bucket_admin"
              }
            ]
          }
        },
        {
          "kind": "CouchbaseRoleBinding",
          "metadata": {
            "name": "my-role-binding"
          },
          "spec": {
            "roleRef": {
              "kind": "CouchbaseGroup",
              "name": "my-group"
            },
            "subjects": [
              {
                "kind": "CouchbaseUser",
                "name": "my-user"
              }
            ]
          }
        },
        {
          "kind": "CouchbaseReplication",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-replication"
          },
          "spec": {
            "bucket": "default",
            "compressionType": "Snappy",
            "filterExpression": "",
            "paused": false,
            "remoteBucket": "default"
          }
        },
        {
          "kind": "CouchbaseBackup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-backup"
          },
          "spec": {
            "backOffLimit": 2,
            "backupRetention": "24h",
            "failedJobsHistoryLimit": 3,
            "full": {
              "schedule": "0 3 * * 6"
            },
            "incremental": {
              "schedule": "0 3 * * 1-6"
            },
            "logRetention": "24h",
            "size": "5Gi",
            "strategy": "full_incremental",
            "successfulJobsHistoryLimit": 1
          }
        },
        {
          "kind": "CouchbaseBackupRestore",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-restore"
          },
          "spec": {
            "backOffLimit": 2,
            "backup": "cb-backup",
            "end": {
              "int": 1
            },
            "logRetention": "24h",
            "repo": "cb-example-2020-10-29T19_00_03",
            "start": {
              "int": 1
            }
          }
        },
        {
          "kind": "CouchbaseAutoscaler",
          "metadata": {
            "name": "do.not.create.internal.only"
          },
          "spec": {
            "servers": "internal",
            "size": 2
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/couchbase/operator-bundle@sha256:78656ed0df41696e67429609e3262ec31f5ca9f5ca946300e6a4a6503c1bbd18",
      "bundle_path_digest": "sha256:78656ed0df41696e67429609e3262ec31f5ca9f5ca946300e6a4a6503c1bbd18",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2021-01-06T16:47:26.012000+00:00",
      "csv_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments on OpenShift. By installing this integration you will be able to deply Couchbase Server clusters with a single command.\n\n## Supported Features\n\n* **Automated cluster provisioning** - Deploying a Couchbase Cluster has never been easier. Fill out a Couchbase specific configuration and let the Couchbase Operator take care of provisioning nodes and setting up cluster to your exact specification.\n\n* **On-demand scalability** - Automatically scale your cluster up or down by changing a simple configuration parameter and let the Couchbase Operator handle provisioning of new nodes and joining them into the cluster.\n\n* **Auto-recovery** - Detect Couchbase node failures, rebalance out bad nodes, and bring the cluster back up to the desired capacity. Auto-recovery is completely automated so you can sleep easy through the night knowing that the Couchbase Operator will handle any failures.\n\n* **Geo-distribution** - Replicate your data between datacenters to move data closer to the users who consume it and protect against disaster scenarios where an entire datacenter becomes unavailable.\n\n* **Persistent storage** - Define persistent network-attached storage for each node in your cluster to allow pods to be recovered even if the node they were running on is no longer available.\n\n* **Rack/zone awareness** - Tell the Couchbase Operator about availability zones in your datacenter and let the operator take care of ensuring that nodes in your cluster are deployed equally across each zone.\n\n* **Supportability** - When things go wrong, use the cbopinfo tool provided with the Couchbase Operator to collect relevant data about your Couchbase deployment so that you can quickly address issues.\n\n* **Centralized configuration management** - Manage your configuration centrally with OpenShift. Updates to the configuration are watched by the Couchbase Operator and actions are taken to make the target cluster match the desired configuration.\n## Required Parameters\n* `authSecret` - provide the name of a secret that contains two keys for the `username` and `password` of the super user ([documentation](https://docs.couchbase.com/operator/1.2/couchbase-cluster-config.html))\n\n## About Couchbase Server\n\nBuilt on the most powerful NoSQL technology, Couchbase Server delivers unparalleled performance at scale, in any cloud. With features like memory-first architecture, geo-distributed deployments, and workload isolation, Couchbase Server excels at supporting mission-critical applications at scale while maintaining submillisecond latencies and 99.999% availability. Plus, with the most comprehensive SQL-compatible query language (N1QL), migrating from RDBMS to Couchbase Server is easy with ANSI joins.\n",
      "csv_display_name": "Couchbase Operator",
      "csv_metadata_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments",
      "csv_name": "couchbase-operator.v2.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:11:55.124000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "couchbase-enterprise-certified",
      "provided_apis": [
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackup",
          "plural": "couchbasebackups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseReplication",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseAutoscaler",
          "plural": "couchbaseautoscalers",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackupRestore",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseMemcachedBucket",
          "plural": "couchbasememcachedbuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseRoleBinding",
          "plural": "couchbaserolebindings",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseUser",
          "plural": "couchbaseusers",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCluster",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseEphemeralBucket",
          "plural": "couchbaseephemeralbuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseGroup",
          "plural": "couchbasegroups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseMemcachedBucket",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseRoleBinding",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBucket",
          "plural": "couchbasebuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBucket",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCluster",
          "plural": "couchbaseclusters",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseEphemeralBucket",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseGroup",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseReplication",
          "plural": "couchbasereplications",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseUser",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackupRestore",
          "plural": "couchbasebackuprestores",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackup",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:87f601a4fd68ba8a5fed9a610dc03661addc9db9b4e332bfc4907d754d91c496",
          "image": "registry.connect.redhat.com/couchbase/operator@sha256:87f601a4fd68ba8a5fed9a610dc03661addc9db9b4e332bfc4907d754d91c496",
          "name": "operator-87f601a4fd68ba8a5fed9a610dc03661addc9db9b4e332bfc4907d754d91c496-annotation"
        },
        {
          "digest": "sha256:87f601a4fd68ba8a5fed9a610dc03661addc9db9b4e332bfc4907d754d91c496",
          "image": "registry.connect.redhat.com/couchbase/operator@sha256:87f601a4fd68ba8a5fed9a610dc03661addc9db9b4e332bfc4907d754d91c496",
          "name": "couchbase-operator"
        },
        {
          "digest": "sha256:fd6d9c0ef033009e76d60dc36f55ce7f3aaa942a7be9c2b66c335eabc8f5b11e",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:fd6d9c0ef033009e76d60dc36f55ce7f3aaa942a7be9c2b66c335eabc8f5b11e",
          "name": "couchbase_server"
        },
        {
          "digest": "sha256:3d0a9de740110b924b1ad5e83bb1e36b308f1b53f9e76a50cffcbeda9d34ea78",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:3d0a9de740110b924b1ad5e83bb1e36b308f1b53f9e76a50cffcbeda9d34ea78",
          "name": "couchbase_backup"
        },
        {
          "digest": "sha256:18015c72d17a33a21ea221d48fddf493848fc1ca5702007f289369c5815fb3df",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:18015c72d17a33a21ea221d48fddf493848fc1ca5702007f289369c5815fb3df",
          "name": "couchbase_metrics"
        },
        {
          "digest": "sha256:18015c72d17a33a21ea221d48fddf493848fc1ca5702007f289369c5815fb3df",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:18015c72d17a33a21ea221d48fddf493848fc1ca5702007f289369c5815fb3df",
          "name": "exporter-18015c72d17a33a21ea221d48fddf493848fc1ca5702007f289369c5815fb3df-annotation"
        },
        {
          "digest": "sha256:3d0a9de740110b924b1ad5e83bb1e36b308f1b53f9e76a50cffcbeda9d34ea78",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:3d0a9de740110b924b1ad5e83bb1e36b308f1b53f9e76a50cffcbeda9d34ea78",
          "name": "operator-backup-3d0a9de740110b924b1ad5e83bb1e36b308f1b53f9e76a50cffcbeda9d34ea78-annotation"
        },
        {
          "digest": "sha256:fd6d9c0ef033009e76d60dc36f55ce7f3aaa942a7be9c2b66c335eabc8f5b11e",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:fd6d9c0ef033009e76d60dc36f55ce7f3aaa942a7be9c2b66c335eabc8f5b11e",
          "name": "server-fd6d9c0ef033009e76d60dc36f55ce7f3aaa942a7be9c2b66c335eabc8f5b11e-annotation"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.1.0",
      "version_original": "2.1.0"
    },
    {
      "_id": "5ff5e9a0fb582bef7552630e",
      "alm_examples": [
        {
          "kind": "CouchbaseCluster",
          "metadata": {
            "name": "cb-example"
          },
          "spec": {
            "backup": {
              "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:3d0a9de740110b924b1ad5e83bb1e36b308f1b53f9e76a50cffcbeda9d34ea78",
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              },
              "serviceAccountName": "couchbase-backup"
            },
            "buckets": {
              "managed": true,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            },
            "cluster": {
              "analyticsServiceMemoryQuota": "1Gi",
              "autoCompaction": {
                "databaseFragmentationThreshold": {
                  "percent": 30,
                  "size": "1Gi"
                },
                "parallelCompaction": false,
                "timeWindow": {
                  "abortCompactionOutsideWindow": true,
                  "end": "06:00",
                  "start": "02:00"
                },
                "tombstonePurgeInterval": "72h",
                "viewFragmentationThreshold": {
                  "percent": 30,
                  "size": "1Gi"
                }
              },
              "autoFailoverMaxCount": 3,
              "autoFailoverOnDataDiskIssues": true,
              "autoFailoverOnDataDiskIssuesTimePeriod": "120s",
              "autoFailoverServerGroup": false,
              "autoFailoverTimeout": "120s",
              "clusterName": "cb-example",
              "dataServiceMemoryQuota": "256Mi",
              "eventingServiceMemoryQuota": "256Mi",
              "indexServiceMemoryQuota": "256Mi",
              "indexStorageSetting": "memory_optimized",
              "searchServiceMemoryQuota": "256Mi"
            },
            "image": "registry.connect.redhat.com/couchbase/server@sha256:fd6d9c0ef033009e76d60dc36f55ce7f3aaa942a7be9c2b66c335eabc8f5b11e",
            "logRetentionCount": 20,
            "logRetentionTime": "604800s",
            "monitoring": {
              "prometheus": {
                "enabled": false,
                "image": "registry.connect.redhat.com/couchbase/exporter@sha256:18015c72d17a33a21ea221d48fddf493848fc1ca5702007f289369c5815fb3df"
              }
            },
            "networking": {
              "adminConsoleServiceType": "NodePort",
              "adminConsoleServices": [
                "data"
              ],
              "exposeAdminConsole": true,
              "exposedFeatureServiceType": "NodePort",
              "exposedFeatures": [
                "xdcr"
              ]
            },
            "security": {
              "adminSecret": "cb-example-auth",
              "rbac": {
                "managed": true,
                "selector": {
                  "matchLabels": {
                    "cluster": "cb-example"
                  }
                }
              }
            },
            "servers": [
              {
                "name": "all_services",
                "services": [
                  "data",
                  "index",
                  "query",
                  "search",
                  "eventing",
                  "analytics"
                ],
                "size": 3
              }
            ],
            "xdcr": {
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            }
          }
        },
        {
          "kind": "CouchbaseBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "default"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "enableIndexReplica": true,
            "evictionPolicy": "valueOnly",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "kind": "CouchbaseEphemeralBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "ephemeral-bucket"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "evictionPolicy": "noEviction",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "kind": "CouchbaseMemcachedBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "memcached-bucket"
          },
          "spec": {
            "enableFlush": false,
            "memoryQuota": "100Mi"
          }
        },
        {
          "kind": "CouchbaseUser",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-user"
          },
          "spec": {
            "authDomain": "local",
            "authSecret": "cb-example-auth",
            "fullName": "My User"
          }
        },
        {
          "kind": "CouchbaseGroup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-group"
          },
          "spec": {
            "roles": [
              {
                "bucket": "default",
                "name": "bucket_admin"
              }
            ]
          }
        },
        {
          "kind": "CouchbaseRoleBinding",
          "metadata": {
            "name": "my-role-binding"
          },
          "spec": {
            "roleRef": {
              "kind": "CouchbaseGroup",
              "name": "my-group"
            },
            "subjects": [
              {
                "kind": "CouchbaseUser",
                "name": "my-user"
              }
            ]
          }
        },
        {
          "kind": "CouchbaseReplication",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-replication"
          },
          "spec": {
            "bucket": "default",
            "compressionType": "Snappy",
            "filterExpression": "",
            "paused": false,
            "remoteBucket": "default"
          }
        },
        {
          "kind": "CouchbaseBackup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-backup"
          },
          "spec": {
            "backOffLimit": 2,
            "backupRetention": "24h",
            "failedJobsHistoryLimit": 3,
            "full": {
              "schedule": "0 3 * * 6"
            },
            "incremental": {
              "schedule": "0 3 * * 1-6"
            },
            "logRetention": "24h",
            "size": "5Gi",
            "strategy": "full_incremental",
            "successfulJobsHistoryLimit": 1
          }
        },
        {
          "kind": "CouchbaseBackupRestore",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-restore"
          },
          "spec": {
            "backOffLimit": 2,
            "backup": "cb-backup",
            "end": {
              "int": 1
            },
            "logRetention": "24h",
            "repo": "cb-example-2020-10-29T19_00_03",
            "start": {
              "int": 1
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/couchbase/operator-bundle@sha256:10ec7cafa6c4be66ea634b88e10a2b136fcd3322cad00309a7ccef455679c6ba",
      "bundle_path_digest": "sha256:10ec7cafa6c4be66ea634b88e10a2b136fcd3322cad00309a7ccef455679c6ba",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2021-01-06T16:47:28.385000+00:00",
      "csv_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments on OpenShift. By installing this integration you will be able to deply Couchbase Server clusters with a single command.\n\n## Supported Features\n\n* **Automated cluster provisioning** - Deploying a Couchbase Cluster has never been easier. Fill out a Couchbase specific configuration and let the Couchbase Operator take care of provisioning nodes and setting up cluster to your exact specification.\n\n* **On-demand scalability** - Automatically scale your cluster up or down by changing a simple configuration parameter and let the Couchbase Operator handle provisioning of new nodes and joining them into the cluster.\n\n* **Auto-recovery** - Detect Couchbase node failures, rebalance out bad nodes, and bring the cluster back up to the desired capacity. Auto-recovery is completely automated so you can sleep easy through the night knowing that the Couchbase Operator will handle any failures.\n\n* **Geo-distribution** - Replicate your data between datacenters to move data closer to the users who consume it and protect against disaster scenarios where an entire datacenter becomes unavailable.\n\n* **Persistent storage** - Define persistent network-attached storage for each node in your cluster to allow pods to be recovered even if the node they were running on is no longer available.\n\n* **Rack/zone awareness** - Tell the Couchbase Operator about availability zones in your datacenter and let the operator take care of ensuring that nodes in your cluster are deployed equally across each zone.\n\n* **Supportability** - When things go wrong, use the cbopinfo tool provided with the Couchbase Operator to collect relevant data about your Couchbase deployment so that you can quickly address issues.\n\n* **Centralized configuration management** - Manage your configuration centrally with OpenShift. Updates to the configuration are watched by the Couchbase Operator and actions are taken to make the target cluster match the desired configuration.\n## Required Parameters\n* `authSecret` - provide the name of a secret that contains two keys for the `username` and `password` of the super user ([documentation](https://docs.couchbase.com/operator/1.2/couchbase-cluster-config.html))\n\n## About Couchbase Server\n\nBuilt on the most powerful NoSQL technology, Couchbase Server delivers unparalleled performance at scale, in any cloud. With features like memory-first architecture, geo-distributed deployments, and workload isolation, Couchbase Server excels at supporting mission-critical applications at scale while maintaining submillisecond latencies and 99.999% availability. Plus, with the most comprehensive SQL-compatible query language (N1QL), migrating from RDBMS to Couchbase Server is easy with ANSI joins.\n",
      "csv_display_name": "Couchbase Operator",
      "csv_metadata_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments",
      "csv_name": "couchbase-operator.v2.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:29:59.137000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "couchbase-enterprise-certified",
      "provided_apis": [
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCluster",
          "plural": "couchbaseclusters",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseEphemeralBucket",
          "plural": "couchbaseephemeralbuckets",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseMemcachedBucket",
          "plural": "couchbasememcachedbuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseRoleBinding",
          "plural": "couchbaserolebindings",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackup",
          "plural": "couchbasebackups",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBucket",
          "plural": "couchbasebuckets",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseMemcachedBucket",
          "plural": "couchbasememcachedbuckets",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseReplication",
          "plural": "couchbasereplications",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackup",
          "plural": "couchbasebackups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCluster",
          "plural": "couchbaseclusters",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseGroup",
          "plural": "couchbasegroups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseGroup",
          "plural": "couchbasegroups",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseRoleBinding",
          "plural": "couchbaserolebindings",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseUser",
          "plural": "couchbaseusers",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackupRestore",
          "plural": "couchbasebackuprestores",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseEphemeralBucket",
          "plural": "couchbaseephemeralbuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseReplication",
          "plural": "couchbasereplications",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseUser",
          "plural": "couchbaseusers",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackupRestore",
          "plural": "couchbasebackuprestores",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBucket",
          "plural": "couchbasebuckets",
          "version": "v2"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:07f3e519047d62715422127be6f0678af925f30ac3625173e1bf0d41d241cbce",
          "image": "registry.connect.redhat.com/couchbase/operator@sha256:07f3e519047d62715422127be6f0678af925f30ac3625173e1bf0d41d241cbce",
          "name": "operator-07f3e519047d62715422127be6f0678af925f30ac3625173e1bf0d41d241cbce-annotation"
        },
        {
          "digest": "sha256:07f3e519047d62715422127be6f0678af925f30ac3625173e1bf0d41d241cbce",
          "image": "registry.connect.redhat.com/couchbase/operator@sha256:07f3e519047d62715422127be6f0678af925f30ac3625173e1bf0d41d241cbce",
          "name": "couchbase-operator"
        },
        {
          "digest": "sha256:fd6d9c0ef033009e76d60dc36f55ce7f3aaa942a7be9c2b66c335eabc8f5b11e",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:fd6d9c0ef033009e76d60dc36f55ce7f3aaa942a7be9c2b66c335eabc8f5b11e",
          "name": "couchbase_server"
        },
        {
          "digest": "sha256:3d0a9de740110b924b1ad5e83bb1e36b308f1b53f9e76a50cffcbeda9d34ea78",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:3d0a9de740110b924b1ad5e83bb1e36b308f1b53f9e76a50cffcbeda9d34ea78",
          "name": "couchbase_backup"
        },
        {
          "digest": "sha256:18015c72d17a33a21ea221d48fddf493848fc1ca5702007f289369c5815fb3df",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:18015c72d17a33a21ea221d48fddf493848fc1ca5702007f289369c5815fb3df",
          "name": "couchbase_metrics"
        },
        {
          "digest": "sha256:18015c72d17a33a21ea221d48fddf493848fc1ca5702007f289369c5815fb3df",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:18015c72d17a33a21ea221d48fddf493848fc1ca5702007f289369c5815fb3df",
          "name": "exporter-18015c72d17a33a21ea221d48fddf493848fc1ca5702007f289369c5815fb3df-annotation"
        },
        {
          "digest": "sha256:3d0a9de740110b924b1ad5e83bb1e36b308f1b53f9e76a50cffcbeda9d34ea78",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:3d0a9de740110b924b1ad5e83bb1e36b308f1b53f9e76a50cffcbeda9d34ea78",
          "name": "operator-backup-3d0a9de740110b924b1ad5e83bb1e36b308f1b53f9e76a50cffcbeda9d34ea78-annotation"
        },
        {
          "digest": "sha256:fd6d9c0ef033009e76d60dc36f55ce7f3aaa942a7be9c2b66c335eabc8f5b11e",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:fd6d9c0ef033009e76d60dc36f55ce7f3aaa942a7be9c2b66c335eabc8f5b11e",
          "name": "server-fd6d9c0ef033009e76d60dc36f55ce7f3aaa942a7be9c2b66c335eabc8f5b11e-annotation"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "2.0.2",
      "version_original": "2.0.2"
    },
    {
      "_id": "5ff5e9a20c023d07361b8308",
      "alm_examples": [
        {
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "admisnPassword": "changeme"
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:0bf222bc4a737f1c9c20a8d6129177cf3dd2bd7d52bb08834518a6e81ecdf0af",
      "bundle_path_digest": "sha256:0bf222bc4a737f1c9c20a8d6129177cf3dd2bd7d52bb08834518a6e81ecdf0af",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-01-06T16:47:30.516000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://cloud.ibm.com/docs/services/Cloudant?topic=cloudant-apache-couchdb-operator)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v1.4.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-04T14:40:29.371000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [],
      "related_images": [
        {
          "digest": "sha256:b02b2addc64e09514e61fd27d713453be7b122a7cea862b291511167df69cedb",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:b02b2addc64e09514e61fd27d713453be7b122a7cea862b291511167df69cedb",
          "name": "couchdb-operator-b02b2addc64e09514e61fd27d713453be7b122a7cea862b291511167df69cedb-annotation"
        },
        {
          "digest": "sha256:b02b2addc64e09514e61fd27d713453be7b122a7cea862b291511167df69cedb",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:b02b2addc64e09514e61fd27d713453be7b122a7cea862b291511167df69cedb",
          "name": "couchdb-operator"
        }
      ],
      "skip_range": ">=1.0.0 <1.4.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.4.2",
      "version_original": "1.4.2"
    },
    {
      "_id": "5ff5e9c0bbf0225b399e2c6b",
      "alm_examples": [
        {
          "kind": "CSIScaleOperator",
          "metadata": {
            "labels": {
              "app.kubernetes.io/instance": "ibm-spectrum-scale-csi-operator",
              "app.kubernetes.io/managed-by": "ibm-spectrum-scale-csi-operator",
              "app.kubernetes.io/name": "ibm-spectrum-scale-csi-operator",
              "release": "ibm-spectrum-scale-csi-operator"
            },
            "name": "ibm-spectrum-scale-csi"
          },
          "spec": {
            "attacherNodeSelector": [
              {
                "key": "scale",
                "value": "true"
              }
            ],
            "clusters": [
              {
                "id": "< Primary Cluster ID - WARNING - THIS IS A STRING NEEDS YAML QUOTES! >",
                "primary": {
                  "primaryFs": "< Primary Filesystem >"
                },
                "restApi": [
                  {
                    "guiHost": "< Primary cluster GUI IP/Hostname>"
                  }
                ],
                "secrets": "secret1",
                "secureSslMode": false
              }
            ],
            "pluginNodeSelector": [
              {
                "key": "scale",
                "value": "true"
              }
            ],
            "provisionerNodeSelector": [
              {
                "key": "scale",
                "value": "true"
              }
            ],
            "scaleHostpath": "< GPFS FileSystem Path >"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/ibm/ibm-spectrum-scale-csi-operator-bundle@sha256:26e507a96b0473964ab18c84ec899a51c05301e956c3968dae8a0243842f9b5f",
      "bundle_path_digest": "sha256:26e507a96b0473964ab18c84ec899a51c05301e956c3968dae8a0243842f9b5f",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-01-06T16:48:00.298000+00:00",
      "csv_description": "\nThe IBM Spectrum Scale CSI Operator runs within a Kubernetes cluster providing a means to \ndeploy and manage the CSI plugin for spectrum scale. For more in depth documentation please refer\nto the [knowledge center](https://www.ibm.com/support/knowledgecenter/STXKQY_CSI_SHR).\n\nThis operator should be used to deploy the CSI plugin.\n\nThe configuration process is as follows:\n\n1. [Spectrum Scale GUI Setup](#spectrum-scale-gui-setup)\n2. [Custom Resource Configuration](#custom-resource-configuration)\n\nSpectrum Scale GUI Setup \n------------------------\n> **NOTE:** This step only needs to be preformed once per GUI.\n\n> **WARNING:** If your daemonset pods (driver pods) do not come up, generally this means you have a  secret that  has not been defined in the correct namespace.\n\n1. Ensure the Spectrum Scale GUI is running by pointing your browser to the IP hosting the GUI:\n\n \n    > If you do not see a login follow on screen instructions, or review the [GUI Documentation](https://www.ibm.com/support/knowledgecenter/en/STXKQY_5.0.5/com.ibm.spectrum.scale.v5r05.doc/bl1ins_quickrefforgui.htm)\n\n\n3. Create a CsiAdmin group account on in the GUI (currently requires a CLI call):\n\n   ```\n\n   export USERNAME=\"SomeUser\"\n   export PASSWORD=\"SomePassword\"\n   /usr/lpp/mmfs/gui/cli/mkuser ${USERNAME} -p ${PASSWORD} -g CsiAdmin\n\n   ```\n\n3. Create a Kubernetes secret for the `CsiAdmin` user:\n\n  ```\n\n  export USERNAME_B64=$(echo $USERNAME | base64)\n  export PASSWORD_B64=$(echo $PASSWORD | base64)\n  export OPERATOR_NAMESPACE=\"ibm-spectrum-scale-csi-driver\"  # Set this to the namespace you deploy the operator in.\n  \n\n  cat << EOF > /tmp/csisecret.yaml\n  apiVersion: v1\n  data:\n    password: ${PASSWORD_B64}\n    username: ${USERNAME_B64}\n  kind: Secret\n  type: Opaque\n  metadata:\n    name: csisecret    # This should be in your CSIScaleOperator definition\n    namespace: ${OPERATOR_NAMESPACE} \n    labels:\n      app.kubernetes.io/name: ibm-spectrum-scale-csi-operator # Used by the operator to detect changes, set on load of CR change if secret matches name in CR and namespace.\n  EOF\n  \n\n  kubectl create -f /tmp/csisecret.yaml\n  rm -f /tmp/csisecret.yaml\n  \n  ```\n\nCustom Resource Configuration\n-----------------------------\n\nThe bundled Custom Resource example represents the minimum settings needed to run the operator.\nIf your environment needs more advanced settings (e.g. remote clusters, node mapping, etc.) please\nrefer to the sample [Custom Resource](https://raw.githubusercontent.com/IBM/ibm-spectrum-scale-csi/v2.1.0/operator/deploy/crds/csiscaleoperators.csi.ibm.com_cr.yaml).\n\n\n",
      "csv_display_name": "IBM Spectrum Scale CSI Plugin Operator",
      "csv_metadata_description": "An operator for deploying and managing the IBM Spectrum Scale CSI Driver.",
      "csv_name": "ibm-spectrum-scale-csi-operator.v2.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:16:18.259000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "ibm-spectrum-scale-csi",
      "provided_apis": [
        {
          "group": "csi.ibm.com",
          "kind": "CSIScaleOperator",
          "plural": "csiscaleoperators",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:46a8ce82a1c68e44432136aa3f55dc52ca6201e1920dfa53de4c62d740ea62dc",
          "image": "registry.connect.redhat.com/ibm/ibm-spectrum-scale-csi-operator@sha256:46a8ce82a1c68e44432136aa3f55dc52ca6201e1920dfa53de4c62d740ea62dc",
          "name": "ibm-spectrum-scale-csi-operator-46a8ce82a1c68e44432136aa3f55dc52ca6201e1920dfa53de4c62d740ea62dc-annotation"
        },
        {
          "digest": "sha256:46a8ce82a1c68e44432136aa3f55dc52ca6201e1920dfa53de4c62d740ea62dc",
          "image": "registry.connect.redhat.com/ibm/ibm-spectrum-scale-csi-operator@sha256:46a8ce82a1c68e44432136aa3f55dc52ca6201e1920dfa53de4c62d740ea62dc",
          "name": "operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.1.0",
      "version_original": "2.1.0"
    },
    {
      "_id": "5ff5e9c2f909d6298ed458ba",
      "alm_examples": [
        {
          "kind": "IBMBlockCSI",
          "metadata": {
            "name": "ibm-block-csi"
          },
          "spec": {
            "controller": {
              "affinity": {
                "nodeAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": {
                    "nodeSelectorTerms": [
                      {
                        "matchExpressions": [
                          {
                            "key": "kubernetes.io/arch",
                            "operator": "In",
                            "values": [
                              "amd64",
                              "s390x"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "imagePullPolicy": "IfNotPresent",
              "repository": "ibmcom/ibm-block-csi-driver-controller",
              "tag": "1.4.0"
            },
            "node": {
              "affinity": {
                "nodeAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": {
                    "nodeSelectorTerms": [
                      {
                        "matchExpressions": [
                          {
                            "key": "kubernetes.io/arch",
                            "operator": "In",
                            "values": [
                              "amd64",
                              "s390x"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "imagePullPolicy": "IfNotPresent",
              "repository": "ibmcom/ibm-block-csi-driver-node",
              "tag": "1.4.0"
            },
            "sidecars": [
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-node-driver-registrar",
                "repository": "k8s.gcr.io/sig-storage/csi-node-driver-registrar",
                "tag": "v2.0.1"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-provisioner",
                "repository": "k8s.gcr.io/sig-storage/csi-provisioner",
                "tag": "v2.0.2"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-attacher",
                "repository": "k8s.gcr.io/sig-storage/csi-attacher",
                "tag": "v3.0.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-snapshotter",
                "repository": "k8s.gcr.io/sig-storage/csi-snapshotter",
                "tag": "v3.0.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-resizer",
                "repository": "k8s.gcr.io/sig-storage/csi-resizer",
                "tag": "v1.0.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "livenessprobe",
                "repository": "k8s.gcr.io/sig-storage/livenessprobe",
                "tag": "v2.1.0"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/ibm-block-csi-operator-bundle@sha256:bfa9430be16ac85677790c1760f44cb91620de5badd73584972df5ddd7191748",
      "bundle_path_digest": "sha256:bfa9430be16ac85677790c1760f44cb91620de5badd73584972df5ddd7191748",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-01-06T16:48:02.622000+00:00",
      "csv_description": "The Container Storage Interface (CSI) Driver for IBM block storage systems enables container orchestrators such as Kubernetes to manage the life cycle of persistent storage.\nThis is the official operator to deploy and manage IBM block storage CSI driver.\nSupported container platforms (and architectures):\n  - OpenShift v4.4 (x86, IBM Z, and IBM PowerPC)\n  - OpenShift v4.5 (x86, IBM Z, and IBM PowerPC)\n  - Kubernetes v1.18 (x86)\n  - Kubernetes v1.19 (x86)\nSupported IBM storage systems:\n  - IBM Spectrum Virtualize Family including IBM SAN Volume Controller (SVC) and IBM FlashSystem\u00ae family members built with IBM Spectrum\u00ae Virtualize (FlashSystem 5010, 5030, 5100, 7200, 9100, 9200, 9200R)\n  - IBM FlashSystem A9000 and A9000R\n  - IBM DS8000 Family\nSupported operating systems (and architectures):\n  - RHEL 7.x (x86)\n  - RHCOS (x86, IBM Z, and IBM PowerPC)\nFull documentation can be found on the [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSRQ8T).\n## Prerequisites\n> **Note**: The operator can be installed directly from the RedHat OpenShift web console, through the OperatorHub. The prerequisites below also mentioned and can be viewed via OpenShift.\n### Preparing worker nodes\nPerform these steps for each worker node in Kubernetes cluster:\n#### 1. Perform this step to ensure iSCSI connectivity, when using RHEL OS.\nIf using RHCOS or if the packages are already installed, continue to the next step.\nRHEL 7.x:\n```bash\nyum -y install iscsi-initiator-utils   # Only if iSCSI connectivity is required\nyum -y install xfsprogs                # Only if XFS file system is required\n```\n#### 2. Configure Linux\u00ae multipath devices on the host.\n**Important:** Be sure to configure each worker with storage connectivity according to your storage system instructions.\nFor more information, find your storage system documentation on [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter).\n##### 2.1 Additional configuration steps for OpenShift\u00ae Container Platform users (RHEL and RHCOS). Other users can continue to step 3.\nThe following yaml file example is for both Fibre Channel and iSCSI configurations. To support iSCSI, uncomment the last two lines in the file:\n**Important:** The  `99-ibm-attach.yaml` configuration file overrides any files that already exist on your system. Only use this file if the files mentioned in the yaml below are not already created. If one or more have been created, edit this yaml file, as necessary.\nSave the `99-ibm-attach.yaml` file.\n```bash\napiVersion: machineconfiguration.openshift.io/v1\nkind: MachineConfig\nmetadata:\nlabels:\nmachineconfiguration.openshift.io/role: worker\nname: 99-ibm-attach\nspec:\nconfig:\nignition:\nversion: 2.2.0\nstorage:\nfiles:\n- path: /etc/multipath.conf\nmode: 384\nfilesystem: root\ncontents:\nsource: data:,defaults%20%7B%0A%20%20%20%20path_checker%20tur%0A%20%20%20%20path_selector\n%20%22round-robin%200%22%0A%20%20%20%20rr_weight%20uniform%0A%20%20%20%20prio%20const%0A\n%20%20%20%20rr_min_io_rq%201%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%0A%20%20%20%20polling_interval\n%2030%0A%20%20%20%20path_grouping_policy%20multibus%0A%20%20%20%20find_multipaths%20yes%0A\n%20%20%20%20no_path_retry%20fail%0A%20%20%20%20user_friendly_names%20yes%0A%20%20%20%20failback\n%20immediate%0A%20%20%20%20checker_timeout%2010%0A%20%20%20%20fast_io_fail_tmo%20off%0A%7D%0A%0Adevices\n%20%7B%0A%20%20%20%20device%20%7B%0A%20%20%20%20%20%20%20%20path_checker%20tur%0A\n%20%20%20%20%20%20%20%20product%20%22FlashSystem%22%0A%20%20%20%20%20%20%20%20vendor%20%22IBM%22%0A\n%20%20%20%20%20%20%20%20rr_weight%20uniform%0A%20%20%20%20%20%20%20%20rr_min_io_rq\n%204%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%0A%20%20%20%20%20%20%20%20path_grouping_policy\n%20multibus%0A%20%20%20%20%20%20%20%20path_selector%20%22round-robin%200%22%0A\n%20%20%20%20%20%20%20%20no_path_retry%20fail%0A%20%20%20%20%20%20%20%20failback%20immediate%0A\n%20%20%20%20%7D%0A%20%20%20%20device%20%7B%0A%20%20%20%20%20%20%20%20path_checker%20tur%0A\n%20%20%20%20%20%20%20%20product%20%22FlashSystem-9840%22%0A%20%20%20%20%20%20%20%20vendor%20%22IBM%22%0A\n%20%20%20%20%20%20%20%20fast_io_fail_tmo%20off%0A%20%20%20%20%20%20%20%20rr_weight%20uniform%0A\n%20%20%20%20%20%20%20%20rr_min_io_rq%201000%20%20%20%20%20%20%20%20%20%20%20%20%0A\n%20%20%20%20%20%20%20%20path_grouping_policy%20multibus%0A%20%20%20%20%20%20%20%20path_selector\n%20%22round-robin%200%22%0A%20%20%20%20%20%20%20%20no_path_retry%20fail%0A\n%20%20%20%20%20%20%20%20failback%20immediate%0A%20%20%20%20%7D%0A%20%20%20%20device%20%7B%0A\n%20%20%20%20%20%20%20%20vendor%20%22IBM%22%0A%20%20%20%20%20%20%20%20product%20%222145%22%0A\n%20%20%20%20%20%20%20%20path_checker%20tur%0A%20%20%20%20%20%20%20%20features%20%221%20queue_if_no_path\n%22%0A%20%20%20%20%20%20%20%20path_grouping_policy%20group_by_prio%0A\n%20%20%20%20%20%20%20%20path_selector%20%22service-time%200%22%20%23%20Used%20by%20Red%20Hat%207.x%0A\n%20%20%20%20%20%20%20%20prio%20alua%0A%20%20%20%20%20%20%20%20rr_min_io_rq%201%0A\n%20%20%20%20%20%20%20%20rr_weight%20uniform%20%0A%20%20%20%20%20%20%20%20no_path_retry%20%225%22%0A\n%20%20%20%20%20%20%20%20dev_loss_tmo%20120%0A%20%20%20%20%20%20%20%20failback%20immediate%0A%20%20%20%7D\n%0A%7D%0A\nverification: {}\n- path: /etc/udev/rules.d/99-ibm-2145.rules\nmode: 420\nfilesystem: root\ncontents:\nsource: data:,%23%20Set%20SCSI%20command%20timeout%20to%20120s%20%28default%20%3D%3D\n%2030%20or%2060%29%20for%20IBM%202145%20devices%0ASUBSYSTEM%3D%3D%22block%22%2C%20ACTION%3D%3D%22add\n%22%2C%20ENV%7BID_VENDOR%7D%3D%3D%22IBM%22%2CENV%7BID_MODEL%7D%3D%3D%222145%22%2C%20RUN%2B%3D%22/bin/sh\n%20-c%20%27echo%20120%20%3E/sys/block/%25k/device/timeout%27%22%0A\nverification: {}\nsystemd:\nunits:\n- name: multipathd.service\nenabled: true\n# Uncomment the following lines if this MachineConfig will be used with iSCSI connectivity\n#- name: iscsid.service\n#    enabled: true\n```\nApply the yaml file.\n```bash\noc apply -f 99-ibm-attach.yaml\n```\n#### 3. If needed, enable support for volume snapshots (FlashCopy\u00ae function) on your Kubernetes cluster.\nFor more information and instructions, see the Kubernetes blog post, [Kubernetes 1.17 Feature: Kubernetes Volume Snapshot Moves to Beta](https://kubernetes.io/blog/2019/12/09/kubernetes-1-17-feature-cis-volume-snapshot-beta/).\n#### 4. Configure storage system connectivity\n##### 4.1. Define the hostname of each Kubernetes node on the relevant storage systems with the valid WWPN(for Fibre Channel) or IQN(for iSCSI) of the node.\n##### 4.2. For Fibre Channel, configure the relevant zoning from the storage to the host.\n## Installation\n### Install the operator\n#### 1. Download the manifest from GitHub.\n```bash\ncurl https://raw.githubusercontent.com/IBM/ibm-block-csi-operator/master/deploy/installer/generated/ibm-block-csi-operator.yaml > ibm-block-csi-operator.yaml\n```\n#### 2. (Optional): If required, update the image fields in the ibm-block-csi-operator.yaml.\n#### 3. Create a namespace.\n```bash\n$ kubectl create ns <namespace>\n```\n#### 4. Install the operator, while using a user-defined namespace.\n```bash\n$ kubectl -n <namespace> apply -f ibm-block-csi-operator.yaml\n```\n### Verify the operator is running:\n```bash\n$ kubectl get pod -l app.kubernetes.io/name=ibm-block-csi-operator -n <namespace>\nNAME                                    READY   STATUS    RESTARTS   AGE\nibm-block-csi-operator-5bb7996b86-xntss 1/1     Running   0          10m\n```\n### Create an IBMBlockCSI custom resource\n#### 1. Download the manifest from GitHub.\n```bash\ncurl https://raw.githubusercontent.com/IBM/ibm-block-csi-operator/master/deploy/crds/csi.ibm.com_v1_ibmblockcsi_cr.yaml > csi.ibm.com_v1_ibmblockcsi_cr.yaml\n```\n#### 2. (Optional): If required, update the image fields in the csi.ibm.com_v1_ibmblockcsi_cr.yaml.\n#### 3. Install the csi.ibm.com_v1_ibmblockcsi_cr.yaml.\n```bash\n$ kubectl -n <namespace> apply -f csi.ibm.com_v1_ibmblockcsi_cr.yaml\n```\n### Verify the driver is running:\n```bash\n$ kubectl get all -n <namespace>  -l csi\nNAME                             READY   STATUS    RESTARTS   AGE\npod/ibm-block-csi-controller-0   6/6     Running   0          9m36s\npod/ibm-block-csi-node-jvmvh     3/3     Running   0          9m36s\npod/ibm-block-csi-node-tsppw     3/3     Running   0          9m36s\nNAME                                DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR   AGE\ndaemonset.apps/ibm-block-csi-node   2         2         2       2            2           <none>          9m36s\nNAME                                        READY   AGE\nstatefulset.apps/ibm-block-csi-controller   1/1     9m36s\n```\n## Configuring k8s secret and storage class\nIn order to use the driver, create the relevant storage classes and secrets, as needed.\nThis section describes how to:\n 1. Create a storage system secret - to define the storage system credentials (user and password) and its address.\n 2. Configure the storage class - to define the storage system pool name, secret reference, `SpaceEfficiency`, and `fstype`.\n#### 1. Create an array secret\nCreate a secret file as follows `array-secret.yaml` and update the relevant credentials:\n```\nkind: Secret\napiVersion: v1\nmetadata:\n  name: <NAME>\n  namespace: <NAMESPACE>\ntype: Opaque\nstringData:\n  management_address: <ADDRESS-1, ADDRESS-2> # Array management addresses\n  username: <USERNAME>                   # Array username\ndata:\n  password: <PASSWORD base64>            # Array password\n```\nApply the secret:\n```\n$ kubectl apply -f array-secret.yaml\n```\nTo create the secret using a command line terminal, use the following command:\n```bash\nkubectl create secret generic <NAME> --from-literal=username=<USER> --fromliteral=password=<PASSWORD> --from-literal=management_address=<ARRAY_MGMT> -n <namespace>\n```\n#### 2. Create storage classes\nCreate a storage class `demo-storageclass-gold-pvc.yaml` file as follows, with the relevant capabilities, pool and, array secret.\nUse the `SpaceEfficiency` parameters for each storage system. These values are not case sensitive:\n* IBM FlashSystem A9000 and A9000R\n    * Always includes deduplication and compression.\n    No need to specify during configuration.\n* IBM Spectrum Virtualize Family\n    * `thick` (default value, if not specified)\n    * `thin`\n    * `compressed`\n    * `deduplicated`\n* IBM DS8000 Family\n    * `none` (default value, if not specified)\n    * `thin`\n```\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: gold\nprovisioner: block.csi.ibm.com\nparameters:\n  SpaceEfficiency: <VALUE>          # Optional: Values applicable for Spectrum Virtualize Family are: thin, compressed, or deduplicated\n  pool: <POOL_NAME>\t                # DS8000 Family paramater is pool ID\n  csi.storage.k8s.io/provisioner-secret-name: <ARRAY_SECRET>\n  csi.storage.k8s.io/provisioner-secret-namespace: <ARRAY_SECRET_NAMESPACE>\n  csi.storage.k8s.io/controller-publish-secret-name: <ARRAY_SECRET>\n  csi.storage.k8s.io/controller-publish-secret-namespace: <ARRAY_SECRET_NAMESPACE>\n  csi.storage.k8s.io/controller-expand-secret-name: <ARRAY_SECRET>\n  csi.storage.k8s.io/controller-expand-secret-namespace: <ARRAY_SECRET_NAMESPACE>\n  csi.storage.k8s.io/fstype: xfs    # Optional: Values ext4/xfs. The default is ext4.\n  volume_name_prefix: <prefix_name> # Optional: DS8000 Family maximum prefix length is 5 characters. Maximum prefix length for other systems is 20 characters.\nallowVolumeExpansion: true\n```\n#### 3. Apply the storage class:\n```bash\n$ kubectl apply -f demo-storageclass-gold-pvc.yaml\nstorageclass.storage.k8s.io/gold created\n```\n",
      "csv_display_name": "Operator for IBM block storage CSI driver",
      "csv_metadata_description": "Run IBM block storage CSI driver on OpenShift.",
      "csv_name": "ibm-block-csi-operator.v1.4.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:36:01.946000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "ibm-block-csi-operator",
      "provided_apis": [
        {
          "group": "csi.ibm.com",
          "kind": "IBMBlockCSI",
          "plural": "ibmblockcsis",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:d5c1b8b6872e733076876ce89a4b56635156d0b6a1d1febd97f7117cef284712",
          "image": "registry.connect.redhat.com/ibm/ibm-block-csi-operator@sha256:d5c1b8b6872e733076876ce89a4b56635156d0b6a1d1febd97f7117cef284712",
          "name": "ibm-block-csi-operator-d5c1b8b6872e733076876ce89a4b56635156d0b6a1d1febd97f7117cef284712-annotation"
        },
        {
          "digest": "sha256:d5c1b8b6872e733076876ce89a4b56635156d0b6a1d1febd97f7117cef284712",
          "image": "registry.connect.redhat.com/ibm/ibm-block-csi-operator@sha256:d5c1b8b6872e733076876ce89a4b56635156d0b6a1d1febd97f7117cef284712",
          "name": "ibm-block-csi-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.4.0",
      "version_original": "1.4.0"
    },
    {
      "_id": "5ff5e9c3bbf0225b399e2c6c",
      "alm_examples": [
        {
          "kind": "CSIScaleOperator",
          "metadata": {
            "labels": {
              "app.kubernetes.io/instance": "ibm-spectrum-scale-csi-operator",
              "app.kubernetes.io/managed-by": "ibm-spectrum-scale-csi-operator",
              "app.kubernetes.io/name": "ibm-spectrum-scale-csi-operator",
              "release": "ibm-spectrum-scale-csi-operator"
            },
            "name": "ibm-spectrum-scale-csi"
          },
          "spec": {
            "attacherNodeSelector": [
              {
                "key": "scale",
                "value": "true"
              }
            ],
            "clusters": [
              {
                "id": "< Primary Cluster ID - WARNING - THIS IS A STRING NEEDS YAML QUOTES! >",
                "primary": {
                  "primaryFs": "< Primary Filesystem >"
                },
                "restApi": [
                  {
                    "guiHost": "< Primary cluster GUI IP/Hostname>"
                  }
                ],
                "secrets": "secret1",
                "secureSslMode": false
              }
            ],
            "pluginNodeSelector": [
              {
                "key": "scale",
                "value": "true"
              }
            ],
            "provisionerNodeSelector": [
              {
                "key": "scale",
                "value": "true"
              }
            ],
            "scaleHostpath": "< GPFS FileSystem Path >"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/ibm/ibm-spectrum-scale-csi-operator-bundle@sha256:26e507a96b0473964ab18c84ec899a51c05301e956c3968dae8a0243842f9b5f",
      "bundle_path_digest": "sha256:26e507a96b0473964ab18c84ec899a51c05301e956c3968dae8a0243842f9b5f",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-01-06T16:48:03.851000+00:00",
      "csv_description": "\nThe IBM Spectrum Scale CSI Operator runs within a Kubernetes cluster providing a means to \ndeploy and manage the CSI plugin for spectrum scale. For more in depth documentation please refer\nto the [knowledge center](https://www.ibm.com/support/knowledgecenter/STXKQY_CSI_SHR).\n\nThis operator should be used to deploy the CSI plugin.\n\nThe configuration process is as follows:\n\n1. [Spectrum Scale GUI Setup](#spectrum-scale-gui-setup)\n2. [Custom Resource Configuration](#custom-resource-configuration)\n\nSpectrum Scale GUI Setup \n------------------------\n> **NOTE:** This step only needs to be preformed once per GUI.\n\n> **WARNING:** If your daemonset pods (driver pods) do not come up, generally this means you have a  secret that  has not been defined in the correct namespace.\n\n1. Ensure the Spectrum Scale GUI is running by pointing your browser to the IP hosting the GUI:\n\n \n    > If you do not see a login follow on screen instructions, or review the [GUI Documentation](https://www.ibm.com/support/knowledgecenter/en/STXKQY_5.0.5/com.ibm.spectrum.scale.v5r05.doc/bl1ins_quickrefforgui.htm)\n\n\n3. Create a CsiAdmin group account on in the GUI (currently requires a CLI call):\n\n   ```\n\n   export USERNAME=\"SomeUser\"\n   export PASSWORD=\"SomePassword\"\n   /usr/lpp/mmfs/gui/cli/mkuser ${USERNAME} -p ${PASSWORD} -g CsiAdmin\n\n   ```\n\n3. Create a Kubernetes secret for the `CsiAdmin` user:\n\n  ```\n\n  export USERNAME_B64=$(echo $USERNAME | base64)\n  export PASSWORD_B64=$(echo $PASSWORD | base64)\n  export OPERATOR_NAMESPACE=\"ibm-spectrum-scale-csi-driver\"  # Set this to the namespace you deploy the operator in.\n  \n\n  cat << EOF > /tmp/csisecret.yaml\n  apiVersion: v1\n  data:\n    password: ${PASSWORD_B64}\n    username: ${USERNAME_B64}\n  kind: Secret\n  type: Opaque\n  metadata:\n    name: csisecret    # This should be in your CSIScaleOperator definition\n    namespace: ${OPERATOR_NAMESPACE} \n    labels:\n      app.kubernetes.io/name: ibm-spectrum-scale-csi-operator # Used by the operator to detect changes, set on load of CR change if secret matches name in CR and namespace.\n  EOF\n  \n\n  kubectl create -f /tmp/csisecret.yaml\n  rm -f /tmp/csisecret.yaml\n  \n  ```\n\nCustom Resource Configuration\n-----------------------------\n\nThe bundled Custom Resource example represents the minimum settings needed to run the operator.\nIf your environment needs more advanced settings (e.g. remote clusters, node mapping, etc.) please\nrefer to the sample [Custom Resource](https://raw.githubusercontent.com/IBM/ibm-spectrum-scale-csi/v2.1.0/operator/deploy/crds/csiscaleoperators.csi.ibm.com_cr.yaml).\n\n\n",
      "csv_display_name": "IBM Spectrum Scale CSI Plugin Operator",
      "csv_metadata_description": "An operator for deploying and managing the IBM Spectrum Scale CSI Driver.",
      "csv_name": "ibm-spectrum-scale-csi-operator.v2.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:29:40.033000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "ibm-spectrum-scale-csi",
      "provided_apis": [
        {
          "group": "csi.ibm.com",
          "kind": "CSIScaleOperator",
          "plural": "csiscaleoperators",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:46a8ce82a1c68e44432136aa3f55dc52ca6201e1920dfa53de4c62d740ea62dc",
          "image": "registry.connect.redhat.com/ibm/ibm-spectrum-scale-csi-operator@sha256:46a8ce82a1c68e44432136aa3f55dc52ca6201e1920dfa53de4c62d740ea62dc",
          "name": "ibm-spectrum-scale-csi-operator-46a8ce82a1c68e44432136aa3f55dc52ca6201e1920dfa53de4c62d740ea62dc-annotation"
        },
        {
          "digest": "sha256:46a8ce82a1c68e44432136aa3f55dc52ca6201e1920dfa53de4c62d740ea62dc",
          "image": "registry.connect.redhat.com/ibm/ibm-spectrum-scale-csi-operator@sha256:46a8ce82a1c68e44432136aa3f55dc52ca6201e1920dfa53de4c62d740ea62dc",
          "name": "operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "2.1.0",
      "version_original": "2.1.0"
    },
    {
      "_id": "5ff5e9c40c023d07361b830c",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/instana/instana-agent-operator-bundle@sha256:c74519be65015d28508ca3b260449a0365f97968f17e20b48c7b338247c835c3",
      "bundle_path_digest": "sha256:c74519be65015d28508ca3b260449a0365f97968f17e20b48c7b338247c835c3",
      "capabilities": [
        ""
      ],
      "channel_name": "beta",
      "creation_date": "2021-01-06T16:48:04.305000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "instana-agent-operator.v0.3.9",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:17:39.785000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "instana-agent",
      "provided_apis": [
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "version": "v1beta1"
        },
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "plural": "agents",
          "version": "v1alpha1"
        }
      ],
      "related_images": [],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.3.9",
      "version_original": "0.3.9"
    },
    {
      "_id": "5ff5e9c5f909d6298ed458bb",
      "alm_examples": [
        {
          "kind": "SymphonyCluster",
          "metadata": {
            "name": "symcluster"
          },
          "spec": {
            "client": [
              {
                "build": {
                  "git": {
                    "branch": "master",
                    "path": "samples/sampleapp_cpp",
                    "repository": "https://github.com/IBM/ibm-spectrum-symphony-operator.git"
                  },
                  "image": "docker.io/ibmcom/spectrum-symphony@sha256:8587075154da82dd1ff15160bd2d3185b3f44ed504fb3836b02de9922cbd8824",
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "2Gi"
                    },
                    "requests": {
                      "cpu": "500m",
                      "memory": "2Gi"
                    }
                  },
                  "serviceAccountName": "builder"
                },
                "env": [
                  {
                    "name": "APP_NAME",
                    "valueFrom": {
                      "fieldRef": {
                        "fieldPath": "metadata.name"
                      }
                    }
                  }
                ],
                "image": "",
                "imagePullPolicy": "Always",
                "name": "SampleAppCPP1",
                "resources": {
                  "limits": {
                    "cpu": "250m",
                    "memory": "1Gi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1Gi"
                  }
                },
                "serviceAccountName": ""
              }
            ],
            "cluster": {
              "cacheImages": true,
              "clusterName": "",
              "enableSharedSubdir": false,
              "entitlementSecretName": "",
              "logsOnShared": false,
              "scriptsSecretName": "",
              "storage": {
                "pvcName": "",
                "pvcSize": "1Gi",
                "selector": {
                  "label": "",
                  "value": ""
                },
                "storageClassName": ""
              },
              "usersPasswordsSecretName": ""
            },
            "compute": {
              "env": [
                {
                  "name": "APP_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.name"
                    }
                  }
                }
              ],
              "image": "docker.io/ibmcom/spectrum-symphony-comp@sha256:31659193dad633e902ae07990d4e529e7f519ce18b38583c0c3c5b1713809539",
              "imagePullPolicy": "Always",
              "maxReplicas": 64,
              "minReplicas": 1,
              "replicaCount": 1,
              "resources": {
                "limits": {
                  "cpu": "250m",
                  "memory": "1Gi"
                },
                "requests": {
                  "cpu": "250m",
                  "memory": "1Gi"
                }
              },
              "targetCPUUtilizationPercentage": 70,
              "usePodAutoscaler": true
            },
            "licenceAccepted": true,
            "master": {
              "egoRestEnabled": false,
              "env": [
                {
                  "name": "APP_NAME",
                  "valueFrom": {
                    "fieldRef": {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.name"
                    }
                  }
                }
              ],
              "image": "docker.io/ibmcom/spectrum-symphony@sha256:8587075154da82dd1ff15160bd2d3185b3f44ed504fb3836b02de9922cbd8824",
              "imagePullPolicy": "Always",
              "replicaCount": 0,
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "4Gi"
                },
                "requests": {
                  "cpu": "1000m",
                  "memory": "4Gi"
                }
              },
              "symRestEnabled": false,
              "uiEnabled": true
            },
            "serviceAccountName": ""
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/spectrum-symphony-operator-bundle@sha256:6920ea67b4a0387453b95376e2d8f6075eb07b39b42ea3fc7f3d256b68042ec0",
      "bundle_path_digest": "sha256:6920ea67b4a0387453b95376e2d8f6075eb07b39b42ea3fc7f3d256b68042ec0",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-01-06T16:48:05.049000+00:00",
      "csv_description": "IBM Spectrum Symphony is an enterprise-class workload manager for compute- and data-intensive workload on a scalable, shared grid. It provides an efficient computing environment for dozens of distributed parallel applications to deliver faster results and better resource utilization.",
      "csv_display_name": "IBM Spectrum Symphony cluster",
      "csv_metadata_description": "IBM Spectrum Symphony cluster",
      "csv_name": "ibm-spectrum-symphony-operator.v1.1.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:57:10.100000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "ibm-spectrum-symphony-operator",
      "provided_apis": [],
      "related_images": [
        {
          "digest": "sha256:b44744a2dea12ac26bcf9ee82e3a68baa91cd9713f69f14fdc7cd9387161c3d1",
          "image": "registry.connect.redhat.com/ibm/spectrum-symphony-operator@sha256:b44744a2dea12ac26bcf9ee82e3a68baa91cd9713f69f14fdc7cd9387161c3d1",
          "name": "spectrum-symphony-operator-b44744a2dea12ac26bcf9ee82e3a68baa91cd9713f69f14fdc7cd9387161c3d1-annotation"
        },
        {
          "digest": "sha256:b44744a2dea12ac26bcf9ee82e3a68baa91cd9713f69f14fdc7cd9387161c3d1",
          "image": "registry.connect.redhat.com/ibm/spectrum-symphony-operator@sha256:b44744a2dea12ac26bcf9ee82e3a68baa91cd9713f69f14fdc7cd9387161c3d1",
          "name": "ibm-spectrum-symphony-operator"
        },
        {
          "digest": "sha256:8587075154da82dd1ff15160bd2d3185b3f44ed504fb3836b02de9922cbd8824",
          "image": "docker.io/ibmcom/spectrum-symphony@sha256:8587075154da82dd1ff15160bd2d3185b3f44ed504fb3836b02de9922cbd8824",
          "name": "spectrum-symphony-8587075154da82dd1ff15160bd2d3185b3f44ed504fb3836b02de9922cbd8824-annotation"
        },
        {
          "digest": "sha256:31659193dad633e902ae07990d4e529e7f519ce18b38583c0c3c5b1713809539",
          "image": "docker.io/ibmcom/spectrum-symphony-comp@sha256:31659193dad633e902ae07990d4e529e7f519ce18b38583c0c3c5b1713809539",
          "name": "spectrum-symphony-comp-31659193dad633e902ae07990d4e529e7f519ce18b38583c0c3c5b1713809539-annotation"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.1.1",
      "version_original": "1.1.1"
    },
    {
      "_id": "5ff5e9c754304a39b48d9a79",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/instana/instana-agent-operator-bundle@sha256:c74519be65015d28508ca3b260449a0365f97968f17e20b48c7b338247c835c3",
      "bundle_path_digest": "sha256:c74519be65015d28508ca3b260449a0365f97968f17e20b48c7b338247c835c3",
      "capabilities": [
        ""
      ],
      "channel_name": "beta",
      "creation_date": "2021-01-06T16:48:07.209000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "instana-agent-operator.v0.3.9",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:12:07.538000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "instana-agent",
      "provided_apis": [
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "plural": "agents",
          "version": "v1beta1"
        },
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "plural": "agents",
          "version": "v1alpha1"
        }
      ],
      "related_images": [],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.3.9",
      "version_original": "0.3.9"
    },
    {
      "_id": "5ff5e9c9bbf0225b399e2c6d",
      "alm_examples": [
        {
          "kind": "License",
          "metadata": {
            "name": "triliovault-license"
          },
          "spec": {
            "key": "xLkNDgwKD3jafZJNb8IwDIbv+RWRdo6Uj5a2SD1MwKRtjE0bsLOTuiISpFWaovHv145NQy3iPcb249d27j6xoE/tnkpJOZ/KaBrFVHLJycwjBFu5OQSk/8r7IOMJk5IsCttn0IHyB4+49hb2BEywR6SjjOBbJHtr0DW4Rd9cUnJJXsC6gA6cwcVXbf3pbKLvrRhPmersVYca3GlEfsdiB4Gs2oNG/1pumo5+EWaCfKA/on+cDysh5gWokjOjU8WEQGBaQMSM0DrDiTKTpCterOgV5d07+wXIm4Dleehh+3y9vd8s138MdduEqWq8YsLBAZsaDBbkudW4Gc1Ic56ITHMwrEwTwSIlY5bqLGGGx1kW6QQzUZKfncPotJfrf2u92UGDN37HDDorNgxPlAtOe3d0VRXYfAMj8ZzrMEYCIQCVaI/QJN+2M/QJWimd28dWOi/6o5s5I5+z30JrmzwGnQIhAKrSu8NeUIqXGEBTQvPKe3n2U0LNPht/ZAQIs5CZNeWlX02gk"
          }
        },
        {
          "kind": "Target",
          "metadata": {
            "labels": {
              "app": "triliovault"
            },
            "name": "triliovault-target"
          },
          "spec": {
            "nfsCredentials": {
              "nfsExport": "00.00.00.00:/src/nfs/kubedata",
              "nfsOptions": "nfsvers=4"
            },
            "type": "NFS",
            "vendor": "Other"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/trilio/r-3445381-bundle@sha256:3d08fbc3203b68e953d71cf21d2311e2fc6e4529870274535cf1bab1e6bb609f",
      "bundle_path_digest": "sha256:3d08fbc3203b68e953d71cf21d2311e2fc6e4529870274535cf1bab1e6bb609f",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "namespaced",
      "creation_date": "2021-01-06T16:48:09.650000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\n\nNote: The upgrade of TrilioVault for Kubernetes from version v1.1.1 to v2.0.0 is not supported due to the CRD scope change in operator. All the users of TrilioVault for Kubernetes v1.1.1 Cluster installation have to uninstall the TrilioVault for Kubernetes, delete the CRDs and reinstall the TrilioVault for Kubernetes v2.0.0\n\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-cluster.v2.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:13:51.283000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "k8s-triliovault",
      "provided_apis": [
        {
          "group": "triliovault.trilio.io",
          "kind": "Hook",
          "plural": "hooks",
          "version": "v1alpha1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Restore",
          "plural": "restores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Restore",
          "plural": "restores",
          "version": "v1alpha1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Target",
          "plural": "targets",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Target",
          "plural": "targets",
          "version": "v1alpha1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1alpha1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Hook",
          "plural": "hooks",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "License",
          "plural": "licenses",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1alpha1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "BackupPlan",
          "plural": "backupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "BackupPlan",
          "plural": "backupplans",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:d93508d9c7b516e1dadc0098422dbdebc66b377e81d7cbc7c0d9afcf86324b7a",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:d93508d9c7b516e1dadc0098422dbdebc66b377e81d7cbc7c0d9afcf86324b7a",
          "name": "control-plane-d93508d9c7b516e1dadc0098422dbdebc66b377e81d7cbc7c0d9afcf86324b7a-annotation"
        },
        {
          "digest": "sha256:d93508d9c7b516e1dadc0098422dbdebc66b377e81d7cbc7c0d9afcf86324b7a",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:d93508d9c7b516e1dadc0098422dbdebc66b377e81d7cbc7c0d9afcf86324b7a",
          "name": "k8s-triliovault-control-plane"
        },
        {
          "digest": "sha256:6c47a09c1ddc6a6f8fb79a6026603385a4fed7b5e62b501b14928fbe05b4faf6",
          "image": "registry.connect.redhat.com/trilio/trilio-admission-webhook@sha256:6c47a09c1ddc6a6f8fb79a6026603385a4fed7b5e62b501b14928fbe05b4faf6",
          "name": "triliovault-admission-webhook"
        },
        {
          "digest": "sha256:d4c343b387e4a1316a6fca6cfafebfa2a877c402b13898ddb3980cd85e858b01",
          "image": "registry.connect.redhat.com/trilio/exporter@sha256:d4c343b387e4a1316a6fca6cfafebfa2a877c402b13898ddb3980cd85e858b01",
          "name": "triliovault-exporter"
        },
        {
          "digest": "sha256:68753694b2ed6613ec6a4bf41258c54c0748d098e43ef09b366b89adb0784941",
          "image": "registry.connect.redhat.com/trilio/web@sha256:68753694b2ed6613ec6a4bf41258c54c0748d098e43ef09b366b89adb0784941",
          "name": "triliovault-web"
        },
        {
          "digest": "sha256:ca4dfd19e5e4c4e3e206ed1d8cd5f654f09a084531394d3c8262bfb40efdaf1b",
          "image": "registry.connect.redhat.com/trilio/web-backend@sha256:ca4dfd19e5e4c4e3e206ed1d8cd5f654f09a084531394d3c8262bfb40efdaf1b",
          "name": "triliovault-backend"
        },
        {
          "digest": "sha256:9d2aec99c0b9a79125ac9d8b20d92fed11c7efd37e77b4333679a4ffa158ed52",
          "image": "registry.connect.redhat.com/trilio/control-plane-init@sha256:9d2aec99c0b9a79125ac9d8b20d92fed11c7efd37e77b4333679a4ffa158ed52",
          "name": "control-plane-init"
        },
        {
          "digest": "sha256:9eb8416a7f708fcf46735c319a3a3644ac844b1ff22e898c821935eccef39444",
          "image": "registry.connect.redhat.com/trilio/trilio-webhook-init@sha256:9eb8416a7f708fcf46735c319a3a3644ac844b1ff22e898c821935eccef39444",
          "name": "webhook-init"
        },
        {
          "digest": "sha256:e47f100b857c9aaba14fc3eed50d61550a421a775b32ccb9a76d82e6c32d991e",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:e47f100b857c9aaba14fc3eed50d61550a421a775b32ccb9a76d82e6c32d991e",
          "name": "metamover"
        },
        {
          "digest": "sha256:d9397b598a8ea5a2901e32773bbdb2cb52f8fc106ed7d5dacb3239d7aeeae05d",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:d9397b598a8ea5a2901e32773bbdb2cb52f8fc106ed7d5dacb3239d7aeeae05d",
          "name": "datamover"
        },
        {
          "digest": "sha256:f5e113dd3097e69807f7fda898b527de31292eb4df08ec14b4c8df7a870ad414",
          "image": "registry.connect.redhat.com/trilio/datastore-attacher@sha256:f5e113dd3097e69807f7fda898b527de31292eb4df08ec14b4c8df7a870ad414",
          "name": "datastore_attacher"
        },
        {
          "digest": "sha256:702c9b18a998a59179d154efd4e36cf1e32fcc284fc7adc24c6f1b0fa069b449",
          "image": "registry.connect.redhat.com/trilio/backup-scheduler@sha256:702c9b18a998a59179d154efd4e36cf1e32fcc284fc7adc24c6f1b0fa069b449",
          "name": "backup_scheduler"
        },
        {
          "digest": "sha256:a4b077e0cae39b81b425157f57001605ff00a8ccdc029a56742dc1e2053d2058",
          "image": "registry.connect.redhat.com/trilio/backup-cleaner@sha256:a4b077e0cae39b81b425157f57001605ff00a8ccdc029a56742dc1e2053d2058",
          "name": "backup_cleaner"
        },
        {
          "digest": "sha256:31465a20a9237c661253009cbd9d22cec291fb7f73332039fcd0f6a7b065e75f",
          "image": "registry.connect.redhat.com/trilio/backup-retention@sha256:31465a20a9237c661253009cbd9d22cec291fb7f73332039fcd0f6a7b065e75f",
          "name": "backup_retention"
        },
        {
          "digest": "sha256:4d6d0568c70fe1a39f90391a23b19780b5586b053a3566d4223a238408d6888b",
          "image": "registry.connect.redhat.com/trilio/target-browser@sha256:4d6d0568c70fe1a39f90391a23b19780b5586b053a3566d4223a238408d6888b",
          "name": "target_browser"
        },
        {
          "digest": "sha256:b9c572e7e651f37b663222f5e8b376669b65bd18c41b17c32b6ef249ca031dbf",
          "image": "registry.connect.redhat.com/trilio/hook-executor@sha256:b9c572e7e651f37b663222f5e8b376669b65bd18c41b17c32b6ef249ca031dbf",
          "name": "hook"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "5ff5e9cb3bf6eeab66d5445f",
      "alm_examples": [
        {
          "kind": "License",
          "metadata": {
            "name": "triliovault-license"
          },
          "spec": {
            "key": "xLkNDgwKD3jafZJNb8IwDIbv+RWRdo6Uj5a2SD1MwKRtjE0bsLOTuiISpFWaovHv145NQy3iPcb249d27j6xoE/tnkpJOZ/KaBrFVHLJycwjBFu5OQSk/8r7IOMJk5IsCttn0IHyB4+49hb2BEywR6SjjOBbJHtr0DW4Rd9cUnJJXsC6gA6cwcVXbf3pbKLvrRhPmersVYca3GlEfsdiB4Gs2oNG/1pumo5+EWaCfKA/on+cDysh5gWokjOjU8WEQGBaQMSM0DrDiTKTpCterOgV5d07+wXIm4Dleehh+3y9vd8s138MdduEqWq8YsLBAZsaDBbkudW4Gc1Ic56ITHMwrEwTwSIlY5bqLGGGx1kW6QQzUZKfncPotJfrf2u92UGDN37HDDorNgxPlAtOe3d0VRXYfAMj8ZzrMEYCIQCVaI/QJN+2M/QJWimd28dWOi/6o5s5I5+z30JrmzwGnQIhAKrSu8NeUIqXGEBTQvPKe3n2U0LNPht/ZAQIs5CZNeWlX02gk"
          }
        },
        {
          "kind": "Target",
          "metadata": {
            "labels": {
              "app": "triliovault"
            },
            "name": "triliovault-target"
          },
          "spec": {
            "nfsCredentials": {
              "nfsExport": "00.00.00.00:/src/nfs/kubedata",
              "nfsOptions": "nfsvers=4"
            },
            "type": "NFS",
            "vendor": "Other"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/trilio/r-3445381-bundle@sha256:3d08fbc3203b68e953d71cf21d2311e2fc6e4529870274535cf1bab1e6bb609f",
      "bundle_path_digest": "sha256:3d08fbc3203b68e953d71cf21d2311e2fc6e4529870274535cf1bab1e6bb609f",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "namespaced",
      "creation_date": "2021-01-06T16:48:11.353000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\n\nNote: The upgrade of TrilioVault for Kubernetes from version v1.1.1 to v2.0.0 is not supported due to the CRD scope change in operator. All the users of TrilioVault for Kubernetes v1.1.1 Cluster installation have to uninstall the TrilioVault for Kubernetes, delete the CRDs and reinstall the TrilioVault for Kubernetes v2.0.0\n\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-cluster.v2.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-04T14:48:53.880000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "k8s-triliovault",
      "provided_apis": [],
      "related_images": [
        {
          "digest": "sha256:d93508d9c7b516e1dadc0098422dbdebc66b377e81d7cbc7c0d9afcf86324b7a",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:d93508d9c7b516e1dadc0098422dbdebc66b377e81d7cbc7c0d9afcf86324b7a",
          "name": "control-plane-d93508d9c7b516e1dadc0098422dbdebc66b377e81d7cbc7c0d9afcf86324b7a-annotation"
        },
        {
          "digest": "sha256:d93508d9c7b516e1dadc0098422dbdebc66b377e81d7cbc7c0d9afcf86324b7a",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:d93508d9c7b516e1dadc0098422dbdebc66b377e81d7cbc7c0d9afcf86324b7a",
          "name": "k8s-triliovault-control-plane"
        },
        {
          "digest": "sha256:6c47a09c1ddc6a6f8fb79a6026603385a4fed7b5e62b501b14928fbe05b4faf6",
          "image": "registry.connect.redhat.com/trilio/trilio-admission-webhook@sha256:6c47a09c1ddc6a6f8fb79a6026603385a4fed7b5e62b501b14928fbe05b4faf6",
          "name": "triliovault-admission-webhook"
        },
        {
          "digest": "sha256:d4c343b387e4a1316a6fca6cfafebfa2a877c402b13898ddb3980cd85e858b01",
          "image": "registry.connect.redhat.com/trilio/exporter@sha256:d4c343b387e4a1316a6fca6cfafebfa2a877c402b13898ddb3980cd85e858b01",
          "name": "triliovault-exporter"
        },
        {
          "digest": "sha256:68753694b2ed6613ec6a4bf41258c54c0748d098e43ef09b366b89adb0784941",
          "image": "registry.connect.redhat.com/trilio/web@sha256:68753694b2ed6613ec6a4bf41258c54c0748d098e43ef09b366b89adb0784941",
          "name": "triliovault-web"
        },
        {
          "digest": "sha256:ca4dfd19e5e4c4e3e206ed1d8cd5f654f09a084531394d3c8262bfb40efdaf1b",
          "image": "registry.connect.redhat.com/trilio/web-backend@sha256:ca4dfd19e5e4c4e3e206ed1d8cd5f654f09a084531394d3c8262bfb40efdaf1b",
          "name": "triliovault-backend"
        },
        {
          "digest": "sha256:9d2aec99c0b9a79125ac9d8b20d92fed11c7efd37e77b4333679a4ffa158ed52",
          "image": "registry.connect.redhat.com/trilio/control-plane-init@sha256:9d2aec99c0b9a79125ac9d8b20d92fed11c7efd37e77b4333679a4ffa158ed52",
          "name": "control-plane-init"
        },
        {
          "digest": "sha256:9eb8416a7f708fcf46735c319a3a3644ac844b1ff22e898c821935eccef39444",
          "image": "registry.connect.redhat.com/trilio/trilio-webhook-init@sha256:9eb8416a7f708fcf46735c319a3a3644ac844b1ff22e898c821935eccef39444",
          "name": "webhook-init"
        },
        {
          "digest": "sha256:e47f100b857c9aaba14fc3eed50d61550a421a775b32ccb9a76d82e6c32d991e",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:e47f100b857c9aaba14fc3eed50d61550a421a775b32ccb9a76d82e6c32d991e",
          "name": "metamover"
        },
        {
          "digest": "sha256:d9397b598a8ea5a2901e32773bbdb2cb52f8fc106ed7d5dacb3239d7aeeae05d",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:d9397b598a8ea5a2901e32773bbdb2cb52f8fc106ed7d5dacb3239d7aeeae05d",
          "name": "datamover"
        },
        {
          "digest": "sha256:f5e113dd3097e69807f7fda898b527de31292eb4df08ec14b4c8df7a870ad414",
          "image": "registry.connect.redhat.com/trilio/datastore-attacher@sha256:f5e113dd3097e69807f7fda898b527de31292eb4df08ec14b4c8df7a870ad414",
          "name": "datastore_attacher"
        },
        {
          "digest": "sha256:702c9b18a998a59179d154efd4e36cf1e32fcc284fc7adc24c6f1b0fa069b449",
          "image": "registry.connect.redhat.com/trilio/backup-scheduler@sha256:702c9b18a998a59179d154efd4e36cf1e32fcc284fc7adc24c6f1b0fa069b449",
          "name": "backup_scheduler"
        },
        {
          "digest": "sha256:a4b077e0cae39b81b425157f57001605ff00a8ccdc029a56742dc1e2053d2058",
          "image": "registry.connect.redhat.com/trilio/backup-cleaner@sha256:a4b077e0cae39b81b425157f57001605ff00a8ccdc029a56742dc1e2053d2058",
          "name": "backup_cleaner"
        },
        {
          "digest": "sha256:31465a20a9237c661253009cbd9d22cec291fb7f73332039fcd0f6a7b065e75f",
          "image": "registry.connect.redhat.com/trilio/backup-retention@sha256:31465a20a9237c661253009cbd9d22cec291fb7f73332039fcd0f6a7b065e75f",
          "name": "backup_retention"
        },
        {
          "digest": "sha256:4d6d0568c70fe1a39f90391a23b19780b5586b053a3566d4223a238408d6888b",
          "image": "registry.connect.redhat.com/trilio/target-browser@sha256:4d6d0568c70fe1a39f90391a23b19780b5586b053a3566d4223a238408d6888b",
          "name": "target_browser"
        },
        {
          "digest": "sha256:b9c572e7e651f37b663222f5e8b376669b65bd18c41b17c32b6ef249ca031dbf",
          "image": "registry.connect.redhat.com/trilio/hook-executor@sha256:b9c572e7e651f37b663222f5e8b376669b65bd18c41b17c32b6ef249ca031dbf",
          "name": "hook"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "5ff5e9cd3bf6eeab66d54461",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/kubemq/kubemq-operator-bundle@sha256:28def796348a6830ef800f0dcdd7a669c01a34f54222828f24b00d419d945917",
      "bundle_path_digest": "sha256:28def796348a6830ef800f0dcdd7a669c01a34f54222828f24b00d419d945917",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-01-06T16:48:13.486000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "kubemq-operator.v1.2.6",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:13:16.453000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "kubemq-operator-marketplace",
      "provided_apis": [
        {
          "group": "core.k8s.kubemq.io",
          "kind": "KubemqCluster",
          "plural": "kubemqclusters",
          "version": "v1alpha1"
        },
        {
          "group": "core.k8s.kubemq.io",
          "kind": "KubemqConnector",
          "plural": "kubemqconnectors",
          "version": "v1alpha1"
        },
        {
          "group": "core.k8s.kubemq.io",
          "kind": "KubemqDashboard",
          "plural": "kubemqdashboards",
          "version": "v1alpha1"
        }
      ],
      "related_images": [],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.2.6",
      "version_original": "1.2.6"
    },
    {
      "_id": "5ff5e9cf54304a39b48d9a7c",
      "alm_examples": [
        {
          "kind": "LinstorController",
          "metadata": {
            "name": "linstor"
          },
          "spec": {
            "controllerImage": "",
            "dbConnectionURL": "etcd://linstor-etcd:2379",
            "drbdRepoCred": "",
            "priorityClassName": ""
          }
        },
        {
          "kind": "LinstorCSIDriver",
          "metadata": {
            "name": "linstor"
          },
          "spec": {
            "controllerEndpoint": "http://linstor:3370",
            "controllerReplicas": 1,
            "csiControllerServiceAccountName": "csi-controller",
            "csiNodeServiceAccountName": "csi-node",
            "imagePullSecret": "",
            "linstorPluginImage": ""
          }
        },
        {
          "kind": "LinstorSatelliteSet",
          "metadata": {
            "name": "linstor-satellites"
          },
          "spec": {
            "automaticStorageType": "None",
            "controllerEndpoint": "http://linstor:3370",
            "drbdRepoCred": "",
            "kernelModuleInjectionMode": "ShippedModules",
            "priorityClassName": "",
            "satelliteImage": ""
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/linbit/linstor-operator-bundle@sha256:8fa232d483afe50baf719056cc8d755bd853d35f6449787bd16fe279823b9b1e",
      "bundle_path_digest": "sha256:8fa232d483afe50baf719056cc8d755bd853d35f6449787bd16fe279823b9b1e",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-01-06T16:48:15.390000+00:00",
      "csv_description": "LINSTOR is a configuration management system for storage on Linux systems.\nIt manages LVM logical volumes and/or ZFS ZVOLs on a cluster of nodes.\nIt leverages DRBD for replication between different nodes and to provide block\nstorage devices to users and applications. It manages snapshots, encryption and\ncaching of HDD backed data in SSDs via bcache.\n\nLINBIT provides a certified LINSTOR operator to ease deployment of LINSTOR\non Openshift by installing DRBD, managing Satellite and Controller pods,\nand integrating with Openshift to provision persistent storage for your workloads.\n\nFor detailed instructions and more configuration options, see our [user guide].\n\n[user guide]: https://www.linbit.com/drbd-user-guide/linstor-guide-1_0-en/#ch-openshift\n\n## Install\n\nUnlike deployment via the helm chart, the certified Openshift\noperator does not deploy the needed etcd cluster. You must deploy this\nyourself ahead of time. We do this via the etcd operator available in the\nOperatorHub.\n\nIMPORTANT: It is advised that the etcd deployment uses persistent\nstorage of some type. Either use an existing storage provisioner with\na default `StorageClass` or simply use `hostPath` volumes.\n\n### Installing the operator\n\nHit \"Install\", select the stable update channel and a namespace for the\noperator. Use of a new namespace is recommended.\n\nHit \"Install\" again. At this point you should have just one pod, the\noperator pod, running. Next we needs to configure the remaining provided APIs.\n\n#### A note on operator namespaces\nThe LINSTOR operator can only watch for events and manage\ncustom resources that are within the same namespace it is deployed\nwithin (OwnNamsespace). This means the LINSTOR Controller, LINSTOR\nSatellites, and LINSTOR CSI Driver pods all need to be deployed in the\nsame namsepace as the LINSTOR Operator pod.\n\n### Deploying the LINSTOR Controller\n\nNavigate to the left-hand control pane of the Openshift Web\nConsole. Expand the \"Operators\" section, selecting \"Installed Operators\".\nFind the entry for the \"Linstor Operator\", then select the \"LinstorController\"\nfrom the \"Provided APIs\" column on the right.\n\nFrom here you should see a page that says \"No Operands Found\" and will\nfeature a large button on the right which says \"Create\nLinstorController\". Click the \"Create LinstorController\" button.\n\nHere you will be presented with options to configure the LINSTOR\nController. Either via the web-form view or the YAML View. Regardless\nof which view you select, make sure that the `dbConnectionURL` matches\nthe endpoint provided from your etcd deployment. Otherwise, the\ndefaults are usually fine for most purposes.\n\nLastly hit \"Create\", you should now see a linstor-controller pod\nrunning.\n\n### Deploying the LINSTOR Satellites\n\nNext we need to deploy the Satellites Set. Just as before navigate\nto the left-hand control pane of the Openshift Web Console. Expand the\n\"Operators\" section, but this time select \"Installed Operators\". Find\nthe entry for the \"Linstor Operator\", then select the\n\"LinstorSatelliteSet\" from the \"Provided APIs\" column on the right.\n\nFrom here you should see a page that says \"No Operands Found\" and will\nfeature a large button on the right which says \"Create\nLinstorSatelliteSet\". Click the \"Create LinstorSatelliteSet\" button.\n\nHere you will be presented with the options to configure the LINSTOR\nSatellites. The defaults should be enough to get you started.\nMake sure the `controllerEndpoint` matches what is available in the\nopenshift endpoints. The default is usually correct here.\n\nYou can edit the `storagePools` section to configure LINSTOR storage pools,\nincluding preparing the backing devices. See our [storage guide].\n\n[storage guide]: https://www.linbit.com/drbd-user-guide/linstor-guide-1_0-en/#s-kubernetes-storage\n\nBelow is an example manifest:\n\n```yaml\napiVersion: linstor.linbit.com/v1\nkind: LinstorSatelliteSet\nmetadata:\n  name: linstor-satellites\nspec:\n  satelliteImage: ''\n  automaticStorageType: None\n  storagePools:\n    lvmThinPools:\n    - name: openshift-pool\n      volumeGroup: \"\"\n      thinVolume: openshift\n      devicePaths:\n      - /dev/vdb\n  drbdRepoCred: ''\n  kernelModuleInjectionMode: ShippedModules\n  controllerEndpoint: 'http://linstor:3370'\n  priorityClassName: ''\n```\n\nLastly hit \"Create\", you should now see a linstor-node pod\nrunning on every worker node.\n\n### Deploying the LINSTOR CSI driver\n\nLast bit left is the CSI pods to bridge the layer between the CSI and\nLINSTOR. Just as before navigate to the left-hand control pane of the\nOpenshift Web Console. Expand the \"Operators\" section, but this time\nselect \"Installed Operators\". Find the entry for the \"Linstor Operator\",\nthen select the \"LinstorCSIDriver\" from the \"Provided APIs\" column on the\nright.\n\nFrom here you should see a page that says \"No Operands Found\" and will\nfeature a large button on the right which says \"Create\nLinstorCSIDriver\". Click the \"Create LinstorCSIDriver\" button.\n\nAgain, you will be presented with the options. Make sure that the\n`controllerEndpoint` is correct. Otherwise the defaults are fine for\nmost use cases.\n\nLastly hit \"Create\". You will now see a single \"linstor-csi-controller\" pod,\nas well as a \"linstor-csi-node\" pod on all worker nodes.\n\n## Interacting with LINSTOR in Openshift.\n\nThe Controller pod includes a LINSTOR Client, making it easy to interact directly with LINSTOR.\nFor instance:\n\n```\noc exec deployment/linstor-cs-controller -- linstor storage-pool list\n```\n\nThis should only be necessary for investigating problems and accessing advanced functionality.\nRegular operation such as creating volumes should be achieved via the [Openshift/Kubernetes integration].\n\n[Openshift/Kubernetes integration]: https://www.linbit.com/drbd-user-guide/linstor-guide-1_0-en/#s-kubernetes-basic-configuration-and-deployment",
      "csv_display_name": "Linstor Operator",
      "csv_metadata_description": "LINSTOR Kubernetes Operator",
      "csv_name": "linstor-operator.v1.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:38:23.760000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "linstor-operator",
      "provided_apis": [
        {
          "group": "linstor.linbit.com",
          "kind": "LinstorController",
          "plural": "linstorcontrollers",
          "version": "v1"
        },
        {
          "group": "linstor.linbit.com",
          "kind": "LinstorCSIDriver",
          "plural": "linstorcsidrivers",
          "version": "v1"
        },
        {
          "group": "linstor.linbit.com",
          "kind": "LinstorSatelliteSet",
          "plural": "linstorsatellitesets",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:70fe2efc5309ccdeaf273e6fd6b6b6f99260758282c7e5f855c8a3028c463270",
          "image": "registry.connect.redhat.com/linbit/linstor-operator@sha256:70fe2efc5309ccdeaf273e6fd6b6b6f99260758282c7e5f855c8a3028c463270",
          "name": "linstor-operator"
        },
        {
          "digest": "sha256:70fe2efc5309ccdeaf273e6fd6b6b6f99260758282c7e5f855c8a3028c463270",
          "image": "registry.connect.redhat.com/linbit/linstor-operator@sha256:70fe2efc5309ccdeaf273e6fd6b6b6f99260758282c7e5f855c8a3028c463270",
          "name": "operator"
        },
        {
          "digest": "sha256:0c18a0deb25a92a9222b124ba14d589e9c9d5bbedc71ff5f98f6ee247a6c56fd",
          "image": "registry.connect.redhat.com/linbit/linstor-controller@sha256:0c18a0deb25a92a9222b124ba14d589e9c9d5bbedc71ff5f98f6ee247a6c56fd",
          "name": "linstor_controller"
        },
        {
          "digest": "sha256:6c7f6f89db0490d383dc25811f9025991d573cdf6709d3878ad589752444bfc1",
          "image": "registry.connect.redhat.com/linbit/linstor-satellite@sha256:6c7f6f89db0490d383dc25811f9025991d573cdf6709d3878ad589752444bfc1",
          "name": "linstor_satellite"
        },
        {
          "digest": "sha256:244fe904cef90d459832b32fcfc746216ab5ebff3b2152ccca5970d581cc6a7c",
          "image": "registry.connect.redhat.com/linbit/drbd-9@sha256:244fe904cef90d459832b32fcfc746216ab5ebff3b2152ccca5970d581cc6a7c",
          "name": "kernel_module_injection"
        },
        {
          "digest": "sha256:addd6f610c8e6318d0060d2cc3b36986f2e2747b84ee0a2269065d3c919e7f76",
          "image": "registry.connect.redhat.com/linbit/linstor-csi@sha256:addd6f610c8e6318d0060d2cc3b36986f2e2747b84ee0a2269065d3c919e7f76",
          "name": "csi_plugin"
        },
        {
          "digest": "sha256:87db9cca0c2e58343e1ca60e9ae4294f115515e7724984de30207b1205ed3611",
          "image": "registry.redhat.io/openshift4/ose-csi-external-attacher@sha256:87db9cca0c2e58343e1ca60e9ae4294f115515e7724984de30207b1205ed3611",
          "name": "csi_attacher"
        },
        {
          "digest": "sha256:713cccb1a9fadab102c1d62782280265d910b1a8b90bdc246db716e8b71ded3f",
          "image": "registry.redhat.io/openshift4/ose-csi-livenessprobe@sha256:713cccb1a9fadab102c1d62782280265d910b1a8b90bdc246db716e8b71ded3f",
          "name": "csi_livenessprobe"
        },
        {
          "digest": "sha256:4cf9fb2d021b0ce409ef7fdf2d4b182f655950ba28cb822ffc4549de422d4184",
          "image": "registry.redhat.io/openshift4/ose-csi-node-driver-registrar@sha256:4cf9fb2d021b0ce409ef7fdf2d4b182f655950ba28cb822ffc4549de422d4184",
          "name": "csi_node_registrar"
        },
        {
          "digest": "sha256:376ee9cf355554a3174e12329545d1a89ed0228ac2597adbd282ae513dbb84e8",
          "image": "registry.redhat.io/openshift4/ose-csi-external-provisioner@sha256:376ee9cf355554a3174e12329545d1a89ed0228ac2597adbd282ae513dbb84e8",
          "name": "csi_provisioner"
        },
        {
          "digest": "sha256:90f9dd56fa26339f6d4ff81c7e94794c237ba0963f660480d129c67becdc5e5f",
          "image": "registry.redhat.io/openshift4/ose-csi-external-snapshotter@sha256:90f9dd56fa26339f6d4ff81c7e94794c237ba0963f660480d129c67becdc5e5f",
          "name": "csi_snapshotter"
        },
        {
          "digest": "sha256:136a81c87028a8f7e6c1c579923548b36dbf034e4dd24215e1739ac484e7382b",
          "image": "registry.redhat.io/openshift4/ose-csi-external-resizer@sha256:136a81c87028a8f7e6c1c579923548b36dbf034e4dd24215e1739ac484e7382b",
          "name": "csi_resizer"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.2.0",
      "version_original": "1.2.0"
    },
    {
      "_id": "5ff5e9d03bf6eeab66d54462",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:0cc69f7bb40a40bf02485677bc01ae3768b3ae8015c4d3bd1c1d088ee487117a",
      "bundle_path_digest": "sha256:0cc69f7bb40a40bf02485677bc01ae3768b3ae8015c4d3bd1c1d088ee487117a",
      "capabilities": [
        ""
      ],
      "channel_name": "beta",
      "creation_date": "2021-01-06T16:48:16.030000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "neuvector-operator.v1.2.1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:32:54.269000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "related_images": [],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.2.1",
      "version_original": "1.2.1"
    },
    {
      "_id": "5ff5e9d054304a39b48d9a7e",
      "alm_examples": [
        {
          "kind": "NginxIngressController",
          "metadata": {
            "name": "my-nginx-ingress-controller",
            "namespace": "my-nginx-ingress"
          },
          "spec": {
            "enableCRDs": true,
            "image": {
              "pullPolicy": "Always",
              "repository": "docker.io/nginx/nginx-ingress",
              "tag": "1.9.1-ubi"
            },
            "ingressClass": "nginx",
            "nginxPlus": false,
            "replicas": 1,
            "serviceType": "NodePort",
            "type": "deployment"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nginx/nginx-ingress-operator-bundle@sha256:3dc0dc8f785195dc30977d96d038b8101ddb79e4e7ea9375c94bdbb533d4969b",
      "bundle_path_digest": "sha256:3dc0dc8f785195dc30977d96d038b8101ddb79e4e7ea9375c94bdbb533d4969b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-01-06T16:48:16.839000+00:00",
      "csv_description": "The NGINX Ingress Operator is a Kubernetes/OpenShift component which deploys and manages one or more NGINX/NGINX Plus Ingress Controllers",
      "csv_display_name": "Nginx Ingress Operator",
      "csv_metadata_description": "The NGINX Ingress Operator is a Kubernetes/OpenShift component which deploys and manages one or more NGINX/NGINX Plus Ingress Controllers",
      "csv_name": "nginx-ingress-operator.v0.0.7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:12:05.061000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "nginx-ingress-operator",
      "provided_apis": [
        {
          "group": "k8s.nginx.org",
          "kind": "NginxIngressController",
          "plural": "nginxingresscontrollers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:51d291591f4e4f6bb306564a2112fb39a2ae3edbb81b7299d73023a2ba070542",
          "image": "registry.connect.redhat.com/nginx/nginx-ingress-operator@sha256:51d291591f4e4f6bb306564a2112fb39a2ae3edbb81b7299d73023a2ba070542",
          "name": "nginx-ingress-operator-51d291591f4e4f6bb306564a2112fb39a2ae3edbb81b7299d73023a2ba070542-annotation"
        },
        {
          "digest": "sha256:51d291591f4e4f6bb306564a2112fb39a2ae3edbb81b7299d73023a2ba070542",
          "image": "registry.connect.redhat.com/nginx/nginx-ingress-operator@sha256:51d291591f4e4f6bb306564a2112fb39a2ae3edbb81b7299d73023a2ba070542",
          "name": "nginx-ingress-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.0.7",
      "version_original": "0.0.7"
    },
    {
      "_id": "5ff5e9d154304a39b48d9a7f",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:0cc69f7bb40a40bf02485677bc01ae3768b3ae8015c4d3bd1c1d088ee487117a",
      "bundle_path_digest": "sha256:0cc69f7bb40a40bf02485677bc01ae3768b3ae8015c4d3bd1c1d088ee487117a",
      "capabilities": [
        ""
      ],
      "channel_name": "beta",
      "creation_date": "2021-01-06T16:48:17.780000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "neuvector-operator.v1.2.1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:14:00.950000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "related_images": [],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.2.1",
      "version_original": "1.2.1"
    },
    {
      "_id": "5ff5e9d254304a39b48d9a80",
      "alm_examples": [
        {
          "kind": "NginxIngressController",
          "metadata": {
            "name": "my-nginx-ingress-controller",
            "namespace": "my-nginx-ingress"
          },
          "spec": {
            "enableCRDs": true,
            "image": {
              "pullPolicy": "Always",
              "repository": "docker.io/nginx/nginx-ingress",
              "tag": "1.9.1-ubi"
            },
            "ingressClass": "nginx",
            "nginxPlus": false,
            "replicas": 1,
            "serviceType": "NodePort",
            "type": "deployment"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nginx/nginx-ingress-operator-bundle@sha256:3dc0dc8f785195dc30977d96d038b8101ddb79e4e7ea9375c94bdbb533d4969b",
      "bundle_path_digest": "sha256:3dc0dc8f785195dc30977d96d038b8101ddb79e4e7ea9375c94bdbb533d4969b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-01-06T16:48:18.578000+00:00",
      "csv_description": "The NGINX Ingress Operator is a Kubernetes/OpenShift component which deploys and manages one or more NGINX/NGINX Plus Ingress Controllers",
      "csv_display_name": "Nginx Ingress Operator",
      "csv_metadata_description": "The NGINX Ingress Operator is a Kubernetes/OpenShift component which deploys and manages one or more NGINX/NGINX Plus Ingress Controllers",
      "csv_name": "nginx-ingress-operator.v0.0.7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:30:28.133000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "nginx-ingress-operator",
      "provided_apis": [
        {
          "group": "k8s.nginx.org",
          "kind": "NginxIngressController",
          "plural": "nginxingresscontrollers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:51d291591f4e4f6bb306564a2112fb39a2ae3edbb81b7299d73023a2ba070542",
          "image": "registry.connect.redhat.com/nginx/nginx-ingress-operator@sha256:51d291591f4e4f6bb306564a2112fb39a2ae3edbb81b7299d73023a2ba070542",
          "name": "nginx-ingress-operator-51d291591f4e4f6bb306564a2112fb39a2ae3edbb81b7299d73023a2ba070542-annotation"
        },
        {
          "digest": "sha256:51d291591f4e4f6bb306564a2112fb39a2ae3edbb81b7299d73023a2ba070542",
          "image": "registry.connect.redhat.com/nginx/nginx-ingress-operator@sha256:51d291591f4e4f6bb306564a2112fb39a2ae3edbb81b7299d73023a2ba070542",
          "name": "nginx-ingress-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.0.7",
      "version_original": "0.0.7"
    },
    {
      "_id": "5ff5e9d454304a39b48d9a81",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator-bundle@sha256:bb0802549d55a58ab1edec52991de5fecbb0403f9f9544a5cc2da44cd995a1cc",
      "bundle_path_digest": "sha256:bb0802549d55a58ab1edec52991de5fecbb0403f9f9544a5cc2da44cd995a1cc",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-01-06T16:48:20.625000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "dynatrace-monitoring.v0.9.2",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:10:28.059000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "oneagent-certified",
      "provided_apis": [
        {
          "group": "dynatrace.com",
          "kind": "OneAgent",
          "version": "v1alpha1"
        },
        {
          "group": "dynatrace.com",
          "kind": "OneAgentAPM",
          "version": "v1alpha1"
        }
      ],
      "related_images": [],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.9.2",
      "version_original": "0.9.2"
    },
    {
      "_id": "5ff5e9d63bf6eeab66d54464",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator-bundle@sha256:bb0802549d55a58ab1edec52991de5fecbb0403f9f9544a5cc2da44cd995a1cc",
      "bundle_path_digest": "sha256:bb0802549d55a58ab1edec52991de5fecbb0403f9f9544a5cc2da44cd995a1cc",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-01-06T16:48:22.686000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "dynatrace-monitoring.v0.9.2",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:06:32.236000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "oneagent-certified",
      "provided_apis": [],
      "related_images": [],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.9.2",
      "version_original": "0.9.2"
    },
    {
      "_id": "5ff5e9d854304a39b48d9a83",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jfrog/artifactory-operator-bundle@sha256:9e558f919dcde8725e92e313fa50263273b2eb785fc4c6cbc671af63b2b0b7bc",
      "bundle_path_digest": "sha256:9e558f919dcde8725e92e313fa50263273b2eb785fc4c6cbc671af63b2b0b7bc",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-01-06T16:48:24.424000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "artifactory-ha-operator.v1.1.4",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T16:39:00.084000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "openshiftartifactoryha-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "OpenshiftArtifactoryHa",
          "plural": "openshiftartifactoryhas",
          "version": "v1alpha1"
        }
      ],
      "related_images": [],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.1.4",
      "version_original": "1.1.4"
    },
    {
      "_id": "5ff5e9d954304a39b48d9a84",
      "alm_examples": [
        {
          "kind": "PerceptiLabs",
          "metadata": {
            "name": "example-perceptilabs"
          },
          "spec": {
            "coreGpus": 0,
            "corePvc": "perceptilabs-pvc",
            "license_name": "demo",
            "license_value": "demo",
            "ryggPvc": "perceptilabs-pvc"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/perceptilabs/perceptilabs-operator-bundle@sha256:ac9d7ca9b4ca142bd5c983e541cc687fea3143446b79d7d853f7dd654a3001ef",
      "bundle_path_digest": "sha256:ac9d7ca9b4ca142bd5c983e541cc687fea3143446b79d7d853f7dd654a3001ef",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-01-06T16:48:25.387000+00:00",
      "csv_description": "The PerceptiLabs operator creates and maintains PerceptiLabs, a visual tool for machine learning at warp speed.\n\nPerceptiLabs visual modeling tool provides a GUI for building,\ntraining, and assessing your models, while also enabling deeper\ndevelopment with code. You get faster iterations and better\nexplainability of your results.\n\nFor more information visit [http://perceptilabs.com](http://perceptilabs.com).\n\n# Features\n\n**Fast modeling**  \nMake changes, debug, and tune your model through the GUI of custom code\neditor where every component/layer is reprogrammable. Choose from\nmultiple neural network models as well as classical AI methods.\n\n\n**Transparency of Model Performance and Results**  \nGet instant feedback about your model's performance through the\nvisualization of the architecture, to better review and understand the\nresults. See real-time analytics in every operation and variable, and\ngranular previews of output from each model component.\n\n\n**Flexibility**  \nCustomize your environment and statistics dashboard. Use high-level\nabstractions or low-level code. Execute any custom Python code or export\na fully trained TensorFlow model to perform inference in your projects.\n\n\n\n# Installation Instructions  \nFor your convenience, we've included an example quickstart for running PerceptiLabs in demo mode.\n\n## Prepare your namespace  \nChoose or create the namespace into which you'd like install PerceptiLabs. For example:  \n```\noc create namespace REPLACE_NAMESPACE\n```\n\n## Prepare storage for your data\n\nYou'll need to have a place on your cluster for storing training data and models.\n\nHere's an example configuration for creating storage on a cluster hosted on AWS that you can tailor to your needs:\n\n```\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: perceptilabs-example-sc\n  annotations:\n    description: Example Storage for PerceptiLabs\nprovisioner: kubernetes.io/aws-ebs\nparameters:\n  fsType: ext4\n  type: gp2\nreclaimPolicy: Delete\nvolumeBindingMode: Immediate\n---\nkind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n  name: REPLACE_PVC_NAME\n  namespace: REPLACE_NAMESPACE\nspec:\n  storageClassName: perceptilabs-example-sc\n  volumeMode: Filesystem\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 50Gi\n```\n\n## Subscribe to the PerceptiLabs operator in your namespace\n\nIf you're using the OpenShift console webpage, just click the Install button on this operator. If not, you can customize and apply this configuration:\n\n```\napiVersion: operators.coreos.com/v1\nkind: OperatorGroup\nmetadata:\n  name: REPLACE_NAMESPACE-operatorgroup\n  namespace: REPLACE_NAMESPACE\nspec:\n  targetNamespaces:\n  - REPLACE_NAMESPACE\n---\napiVersion: operators.coreos.com/v1alpha1\nkind: Subscription\nmetadata:\n  name: perceptilabs-operator\n  namespace: REPLACE_NAMESPACE\nspec:\n  channel: stable\n  name: perceptilabs-operator-package\n  source: perceptilabs-operators\n  sourceNamespace: openshift-marketplace\n  namespace: REPLACE_NAMESPACE\n```\n\nAfter this, you should see a `perceptilabs-operator` pod start up in your namespace. In that pod, the log for the `operator` container should eventually say \"starting to serve\".\n\n## Start a copy of PerceptiLabs\n\nThis is where you connect your storage and service account to a PerceptiLabs instance and run it. You can customize and apply the following configuration:\n\n```\napiVersion: perceptilabs.com/v1\nkind: PerceptiLabs\nmetadata:\n  name: example-perceptilabs\n  namespace: REPLACE_NAMESPACE\nspec:\n  corePvc: REPLACE_PVC_NAME\n  ryggPvc: REPLACE_PVC_NAME\n```\n\nAt this point two pods named 'perceptilabs-core-...' and 'perceptilabs-frontend-...` will start up in your namespace.\n\n## Copy data files to your cluster\n\nIf you've used the persistent storage configuration from above, then you have a read-write volume mounted in the pod at `/mnt/plabs`. Copy your files there:\n\n```\noc cp REPLACE_FILENAME --namespace=REPLACE_NAMESPACE REPLACE_CORE_POD_NAME:/mnt/plabs --container=core\n```\n\n## Get the URL of your PerceptiLabs\n\nOnce everything is up and running, you'll have two new routes in your namespace. Go to the routes for your namespace and follow the link named `perceptilabs-frontend`. Your browser will be connected to your instance of PerceptiLabs! Alternatively, you can get the URL from the command line:\n\n```\noc get routes --namespace REPLACE_NAMESPACE perceptilabs-frontend\n```",
      "csv_display_name": "PerceptiLabs Operator",
      "csv_metadata_description": "AI platform which lets you Build, Train and Analyze",
      "csv_name": "perceptilabs-operator.v1.0.21",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:22:53.627000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "perceptilabs-operator-package",
      "provided_apis": [
        {
          "group": "perceptilabs.com",
          "kind": "PerceptiLabs",
          "plural": "perceptilabs",
          "version": "v1"
        },
        {
          "group": "perceptilabs.com",
          "kind": "PerceptiLabs",
          "plural": "perceptilabs",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:520d0b84a205a00653493bd88ee570b46ee010da51c00aefb44e16a483ef46a8",
          "image": "registry.connect.redhat.com/perceptilabs/perceptilabs-operator@sha256:520d0b84a205a00653493bd88ee570b46ee010da51c00aefb44e16a483ef46a8",
          "name": "perceptilabs-operator-520d0b84a205a00653493bd88ee570b46ee010da51c00aefb44e16a483ef46a8-annotation"
        },
        {
          "digest": "sha256:520d0b84a205a00653493bd88ee570b46ee010da51c00aefb44e16a483ef46a8",
          "image": "registry.connect.redhat.com/perceptilabs/perceptilabs-operator@sha256:520d0b84a205a00653493bd88ee570b46ee010da51c00aefb44e16a483ef46a8",
          "name": "ansible"
        },
        {
          "digest": "sha256:520d0b84a205a00653493bd88ee570b46ee010da51c00aefb44e16a483ef46a8",
          "image": "registry.connect.redhat.com/perceptilabs/perceptilabs-operator@sha256:520d0b84a205a00653493bd88ee570b46ee010da51c00aefb44e16a483ef46a8",
          "name": "operator"
        },
        {
          "digest": "sha256:e32ba8261fd22d8324b7cee2cd62a04602e33a11dc12994f629b715ae6983459",
          "image": "registry.connect.redhat.com/perceptilabs/perceptilabs-frontend-1@sha256:e32ba8261fd22d8324b7cee2cd62a04602e33a11dc12994f629b715ae6983459",
          "name": "frontend_image"
        },
        {
          "digest": "sha256:bf50b30c9e1c09929b0cc70d200638c5947ca20695ded49bc38fc6790cd7f2ef",
          "image": "registry.connect.redhat.com/perceptilabs/perceptilabs-core-1@sha256:bf50b30c9e1c09929b0cc70d200638c5947ca20695ded49bc38fc6790cd7f2ef",
          "name": "core_image"
        },
        {
          "digest": "sha256:5927fde799ab21ab425db72ddb51d19c1ea7c6fb0b5dbe68cf7637f6d66774d3",
          "image": "registry.connect.redhat.com/perceptilabs/perceptilabs-rygg-1@sha256:5927fde799ab21ab425db72ddb51d19c1ea7c6fb0b5dbe68cf7637f6d66774d3",
          "name": "rygg_image"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.21",
      "version_original": "1.0.21"
    },
    {
      "_id": "5ff5e9dc54304a39b48d9a87",
      "alm_examples": [
        {
          "kind": "PerceptiLabs",
          "metadata": {
            "name": "example-perceptilabs"
          },
          "spec": {
            "coreGpus": 0,
            "corePvc": "perceptilabs-pvc",
            "license_name": "demo",
            "license_value": "demo",
            "ryggPvc": "perceptilabs-pvc"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/perceptilabs/perceptilabs-operator-bundle@sha256:ac9d7ca9b4ca142bd5c983e541cc687fea3143446b79d7d853f7dd654a3001ef",
      "bundle_path_digest": "sha256:ac9d7ca9b4ca142bd5c983e541cc687fea3143446b79d7d853f7dd654a3001ef",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-01-06T16:48:28.987000+00:00",
      "csv_description": "The PerceptiLabs operator creates and maintains PerceptiLabs, a visual tool for machine learning at warp speed.\n\nPerceptiLabs visual modeling tool provides a GUI for building,\ntraining, and assessing your models, while also enabling deeper\ndevelopment with code. You get faster iterations and better\nexplainability of your results.\n\nFor more information visit [http://perceptilabs.com](http://perceptilabs.com).\n\n# Features\n\n**Fast modeling**  \nMake changes, debug, and tune your model through the GUI of custom code\neditor where every component/layer is reprogrammable. Choose from\nmultiple neural network models as well as classical AI methods.\n\n\n**Transparency of Model Performance and Results**  \nGet instant feedback about your model's performance through the\nvisualization of the architecture, to better review and understand the\nresults. See real-time analytics in every operation and variable, and\ngranular previews of output from each model component.\n\n\n**Flexibility**  \nCustomize your environment and statistics dashboard. Use high-level\nabstractions or low-level code. Execute any custom Python code or export\na fully trained TensorFlow model to perform inference in your projects.\n\n\n\n# Installation Instructions  \nFor your convenience, we've included an example quickstart for running PerceptiLabs in demo mode.\n\n## Prepare your namespace  \nChoose or create the namespace into which you'd like install PerceptiLabs. For example:  \n```\noc create namespace REPLACE_NAMESPACE\n```\n\n## Prepare storage for your data\n\nYou'll need to have a place on your cluster for storing training data and models.\n\nHere's an example configuration for creating storage on a cluster hosted on AWS that you can tailor to your needs:\n\n```\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: perceptilabs-example-sc\n  annotations:\n    description: Example Storage for PerceptiLabs\nprovisioner: kubernetes.io/aws-ebs\nparameters:\n  fsType: ext4\n  type: gp2\nreclaimPolicy: Delete\nvolumeBindingMode: Immediate\n---\nkind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n  name: REPLACE_PVC_NAME\n  namespace: REPLACE_NAMESPACE\nspec:\n  storageClassName: perceptilabs-example-sc\n  volumeMode: Filesystem\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 50Gi\n```\n\n## Subscribe to the PerceptiLabs operator in your namespace\n\nIf you're using the OpenShift console webpage, just click the Install button on this operator. If not, you can customize and apply this configuration:\n\n```\napiVersion: operators.coreos.com/v1\nkind: OperatorGroup\nmetadata:\n  name: REPLACE_NAMESPACE-operatorgroup\n  namespace: REPLACE_NAMESPACE\nspec:\n  targetNamespaces:\n  - REPLACE_NAMESPACE\n---\napiVersion: operators.coreos.com/v1alpha1\nkind: Subscription\nmetadata:\n  name: perceptilabs-operator\n  namespace: REPLACE_NAMESPACE\nspec:\n  channel: stable\n  name: perceptilabs-operator-package\n  source: perceptilabs-operators\n  sourceNamespace: openshift-marketplace\n  namespace: REPLACE_NAMESPACE\n```\n\nAfter this, you should see a `perceptilabs-operator` pod start up in your namespace. In that pod, the log for the `operator` container should eventually say \"starting to serve\".\n\n## Start a copy of PerceptiLabs\n\nThis is where you connect your storage and service account to a PerceptiLabs instance and run it. You can customize and apply the following configuration:\n\n```\napiVersion: perceptilabs.com/v1\nkind: PerceptiLabs\nmetadata:\n  name: example-perceptilabs\n  namespace: REPLACE_NAMESPACE\nspec:\n  corePvc: REPLACE_PVC_NAME\n  ryggPvc: REPLACE_PVC_NAME\n```\n\nAt this point two pods named 'perceptilabs-core-...' and 'perceptilabs-frontend-...` will start up in your namespace.\n\n## Copy data files to your cluster\n\nIf you've used the persistent storage configuration from above, then you have a read-write volume mounted in the pod at `/mnt/plabs`. Copy your files there:\n\n```\noc cp REPLACE_FILENAME --namespace=REPLACE_NAMESPACE REPLACE_CORE_POD_NAME:/mnt/plabs --container=core\n```\n\n## Get the URL of your PerceptiLabs\n\nOnce everything is up and running, you'll have two new routes in your namespace. Go to the routes for your namespace and follow the link named `perceptilabs-frontend`. Your browser will be connected to your instance of PerceptiLabs! Alternatively, you can get the URL from the command line:\n\n```\noc get routes --namespace REPLACE_NAMESPACE perceptilabs-frontend\n```",
      "csv_display_name": "PerceptiLabs Operator",
      "csv_metadata_description": "AI platform which lets you Build, Train and Analyze",
      "csv_name": "perceptilabs-operator.v1.0.21",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:41:51.080000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "perceptilabs-operator-package",
      "provided_apis": [
        {
          "group": "perceptilabs.com",
          "kind": "PerceptiLabs",
          "plural": "perceptilabs",
          "version": "v1"
        },
        {
          "group": "perceptilabs.com",
          "kind": "PerceptiLabs",
          "plural": "perceptilabs",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:520d0b84a205a00653493bd88ee570b46ee010da51c00aefb44e16a483ef46a8",
          "image": "registry.connect.redhat.com/perceptilabs/perceptilabs-operator@sha256:520d0b84a205a00653493bd88ee570b46ee010da51c00aefb44e16a483ef46a8",
          "name": "perceptilabs-operator-520d0b84a205a00653493bd88ee570b46ee010da51c00aefb44e16a483ef46a8-annotation"
        },
        {
          "digest": "sha256:520d0b84a205a00653493bd88ee570b46ee010da51c00aefb44e16a483ef46a8",
          "image": "registry.connect.redhat.com/perceptilabs/perceptilabs-operator@sha256:520d0b84a205a00653493bd88ee570b46ee010da51c00aefb44e16a483ef46a8",
          "name": "ansible"
        },
        {
          "digest": "sha256:520d0b84a205a00653493bd88ee570b46ee010da51c00aefb44e16a483ef46a8",
          "image": "registry.connect.redhat.com/perceptilabs/perceptilabs-operator@sha256:520d0b84a205a00653493bd88ee570b46ee010da51c00aefb44e16a483ef46a8",
          "name": "operator"
        },
        {
          "digest": "sha256:e32ba8261fd22d8324b7cee2cd62a04602e33a11dc12994f629b715ae6983459",
          "image": "registry.connect.redhat.com/perceptilabs/perceptilabs-frontend-1@sha256:e32ba8261fd22d8324b7cee2cd62a04602e33a11dc12994f629b715ae6983459",
          "name": "frontend_image"
        },
        {
          "digest": "sha256:bf50b30c9e1c09929b0cc70d200638c5947ca20695ded49bc38fc6790cd7f2ef",
          "image": "registry.connect.redhat.com/perceptilabs/perceptilabs-core-1@sha256:bf50b30c9e1c09929b0cc70d200638c5947ca20695ded49bc38fc6790cd7f2ef",
          "name": "core_image"
        },
        {
          "digest": "sha256:5927fde799ab21ab425db72ddb51d19c1ea7c6fb0b5dbe68cf7637f6d66774d3",
          "image": "registry.connect.redhat.com/perceptilabs/perceptilabs-rygg-1@sha256:5927fde799ab21ab425db72ddb51d19c1ea7c6fb0b5dbe68cf7637f6d66774d3",
          "name": "rygg_image"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.0.21",
      "version_original": "1.0.21"
    },
    {
      "_id": "5ff5f0bf8634b82517526305",
      "alm_examples": [
        {
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {
            "autopilot": {
              "enabled": false
            }
          }
        },
        {
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:c2bc0d28a5c322d55ad45a82fb1845cf4346b387afc3076e0f891b3d4e6656d3",
      "bundle_path_digest": "sha256:c2bc0d28a5c322d55ad45a82fb1845cf4346b387afc3076e0f891b3d4e6656d3",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-01-06T17:17:51.529000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.4.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-04T14:47:02.219000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:1692041ab0b0920e9f4b6096e23b2b56a8ec8f077deb3d797755646b56ddb5bd",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:1692041ab0b0920e9f4b6096e23b2b56a8ec8f077deb3d797755646b56ddb5bd",
          "name": "openstorage-operator-1692041ab0b0920e9f4b6096e23b2b56a8ec8f077deb3d797755646b56ddb5bd-annotation"
        },
        {
          "digest": "sha256:1692041ab0b0920e9f4b6096e23b2b56a8ec8f077deb3d797755646b56ddb5bd",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:1692041ab0b0920e9f4b6096e23b2b56a8ec8f077deb3d797755646b56ddb5bd",
          "name": "portworx-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.4.2",
      "version_original": "1.4.2"
    },
    {
      "_id": "5ff5f0c08634b82517526306",
      "alm_examples": [
        {
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {
            "autopilot": {
              "enabled": false
            }
          }
        },
        {
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:c2bc0d28a5c322d55ad45a82fb1845cf4346b387afc3076e0f891b3d4e6656d3",
      "bundle_path_digest": "sha256:c2bc0d28a5c322d55ad45a82fb1845cf4346b387afc3076e0f891b3d4e6656d3",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2021-01-06T17:17:52.402000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.4.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:43:39.998000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:1692041ab0b0920e9f4b6096e23b2b56a8ec8f077deb3d797755646b56ddb5bd",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:1692041ab0b0920e9f4b6096e23b2b56a8ec8f077deb3d797755646b56ddb5bd",
          "name": "openstorage-operator-1692041ab0b0920e9f4b6096e23b2b56a8ec8f077deb3d797755646b56ddb5bd-annotation"
        },
        {
          "digest": "sha256:1692041ab0b0920e9f4b6096e23b2b56a8ec8f077deb3d797755646b56ddb5bd",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:1692041ab0b0920e9f4b6096e23b2b56a8ec8f077deb3d797755646b56ddb5bd",
          "name": "portworx-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.4.2",
      "version_original": "1.4.2"
    },
    {
      "_id": "5ff5f0c50c023d07361b8310",
      "alm_examples": [
        {
          "kind": "MarketplaceConfig",
          "metadata": {
            "name": "rhm-marketplaceconfig"
          },
          "spec": {
            "clusterUUID": "example-clusterUUID",
            "deploySecretName": "rhm-operator-secret",
            "installIBMCatalogSource": false,
            "rhmAccountID": "example-userid"
          }
        },
        {
          "kind": "MeterBase",
          "metadata": {
            "name": "meterbase"
          },
          "spec": {
            "enabled": true,
            "prometheus": {
              "resources": {
                "limits": {
                  "cpu": "2",
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": "1",
                  "memory": "1G"
                }
              },
              "storage": {
                "size": "20Gi"
              }
            }
          }
        },
        {
          "kind": "MeterDefinition",
          "metadata": {
            "name": "example-meterdefinition-2"
          },
          "spec": {
            "meterGroup": "partner.metering.com",
            "meterKind": "App",
            "workloadVertexType": "OperatorGroup",
            "workloads": [
              {
                "metricLabels": [
                  {
                    "aggregation": "sum",
                    "label": "container_spec_cpu_shares"
                  }
                ],
                "name": "app-pods",
                "ownerCRD": {
                  "apiVersion": "partner.metering.com/v1alpha1",
                  "kind": "App"
                },
                "type": "Pod"
              }
            ]
          }
        },
        {
          "kind": "MeterReport",
          "metadata": {
            "name": "example-meterreport"
          },
          "spec": {
            "endTime": "2020-08-05T00:00:00Z",
            "prometheusService": {
              "name": "rhm-prometheus-meterbase",
              "namespace": "openshift-redhat-marketplace",
              "targetPort": "rbac"
            },
            "startTime": "2020-08-04T00:00:00Z"
          }
        },
        {
          "kind": "RazeeDeployment",
          "metadata": {
            "name": "razeedeployment-example"
          },
          "spec": {
            "clusterUUID": "example-cluster-uuid",
            "enabled": true
          }
        },
        {
          "kind": "RemoteResourceS3",
          "metadata": {
            "name": "example-remoteresources3"
          },
          "spec": {
            "auth": {
              "iam": {
                "apiKeyRef": {
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "accesskey",
                      "name": "rhm-cos-reader-key"
                    }
                  }
                },
                "grantType": "urn:ibm:params:oauth:grant-type:apikey",
                "responseType": "cloud_iam",
                "url": "https://iam.cloud.ibm.com/identity/token"
              }
            },
            "requests": [
              {
                "options": {
                  "url": "https://s3.us-east.cloud-object-storage.appdomain.cloud/your-accountId/your-cluster-uuid/name-of-child.yaml"
                }
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/rh-marketplace/rh-marketplace-bundle@sha256:d55a85c57dfd83ad010fead6b3c34cf0d8f098404bfab7dee22bbd66cc993855",
      "bundle_path_digest": "sha256:d55a85c57dfd83ad010fead6b3c34cf0d8f098404bfab7dee22bbd66cc993855",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "beta",
      "creation_date": "2021-01-06T17:17:57.388000+00:00",
      "csv_description": "The Red Hat Marketplace Operator provides cluster management, metering and\noperator installation for Red Hat Marketplace customers.\n\n### **Important Note**\n\nA set of instructions for onboarding is provided here. For more detailed onboarding instructions or information about what is installed please visit [marketplace.redhat.com](marketplace.redhat.com).\n\nTo access images from Red Hat Marketplace and the Marketplace container catalog you will need to make the pull secret attained in installation available to the workloads running on the cluster.\n\n### Installation\n\n1. Create or get your pull secret from [Red Hat Marketplace](https://marketplace.redhat.com/en-us/documentation/clusters#get-pull-secret).\n\n2. Install the Red Hat Marketplace Operator in the openshift-redhat-marketplace namespace.\n\n3. Create a Kubernetes secret in the openshift-redhat-marketplace namespace with the name `redhat-marketplace-pull-secret` and key `PULL_SECRET` with the value of the Red hat Marketplace Pull Secret.\n\n   ```sh\n   # Replace ${PULL_SECRET} with your secret from Red Hat Marketplace\n   oc create secret generic redhat-marketplace-pull-secret -n  openshift-redhat-marketplace --from-literal=PULL_SECRET=${PULL_SECRET}\n   ```\n\n4. Install the Red Hat Marketplace pull secret as a global pull secret on the cluster.\n\n   **Warning:** This step will make your cluster perform a rolling restart.\n\n   These steps require `oc`, `jq`, and `base64` to be available on your machine.\n\n   ```sh\n   # Create the docker pull secret file using your PULL_SECRET from Red Hat Marketplace.\n   # Store it in a file called entitledregistryconfigjson.\n   oc create secret docker-registry entitled-registry --docker-server=registry.marketplace.redhat.com --docker-username \"cp\" --docker-password \"${PULL_SECRET}\" --dry-run=true --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > entitledregistryconfigjson\n\n   # Get the current global secrets on the cluster and store it as a file named dockerconfigjson\n   oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > dockerconfigjson\n\n   # Merge the two dockerconfigs together into a file called dockerconfigjson-merged.\n   jq -s '.[0] * .[1]' dockerconfigjson entitledregistryconfigjson > dockerconfigjson-merged\n\n   # Set the cluster's dockerconfig file to the new merged version.\n   oc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfigjson-merged\n\n   # Cluster will now restart.\n   ```\n\n### Why is a global pull secret required?\n\nIn order to successfully install the Red Hat Marketplace products, you will need to make the pull secret available across the cluster. This can be achieved by applying the Red Hat Marketplace Pull Secret as a [global pull secret](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html#images-update-global-pull-secret_using-image-pull-secrets).\n\nFor alternative approachs, please see the official OpenShift [documentation](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html).\n\n### Documentation\n\nYou can find our documentation [here.](https://marketplace.redhat.com/en-us/documentation/)\n\n### Getting help\n\nIf you encounter any issues while using Red Hat Marketplace operator, you\ncan create an issue on our [Github\nrepo](https://github.com/redhat-marketplace/redhat-marketplace-operator) for\nbugs, enhancements, or other requests. You can also visit our main page and\nreview our [support](https://marketplace.redhat.com/en-us/support) and [documentation](https://marketplace.redhat.com/en-us/documentation/).\n",
      "csv_display_name": "Red Hat Marketplace Operator",
      "csv_metadata_description": "The Red Hat Marketplace Operator provides cluster management, metering and operator installation for Red Hat Marketplace customers.",
      "csv_name": "redhat-marketplace-operator.v1.0.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-04T14:53:37.530000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "redhat-marketplace-operator",
      "provided_apis": [],
      "related_images": [
        {
          "digest": "sha256:d582454560f823f3f123fe10c801c14b8f59678c20cdaa877f3d97e715170ca4",
          "image": "registry.connect.redhat.com/rh-marketplace/redhat-marketplace-operator@sha256:d582454560f823f3f123fe10c801c14b8f59678c20cdaa877f3d97e715170ca4",
          "name": "redhat-marketplace-operator-d582454560f823f3f123fe10c801c14b8f59678c20cdaa877f3d97e715170ca4-annotation"
        },
        {
          "digest": "sha256:d582454560f823f3f123fe10c801c14b8f59678c20cdaa877f3d97e715170ca4",
          "image": "registry.connect.redhat.com/rh-marketplace/redhat-marketplace-operator@sha256:d582454560f823f3f123fe10c801c14b8f59678c20cdaa877f3d97e715170ca4",
          "name": "redhat-marketplace-operator"
        },
        {
          "digest": "sha256:c2bc1653f021f6fd8e352d3f147eab2769c25492e605645a6c2bba98303cd9bd",
          "image": "registry.connect.redhat.com/rh-marketplace/redhat-marketplace-reporter@sha256:c2bc1653f021f6fd8e352d3f147eab2769c25492e605645a6c2bba98303cd9bd",
          "name": "reporter"
        },
        {
          "digest": "sha256:c0b273a8aedcc113a808186e56edaf455593c59d9397190a3c5631d041170d04",
          "image": "registry.connect.redhat.com/rh-marketplace/redhat-marketplace-metric-state@sha256:c0b273a8aedcc113a808186e56edaf455593c59d9397190a3c5631d041170d04",
          "name": "metric_state"
        },
        {
          "digest": "sha256:bb6d0a6cee3b0ac52826f62906dce4a33cc967e9262667a449ea727629a6c29a",
          "image": "registry.connect.redhat.com/rh-marketplace/redhat-marketplace-authcheck@sha256:bb6d0a6cee3b0ac52826f62906dce4a33cc967e9262667a449ea727629a6c29a",
          "name": "authcheck"
        },
        {
          "digest": "sha256:f52dd24b8ced061dceabd48ccc3a5d578905c500c4bde2f3b8c1037915df4955",
          "image": "quay.io/razee/remoteresources3@sha256:f52dd24b8ced061dceabd48ccc3a5d578905c500c4bde2f3b8c1037915df4955",
          "name": "rhm_rrs3_deployment"
        },
        {
          "digest": "sha256:198cacfdc0144f1bda3d28d65a8b532ae6aaac2b0df3844fa9e52e6e39d22135",
          "image": "quay.io/razee/watch-keeper@sha256:198cacfdc0144f1bda3d28d65a8b532ae6aaac2b0df3844fa9e52e6e39d22135",
          "name": "rhm_watch_keeper_deployment"
        },
        {
          "digest": "sha256:f3e57aa8cc65d2cad042f4ecb912e6e3917ddfbb4e65ab4efaacbd5efaff9422",
          "image": "registry.redhat.io/openshift4/ose-prometheus@sha256:f3e57aa8cc65d2cad042f4ecb912e6e3917ddfbb4e65ab4efaacbd5efaff9422",
          "name": "prometheus"
        },
        {
          "digest": "sha256:78684c3d7ddb5efc36d1ee95c630dded3dbd779cf5d47f7939d2fa2c7773d251",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:78684c3d7ddb5efc36d1ee95c630dded3dbd779cf5d47f7939d2fa2c7773d251",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:7de5108ce279ded817e44c7eb77cce570b210d5502686f2ddc1225d4b745869c",
          "image": "registry.redhat.io/openshift4/ose-prometheus-operator@sha256:7de5108ce279ded817e44c7eb77cce570b210d5502686f2ddc1225d4b745869c",
          "name": "prometheus_operator"
        },
        {
          "digest": "sha256:b5519968cc2b6ac29412478809f6626f6be4082b4dac259d0de49fcdc683ed4f",
          "image": "registry.redhat.io/openshift4/ose-configmap-reloader@sha256:b5519968cc2b6ac29412478809f6626f6be4082b4dac259d0de49fcdc683ed4f",
          "name": "configmap_reloader"
        },
        {
          "digest": "sha256:dca6cbb6597a82a8de95795b59a345d0eec23a713a9771aa2d30920d1db748fd",
          "image": "registry.redhat.io/openshift4/ose-prometheus-config-reloader@sha256:dca6cbb6597a82a8de95795b59a345d0eec23a713a9771aa2d30920d1db748fd",
          "name": "prometheus_configmap_reloader"
        },
        {
          "digest": "sha256:14744defdbf8d0f4c454377b3f160177c015fe0d38158bee6dd04b72b3d109ad",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:14744defdbf8d0f4c454377b3f160177c015fe0d38158bee6dd04b72b3d109ad",
          "name": "kube_rbac"
        }
      ],
      "skip_range": ">=1.0.0 <1.0.6",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.0.6",
      "version_original": "1.0.6"
    },
    {
      "_id": "5ff5f0cc0c023d07361b8312",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.8-30.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "bundle_path_digest": "sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2021-01-06T17:18:04.671000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:41:04.886000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [],
      "related_images": [
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator-0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1-annotation"
        },
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "6.0.8-20",
      "version_original": "6.0.8-20"
    },
    {
      "_id": "5ff5f0e1bbf0225b399e2c72",
      "alm_examples": [
        {
          "kind": "TransAdv",
          "metadata": {
            "labels": {
              "app.kubernetes.io/instance": "ta-instance",
              "app.kubernetes.io/managed-by": "helm",
              "app.kubernetes.io/name": "ta-operator",
              "release": "operator"
            },
            "name": "ta"
          },
          "spec": {
            "authentication": {
              "disabled": {
                "liberty": true,
                "ui": true
              },
              "ocp": {
                "apiEndpoint": "https://api.sample-host-name:6443",
                "authIssuerEndpoint": "https://oauth-openshift.apps.sample-host-name:443",
                "secretName": "transformation-advisor-secret"
              },
              "oidc": {
                "clientId": "your-client-id",
                "clientSecret": "your-client-secret"
              }
            },
            "commonServices": {
              "cloudpakId": "__TA_PLACEHOLDER_CLOUDPAK_ID__",
              "cloudpakName": "__TA_PLACEHOLDER_CLOUDPAK_NAME__",
              "cloudpakVersion": "__TA_PLACEHOLDER_CLOUDPAK_VERSION__"
            },
            "couchdb": {
              "livenessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 60,
                "periodSeconds": 5,
                "timeoutSeconds": 3
              },
              "persistence": {
                "accessMode": "ReadWriteMany",
                "enabled": true,
                "existingClaim": "",
                "size": "8Gi",
                "storageClassName": "",
                "supplementalGroups": [],
                "useDynamicProvisioning": true
              },
              "readinessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 5,
                "periodSeconds": 5,
                "timeoutSeconds": 3
              },
              "resources": {
                "limits": {
                  "cpu": "16000m",
                  "memory": "8Gi"
                },
                "requests": {
                  "cpu": "500m",
                  "memory": "1Gi"
                }
              }
            },
            "demo": {
              "enabled": false
            },
            "fips": {
              "enabled": false
            },
            "license": {
              "accept": "true"
            },
            "networkPolicy": {
              "enabled": false
            },
            "nodePortConfig": {
              "libertyPort": "",
              "routerNodeIp": "",
              "uiPort": ""
            },
            "route": {
              "enabled": true,
              "hostname": "ta.apps.sample-host-name",
              "rateLimit": {
                "enabled": true,
                "rateHttp": "200",
                "rateTcp": "200"
              }
            },
            "tls": {
              "caCert": "",
              "enabled": true
            },
            "transadv": {
              "livenessProbe": {
                "failureThreshold": 15,
                "initialDelaySeconds": 60,
                "periodSeconds": 5,
                "timeoutSeconds": 30
              },
              "logLevel": "info",
              "publicUrl": "https://ta.apps.sample-host-name",
              "readinessProbe": {
                "failureThreshold": 15,
                "initialDelaySeconds": 60,
                "periodSeconds": 5,
                "timeoutSeconds": 30
              },
              "resources": {
                "limits": {
                  "cpu": "16000m",
                  "memory": "4Gi"
                },
                "requests": {
                  "cpu": "500m",
                  "memory": "1Gi"
                }
              }
            },
            "transadvui": {
              "livenessProbe": {
                "failureThreshold": 15,
                "initialDelaySeconds": 60,
                "periodSeconds": 30,
                "timeoutSeconds": 5
              },
              "logLevel": "info",
              "readinessProbe": {
                "failureThreshold": 15,
                "initialDelaySeconds": 5,
                "periodSeconds": 30,
                "timeoutSeconds": 5
              },
              "resources": {
                "limits": {
                  "cpu": "16000m",
                  "memory": "4Gi"
                },
                "requests": {
                  "cpu": "500m",
                  "memory": "1Gi"
                }
              },
              "useSecureCookie": "true"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/trans-advisor-operator-bundle@sha256:c50d0c0ab1079d5f079e205c350c8ea2296baa0e0d4444f70bca8fcfa1826f68",
      "bundle_path_digest": "sha256:c50d0c0ab1079d5f079e205c350c8ea2296baa0e0d4444f70bca8fcfa1826f68",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v2.3",
      "creation_date": "2021-01-06T17:18:25.405000+00:00",
      "csv_description": "IBM Cloud Transformation Advisor helps you plan, prioritize, and package your on-premise workloads for modernization on OpenShift Container Platform. To learn more, please go to this URL: https://www.ibm.com/garage/method/practices/learn/ibm-transformation-advisor \n\nDocumentation for the product can be found here: https://www.ibm.com/support/knowledgecenter/SS5Q6W/welcome.html\n\n### Prerequisites\n- Create ```<ta-sample>``` project\n\n  In the top right corner of Red Hat OpenShift Container Platform dashboard, click on the \"+\" symbol to import YAML.\n  Insert following YAML definition, change ```<ta-sample>``` to the name of your choice and click \"Create\".\n\n```\nkind: Project\napiVersion: project.openshift.io/v1\nmetadata:\n  name: <ta-sample> \n```\n\n- Add cluster-admin role to ta-operator server account\n\n  In the top right corner of Red Hat OpenShift Container Platform dashboard, click on the \"+\" symbol to import YAML.\n  Insert following YAML definition, change ```<ta-sample>``` to the name of your choice and click \"Create\".\n\n```\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: <ta-sample>-cluster-admin\nsubjects:\n  - kind: ServiceAccount\n    name: ta-operator\n    namespace: <ta-sample>\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cluster-admin\n```\n\n- Create Operator Subscription\n\n  Installing the operator, in the \"Create Operator Subscription\" page, please select the name you have picked for ```<ta-sample>``` in the \"A specific namespace on the cluster\" field.\n       \n### Persistence\nPersistence can happen via  \n\n- setting up a default storage class for the system or specifying the storage class name in \"persistence.storageClassName\". In the preinstall script it will be set to \"rook-ceph-cephfs-internal\" if this storage class exists.\n\n- setting up PV with access mode specified in \"persistence.accessMode\" (default: \"ReadWriteMany\") and size specified in \"persistence.size\" (default: 8 GB). NFS PV might require the \"persistence.supplementalGroups\" to be set to access the data folder on the NFS drive.\n\n- specifying an existing PVC in \"persistence.existingClaim\"\n\nNOTE: By default access mode for persistence is set to \"ReadWriteMany\". In an install on IBM Public Cloud, it needs to be set to \"ReadWriteOnce\".\n\n### Pulling product images from entitled registry\n\nProviding image pull secret to entitled registry will make Transformation Advisor pull images from \"cp.stg.icr.io\".   \nThe secret can be passed via those set of variables which need to be added manually:\n```\ncouchdb:\n  imagePullSecret: ta-pull-secret\n\ntransadv: \n  imagePullSecret: ta-pull-secret\n\ntransadvui: \n  imagePullSecret: ta-pull-secret\n```\n\n### Security Context Constraints\nTransformation Advisor installation process adds \"ta-operator\" service account to \"cluster-admin\" group. This makes it use \"anyuid\" SCC. The \"default\" service account is using \"restricted\" SCC.\n\n### Access UI\nBy default, the Transformation Advisor operator exposes the UI as a Route on OpenShift. \nGo to \"Networking\" - \"Routes\" and click on the location of the ui-route.\n### LICENSE\nThis operator may be evaluated for a period of 90 days after which it may continue to be used in conjunction with IBM Cloud Pak for Applications or IBM Cloud Pak for Integration (see [License](http://www14.software.ibm.com/cgi-bin/weblap/lap.pl?li_formnum=L-NHON-BVMJSN&title=IBM%20Cloud%20Transformation%20Advisor%202.3.2)).",
      "csv_display_name": "Transformation Advisor Operator",
      "csv_metadata_description": "IBM Cloud Transformation Advisor helps you plan, prioritize, and package your on-premise workloads for modernization on IBM Cloud and IBM Cloud Private.",
      "csv_name": "ta-operator.v2.3.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:33:36.847000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "transform-adv-operator",
      "provided_apis": [
        {
          "group": "charts.ta.cloud.ibm.com",
          "kind": "TransAdv",
          "plural": "transadvs",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:793d8ca7b5cd45ab66cf0e33af3dcf6c6fec89ebca9173b04f5e3e2c9d2df0c7",
          "image": "registry.connect.redhat.com/ibm/trans-advisor-operator@sha256:793d8ca7b5cd45ab66cf0e33af3dcf6c6fec89ebca9173b04f5e3e2c9d2df0c7",
          "name": "trans-advisor-operator-793d8ca7b5cd45ab66cf0e33af3dcf6c6fec89ebca9173b04f5e3e2c9d2df0c7-annotation"
        },
        {
          "digest": "sha256:ba820b660e70bac19fd5db303cabe880ff7161ffbfcfc08b613227e95b6a0fc5",
          "image": "registry.connect.redhat.com/ibm/trans-advisor-operator@sha256:ba820b660e70bac19fd5db303cabe880ff7161ffbfcfc08b613227e95b6a0fc5",
          "name": "ta-operator"
        },
        {
          "digest": "sha256:04fdd82ca02a9da2e604fba0682bf55d0608f881232fa6e84fa19e8d7504a409",
          "image": "ibmcom/transformation-advisor-db@sha256:04fdd82ca02a9da2e604fba0682bf55d0608f881232fa6e84fa19e8d7504a409",
          "name": "couchdb"
        },
        {
          "digest": "sha256:4276f30189c4d2e3fb236cc99a7c29688d0d1f54d53b4bdd0808d52e1496e159",
          "image": "ibmcom/transformation-advisor-server@sha256:4276f30189c4d2e3fb236cc99a7c29688d0d1f54d53b4bdd0808d52e1496e159",
          "name": "liberty_server"
        },
        {
          "digest": "sha256:a7b6a94d780584bfb4796150076de88ba0d2abe9d51a9139723315dc924d9504",
          "image": "ibmcom/transformation-advisor-ui@sha256:a7b6a94d780584bfb4796150076de88ba0d2abe9d51a9139723315dc924d9504",
          "name": "ui"
        }
      ],
      "skip_range": ">=2.3.0 <2.3.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "2.3.4",
      "version_original": "2.3.4"
    },
    {
      "_id": "5ff5f0e38634b82517526309",
      "alm_examples": [
        {
          "kind": "UniversalMonitoringAgent",
          "metadata": {
            "name": "uma-monitor"
          },
          "spec": {
            "agentManager": {
              "url": "localhost:5001"
            },
            "cloudmonitoring": {
              "aws": {
                "enabled": false
              }
            },
            "clusterName": "DevelopmentCluster",
            "monitor": {
              "application": {
                "autoattach": {
                  "dotnet": {
                    "enabled": true
                  },
                  "filterType": "whitelist",
                  "java": {
                    "enabled": true
                  }
                },
                "jmx": {
                  "enabled": true
                },
                "opentracing": {
                  "correlation": {
                    "enabled": false
                  },
                  "enabled": true,
                  "grpc": {}
                },
                "zipkinTracing": {
                  "enabled": true,
                  "zipkinServer": {}
                }
              },
              "clusterPerformance": {
                "enabled": true
              },
              "container": {
                "dockerstats": {
                  "enabled": true
                },
                "prometheus": {
                  "backend": {
                    "enabled": false,
                    "endPoint": {
                      "metricAlias": "container_name=container,pod_name=pod"
                    },
                    "filter": {}
                  },
                  "exporter": {
                    "enabled": true
                  }
                }
              }
            },
            "type": "Kubernetes"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ca/uma-operator-bundle@sha256:35b076ab107dd19e7c9e1bd3cd237f66448ebef8fb63d50331d791ba80850bc8",
      "bundle_path_digest": "sha256:35b076ab107dd19e7c9e1bd3cd237f66448ebef8fb63d50331d791ba80850bc8",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-01-06T17:18:27.644000+00:00",
      "csv_description": "The **DX APM Universal Monitoring Agent** for Kubernetes (UMA for Kubernetes) acts as a single deployment that automatically discovers and monitors cloud and container infrastructures and containerized application processes. UMA for Kubernetes discovers and monitors all the containers on a host. This capability allows to monitor both the Kubernetes Infrastructure ( like Node, Pods, Containers, Cluster Services etc ) and applications running on this infrastructure & correlate them together which can help the triager to isolate if the the problem is related to the application or infrastructure\n\n**Usage**:\n```\n apiVersion: ca.broadcom.com/v1alpha1\n kind: UniversalMonitoringAgent\n metadata:\n   name: uma-monitor\n spec:\n   # The agent and Enterprise Manager connection details.\n   agentManager:\n     url: localhost:5001\n     # Agent/EM login credentials.\n     credential:\n\n   clusterName: DevelopmentCluster\n   # type should be Kubernetes or Openshift depending on the environment\n   type: Openshift\n   monitor:\n     application:\n       # autoattach properties\n       autoattach:\n         filterType: whitelist\n         # java autoattach properties\n         java:\n           enabled: true\n           propertiesOverride:\n         # dotnet autoattach properties\n         dotnet:\n           enabled: true\n           propertiesOverride:\n       jmx:\n         enabled: true\n       opentracing:\n         enabled: true\n         grpc:\n           hostport:\n         correlation:\n           enabled: false\n     container:\n       prometheus:\n         exporter:\n           enabled: true\n         backend:\n           enabled: false\n           endPoint:\n             # Defines the URL endpoint of the Prometheus backend.\n             url:\n             # Username (if any) for connecting to the Prometheus backend URL.\n             username:\n             # Password (if any) for connecting to the Prometheus backend URL.\n             password:\n             # Token (if any) for connecting to the Prometheus backend URL.\n             token:\n             configFiles:\n             metricAlias: container_name=container,pod_name=pod\n           filter:\n             name:\n             value:\n\n       dockerstats:\n         enabled: true\n     clusterPerformance:\n       enabled: true\n\n```\n",
      "csv_display_name": "DX APM Universal Monitoring Agent",
      "csv_metadata_description": "The Universal Monitoring Agent for Kubernetes (UMA for Kubernetes) acts as single deployment that automatically discovers and monitors cloud and container infrastructures and containerized application processes.",
      "csv_name": "uma-operator.v3.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:30:18.875000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "uma-operator",
      "provided_apis": [],
      "related_images": [
        {
          "digest": "sha256:e2f059d3778fa8e88b3d7473e082e2680b0269f5ff34940f009d3d8a6410b59d",
          "image": "registry.connect.redhat.com/ca/uma-operator@sha256:e2f059d3778fa8e88b3d7473e082e2680b0269f5ff34940f009d3d8a6410b59d",
          "name": "uma-operator-e2f059d3778fa8e88b3d7473e082e2680b0269f5ff34940f009d3d8a6410b59d-annotation"
        },
        {
          "digest": "sha256:e2f059d3778fa8e88b3d7473e082e2680b0269f5ff34940f009d3d8a6410b59d",
          "image": "registry.connect.redhat.com/ca/uma-operator@sha256:e2f059d3778fa8e88b3d7473e082e2680b0269f5ff34940f009d3d8a6410b59d",
          "name": "uma-operator"
        },
        {
          "digest": "sha256:fab20cf36cbfadac57cc1e992c9f434818baf26370611b7243efd17bdba91876",
          "image": "registry.connect.redhat.com/ca/universalmonitoragent@sha256:fab20cf36cbfadac57cc1e992c9f434818baf26370611b7243efd17bdba91876",
          "name": "uma"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "3.0.0",
      "version_original": "3.0.0"
    },
    {
      "_id": "5ff5f45154304a39b48d9aa4",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.8-30.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "bundle_path_digest": "sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2021-01-06T17:33:05.799000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:20:12.504000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator-0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1-annotation"
        },
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.8-20",
      "version_original": "6.0.8-20"
    },
    {
      "_id": "5ff6023a54304a39b48d9acd",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/instana/instana-agent-operator-bundle@sha256:430f28f86bbc3e14e226133048c0fa27b5a446087329d5ec89262d1db5450250",
      "bundle_path_digest": "sha256:430f28f86bbc3e14e226133048c0fa27b5a446087329d5ec89262d1db5450250",
      "capabilities": [
        ""
      ],
      "channel_name": "beta",
      "creation_date": "2021-01-06T18:32:26.594000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "instana-agent-operator.v0.3.10",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:08:09.448000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "instana-agent",
      "provided_apis": [
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "plural": "agents",
          "version": "v1alpha1"
        },
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "version": "v1beta1"
        }
      ],
      "related_images": [],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.3.10",
      "version_original": "0.3.10"
    },
    {
      "_id": "5ff602405c4b18d318d45893",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/instana/instana-agent-operator-bundle@sha256:430f28f86bbc3e14e226133048c0fa27b5a446087329d5ec89262d1db5450250",
      "bundle_path_digest": "sha256:430f28f86bbc3e14e226133048c0fa27b5a446087329d5ec89262d1db5450250",
      "capabilities": [
        ""
      ],
      "channel_name": "beta",
      "creation_date": "2021-01-06T18:32:32.515000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "instana-agent-operator.v0.3.10",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T16:40:36.270000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "instana-agent",
      "provided_apis": [
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "plural": "agents",
          "version": "v1beta1"
        },
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "plural": "agents",
          "version": "v1alpha1"
        }
      ],
      "related_images": [],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.3.10",
      "version_original": "0.3.10"
    },
    {
      "_id": "5ff6a06e35c453ee988d9aa0",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/data-explorer-operator-bundle@sha256:ced5bc02c7bec13ba5d10b5fcfc559af8499eac9bad9688401d1caf8beb6d3b2",
      "bundle_path_digest": "sha256:ced5bc02c7bec13ba5d10b5fcfc559af8499eac9bad9688401d1caf8beb6d3b2",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-01-07T05:47:26.549000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "data-explorer-operator.v0.1.3",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:20:28.061000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "data-explorer-operator-certified",
      "provided_apis": [
        {
          "group": "data-explorer.com",
          "kind": "DashboardWithJupyterHub",
          "plural": "dashboardwithjupyterhubs",
          "version": "v1alpha1"
        }
      ],
      "related_images": [],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.1.3",
      "version_original": "0.1.3"
    },
    {
      "_id": "5ff6a06f35c453ee988d9aa1",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/data-explorer-operator-bundle@sha256:ced5bc02c7bec13ba5d10b5fcfc559af8499eac9bad9688401d1caf8beb6d3b2",
      "bundle_path_digest": "sha256:ced5bc02c7bec13ba5d10b5fcfc559af8499eac9bad9688401d1caf8beb6d3b2",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-01-07T05:47:27.675000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "data-explorer-operator.v0.1.3",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:05:07.183000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "data-explorer-operator-certified",
      "provided_apis": [
        {
          "group": "data-explorer.com",
          "kind": "DashboardWithJupyterHub",
          "version": "v1alpha1"
        }
      ],
      "related_images": [],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.1.3",
      "version_original": "0.1.3"
    },
    {
      "_id": "5ff8c88e2d0df8737d9e2caa",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:0e69c29d33d5ab9d6676c6a6d5b89e57caddf44090bbabc74a12fea3005704bd",
      "bundle_path_digest": "sha256:0e69c29d33d5ab9d6676c6a6d5b89e57caddf44090bbabc74a12fea3005704bd",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-01-08T21:03:10.435000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "gpu-operator-certified.v1.4.0",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:10:51.142000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "related_images": [],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.4.0",
      "version_original": "1.4.0"
    },
    {
      "_id": "5ff8c892279799c00a526351",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:0e69c29d33d5ab9d6676c6a6d5b89e57caddf44090bbabc74a12fea3005704bd",
      "bundle_path_digest": "sha256:0e69c29d33d5ab9d6676c6a6d5b89e57caddf44090bbabc74a12fea3005704bd",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-01-08T21:03:14.295000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "gpu-operator-certified.v1.4.0",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T17:32:59.583000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "related_images": [],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.4.0",
      "version_original": "1.4.0"
    },
    {
      "_id": "5ffc3e5280f89ad25ed458f5",
      "alm_examples": [
        {
          "kind": "Citrix-adc-istio-ingress-gateway",
          "metadata": {
            "name": "citrix-adc-istio-ingress-gateway-sample"
          },
          "spec": {
            "ADMSettings": {
              "ADMFingerPrint": "",
              "ADMIP": "",
              "bandWidth": "",
              "bandWidthLicense": false,
              "cpxCores": "",
              "licenseServerIP": "",
              "licenseServerPort": 27000,
              "vCPULicense": false
            },
            "certProvider": {
              "caAddr": "istiod-basic.istio-system.svc",
              "caPort": 15012,
              "certTTLinHours": 720,
              "clusterId": "Kubernetes",
              "trustDomain": "cluster.local"
            },
            "citrixCPX": false,
            "coe": {
              "coeURL": ""
            },
            "ingressGateway": {
              "EULA": false,
              "adcServerName": "",
              "exposeMutipleApps": false,
              "exposeNonHttpService": false,
              "httpNodePort": 30180,
              "httpsNodePort": 31443,
              "image": "quay.io/citrix/citrix-k8s-cpx-ingress@sha256:01834b5b33f61a8a5670ef5c8917475b7f21b341d09d3416a5fa8c2412ec6fdc",
              "imagePullPolicy": "IfNotPresent",
              "label": "citrix-ingressgateway",
              "lightWeightCPX": 1,
              "mgmtHttpPort": 10080,
              "mgmtHttpsPort": 10443,
              "netProfile": "",
              "netscalerUrl": "",
              "secretVolumes": {
                "mountPath": "",
                "name": "",
                "secretName": ""
              },
              "tcpPort": {
                "name": "",
                "nodePort": "",
                "port": "",
                "targetPort": ""
              },
              "vserverIP": "nsip"
            },
            "istioPilot": {
              "SAN": "",
              "insecureGrpcPort": 15010,
              "name": "istiod-basic",
              "namespace": "istio-system",
              "secureGrpcPort": 15012
            },
            "metricExporter": {
              "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:391d3ca9904fdd6a09d947d4e1e3157763c2c47206086de48791ad1cdba639be",
              "imagePullPolicy": "IfNotPresent",
              "logLevel": "ERROR",
              "port": 8888,
              "required": true,
              "secure": "YES"
            },
            "xDSAdaptor": {
              "image": "quay.io/citrix/citrix-xds-adaptor@sha256:8520019daf69d4cf91fc52b1500abf3a56d4b7aaef47b0e149f52ce15b363d3a",
              "imagePullPolicy": "IfNotPresent",
              "proxyType": "router",
              "secureConnect": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/citrix/istioingressgateway-bundle@sha256:16a717fc3e153fcfb42d9a47da732803f21341cbec2ae3bd1950f33b6043619e",
      "bundle_path_digest": "sha256:16a717fc3e153fcfb42d9a47da732803f21341cbec2ae3bd1950f33b6043619e",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-01-11T12:02:26.173000+00:00",
      "csv_description": "An Istio ingress gateway acts as an entry point for the incoming traffic and secures and controls access to the service mesh from outside. It also performs routing and load balancing. Citrix ADC CPX, MPX, or VPX can be deployed as an ingress gateway to the Istio service mesh.",
      "csv_display_name": "Citrix ADC Istio Ingress Gateway Operator",
      "csv_metadata_description": "An Istio ingress gateway acts as an entry point for the incoming traffic and secures and controls access to the service mesh from outside. It also performs routing and load balancing. Citrix ADC CPX, MPX, or VPX can be deployed as an ingress gateway to the Istio service mesh.",
      "csv_name": "citrix-adc-istio-ingress-gateway-operator.v0.9.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:33:39.245000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "citrix-adc-istio-ingress-gateway-operator",
      "provided_apis": [
        {
          "group": "citrix.citrix.com",
          "kind": "Citrix-adc-istio-ingress-gateway",
          "plural": "citrix-adc-istio-ingress-gateways",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:0acde734a562ec2bee2f2c3da2456a13b552ea368dc0ebf382f018979b1c5055",
          "image": "registry.connect.redhat.com/citrix/istioingressgateway@sha256:0acde734a562ec2bee2f2c3da2456a13b552ea368dc0ebf382f018979b1c5055",
          "name": "istioingressgateway-0acde734a562ec2bee2f2c3da2456a13b552ea368dc0ebf382f018979b1c5055-annotation"
        },
        {
          "digest": "sha256:4183a28cc9cbd3b2bbc83543c37b0341c0f76b5176f1ba210baae651869319af",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:4183a28cc9cbd3b2bbc83543c37b0341c0f76b5176f1ba210baae651869319af",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:0acde734a562ec2bee2f2c3da2456a13b552ea368dc0ebf382f018979b1c5055",
          "image": "registry.connect.redhat.com/citrix/istioingressgateway@sha256:0acde734a562ec2bee2f2c3da2456a13b552ea368dc0ebf382f018979b1c5055",
          "name": "manager"
        },
        {
          "digest": "sha256:8520019daf69d4cf91fc52b1500abf3a56d4b7aaef47b0e149f52ce15b363d3a",
          "image": "quay.io/citrix/citrix-xds-adaptor@sha256:8520019daf69d4cf91fc52b1500abf3a56d4b7aaef47b0e149f52ce15b363d3a",
          "name": "citrix-xds-adaptor-8520019daf69d4cf91fc52b1500abf3a56d4b7aaef47b0e149f52ce15b363d3a-annotation"
        },
        {
          "digest": "sha256:391d3ca9904fdd6a09d947d4e1e3157763c2c47206086de48791ad1cdba639be",
          "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:391d3ca9904fdd6a09d947d4e1e3157763c2c47206086de48791ad1cdba639be",
          "name": "citrix-adc-metrics-exporter-391d3ca9904fdd6a09d947d4e1e3157763c2c47206086de48791ad1cdba639be-annotation"
        },
        {
          "digest": "sha256:01834b5b33f61a8a5670ef5c8917475b7f21b341d09d3416a5fa8c2412ec6fdc",
          "image": "quay.io/citrix/citrix-k8s-cpx-ingress@sha256:01834b5b33f61a8a5670ef5c8917475b7f21b341d09d3416a5fa8c2412ec6fdc",
          "name": "citrix-k8s-cpx-ingress-01834b5b33f61a8a5670ef5c8917475b7f21b341d09d3416a5fa8c2412ec6fdc-annotation"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.9.5",
      "version_original": "0.9.5"
    },
    {
      "_id": "5ffcd22fb9255341eb1b8312",
      "alm_examples": [
        {
          "kind": "InstanaAgent",
          "metadata": {
            "name": "instana-agent",
            "namespace": "instana-agent"
          },
          "spec": {
            "agent.endpoint.host": "ingress-red-saas.instana.io",
            "agent.endpoint.port": 443,
            "agent.env": {
              "INSTANA_AGENT_TAGS": "example"
            },
            "agent.key": "replace-me",
            "agent.zone.name": "my-zone",
            "cluster.name": "replace-me",
            "config.files": {
              "configuration.yaml": "# You can leave this empty, or use this to configure your instana agent.\n# See https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/\n"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/instana/instana-agent-operator-bundle@sha256:62e44a3a7ad63ce183162ad49de72ddd587358251b91a890cfebdb72945c140d",
      "bundle_path_digest": "sha256:62e44a3a7ad63ce183162ad49de72ddd587358251b91a890cfebdb72945c140d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-01-11T22:33:19.004000+00:00",
      "csv_description": "# Instana\n\nInstana is an [APM solution](https://www.instana.com/product-overview/) built for microservices that enables IT Ops to build applications faster and deliver higher quality services by automating monitoring, tracing and root cause analysis. The solution is optimized for [Kubernetes](https://www.instana.com/automatic-kubernetes-monitoring/) and [OpenShift](https://www.instana.com/blog/automatic-root-cause-analysis-for-openshift-applications/).\n\n## Instana Agent Operator\n\nThis is the Kubernetes Operator for installing the Instana Agent on Kubernetes or OpenShift.\n\n## Prerequisites for OpenShift\n\nBefore the agent will be able to run in OpenShift, you need to perform a couple of extra configuration steps.\n\nYou need to set up a project for the Instana Agent and configure it's permissions.\n\nThe project you create here needs to be the namespace where you create the Instana Agent custom resource that the operator will use to deploy the agent.\n\nFor example, create the `instana-agent` project:\n\n    oc new-project instana-agent\n\nThen, ensure the `instana-agent` service account is in the privileged security context:\n\n    oc adm policy add-scc-to-user privileged -z instana-agent\n\nThis service account will be created by the operator.\n\nNow you can proceed with installing the operator for the Instana agent.\n\n## Installation and Configuration\n\nFirst, install this operator from [OperatorHub.io](https://operatorhub.io/), [OpenShift Container Platform](https://www.openshift.com/), or [OKD](https://www.okd.io/).\n\nSecond, create the target namespace where the Instana agent should be installed. The agent does not need to run in the same namespace as the operator. Most users create a new namespace `instana-agent` for running the agents.\n\nThird, create a custom resource with the agent configuration in the target namespace. The operator will pick up the custom resource and install the Instana agent accordingly.\n\nThe following is a minimal template of the custom resource:\n\n```yaml\napiVersion: instana.io/v1beta1\nkind: InstanaAgent\nmetadata:\n  name: instana-agent\n  namespace: instana-agent\nspec:\n  agent.zone.name: my-zone # (optional) name of the zone of the host\n  agent.key: replace-me # replace with your Instana agent key\n  agent.endpoint.host: ingress-red-saas.instana.io # the monitoring ingress endpoint\n  agent.endpoint.port: 443 # the monitoring ingress endpoint port, wrapped in quotes\n  agent.env:\n    INSTANA_AGENT_TAGS: example\n  cluster.name: replace-me # replace with the name of your Kubernetes cluster\n  config.files:\n    configuration.yaml: |\n      # You can leave this empty, or use this to configure your instana agent.\n      # See https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/\n```\n\nSave the template in a file `instana-agent.yaml` and edit the following values:\n\n* If your target namespace is not `instana-agent`, replace the `namespace:` accordingly.\n* `agent.key` must be set with your Instana agent key.\n* `agent.endpoint` must be set with the monitoring ingress endpoint, generally either `saas-us-west-2.instana.io` or `saas-eu-west-1.instana.io`.\n* `agent.endpoint.port` must be set with the monitoring ingress port, generally \"443\" (wrapped in quotes).\n* `agent.zone.name` should be set with the name of the Kubernetes cluster that is be displayed in Instana.\n\nFor advanced configuration, you can edit the contents of the `configuration.yaml` file. View documentation [here](https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/).\n\nApply the custom resource with `kubectl apply -f instana-agent.yaml`. After some time, you should see `instana-agent` Pods being created on each node of your cluster, and your cluster should show on the infrastructure map on your Instana Web interface.\n\n## Uninstalling\n\nIn order to uninstall the Instana agent, simply remove the custom resource with `kubectl delete -f instana-agent.yaml`.\n\n## Source Code\n\nThe Instana agent operator is an open source project hosted on [https://github.com/instana/instana-agent-operator](https://github.com/instana/instana-agent-operator/).\n",
      "csv_display_name": "Instana Agent Operator",
      "csv_metadata_description": "Fully automated Application Performance Monitoring (APM) for microservices.",
      "csv_name": "instana-agent-operator.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:19:43.724000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "instana-agent",
      "provided_apis": [
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "plural": "agents",
          "version": "v1alpha1"
        },
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "version": "v1beta1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:1e31376496d3aa418a380d9087e2eb159567a7e486dbf46b4a4f20e7af5d5f94",
          "image": "registry.connect.redhat.com/instana/instana-agent-operator@sha256:1e31376496d3aa418a380d9087e2eb159567a7e486dbf46b4a4f20e7af5d5f94",
          "name": "instana-agent-operator-1e31376496d3aa418a380d9087e2eb159567a7e486dbf46b4a4f20e7af5d5f94-annotation"
        },
        {
          "digest": "sha256:1e31376496d3aa418a380d9087e2eb159567a7e486dbf46b4a4f20e7af5d5f94",
          "image": "registry.connect.redhat.com/instana/instana-agent-operator@sha256:1e31376496d3aa418a380d9087e2eb159567a7e486dbf46b4a4f20e7af5d5f94",
          "name": "instana-agent-operator"
        },
        {
          "digest": "sha256:dfd02a82d7414d644ab6e47c28fac98b8b60737b7922ce0468ebb72e24b989f0",
          "image": "registry.connect.redhat.com/instana/agent@sha256:dfd02a82d7414d644ab6e47c28fac98b8b60737b7922ce0468ebb72e24b989f0",
          "name": "instana_agent"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "5ffcd26fc31d8bf2149e2ca2",
      "alm_examples": [
        {
          "kind": "InstanaAgent",
          "metadata": {
            "name": "instana-agent",
            "namespace": "instana-agent"
          },
          "spec": {
            "agent.endpoint.host": "ingress-red-saas.instana.io",
            "agent.endpoint.port": 443,
            "agent.env": {
              "INSTANA_AGENT_TAGS": "example"
            },
            "agent.key": "replace-me",
            "agent.zone.name": "my-zone",
            "cluster.name": "replace-me",
            "config.files": {
              "configuration.yaml": "# You can leave this empty, or use this to configure your instana agent.\n# See https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/\n"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/instana/instana-agent-operator-bundle@sha256:62e44a3a7ad63ce183162ad49de72ddd587358251b91a890cfebdb72945c140d",
      "bundle_path_digest": "sha256:62e44a3a7ad63ce183162ad49de72ddd587358251b91a890cfebdb72945c140d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-01-11T22:34:23.515000+00:00",
      "csv_description": "# Instana\n\nInstana is an [APM solution](https://www.instana.com/product-overview/) built for microservices that enables IT Ops to build applications faster and deliver higher quality services by automating monitoring, tracing and root cause analysis. The solution is optimized for [Kubernetes](https://www.instana.com/automatic-kubernetes-monitoring/) and [OpenShift](https://www.instana.com/blog/automatic-root-cause-analysis-for-openshift-applications/).\n\n## Instana Agent Operator\n\nThis is the Kubernetes Operator for installing the Instana Agent on Kubernetes or OpenShift.\n\n## Prerequisites for OpenShift\n\nBefore the agent will be able to run in OpenShift, you need to perform a couple of extra configuration steps.\n\nYou need to set up a project for the Instana Agent and configure it's permissions.\n\nThe project you create here needs to be the namespace where you create the Instana Agent custom resource that the operator will use to deploy the agent.\n\nFor example, create the `instana-agent` project:\n\n    oc new-project instana-agent\n\nThen, ensure the `instana-agent` service account is in the privileged security context:\n\n    oc adm policy add-scc-to-user privileged -z instana-agent\n\nThis service account will be created by the operator.\n\nNow you can proceed with installing the operator for the Instana agent.\n\n## Installation and Configuration\n\nFirst, install this operator from [OperatorHub.io](https://operatorhub.io/), [OpenShift Container Platform](https://www.openshift.com/), or [OKD](https://www.okd.io/).\n\nSecond, create the target namespace where the Instana agent should be installed. The agent does not need to run in the same namespace as the operator. Most users create a new namespace `instana-agent` for running the agents.\n\nThird, create a custom resource with the agent configuration in the target namespace. The operator will pick up the custom resource and install the Instana agent accordingly.\n\nThe following is a minimal template of the custom resource:\n\n```yaml\napiVersion: instana.io/v1beta1\nkind: InstanaAgent\nmetadata:\n  name: instana-agent\n  namespace: instana-agent\nspec:\n  agent.zone.name: my-zone # (optional) name of the zone of the host\n  agent.key: replace-me # replace with your Instana agent key\n  agent.endpoint.host: ingress-red-saas.instana.io # the monitoring ingress endpoint\n  agent.endpoint.port: 443 # the monitoring ingress endpoint port, wrapped in quotes\n  agent.env:\n    INSTANA_AGENT_TAGS: example\n  cluster.name: replace-me # replace with the name of your Kubernetes cluster\n  config.files:\n    configuration.yaml: |\n      # You can leave this empty, or use this to configure your instana agent.\n      # See https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/\n```\n\nSave the template in a file `instana-agent.yaml` and edit the following values:\n\n* If your target namespace is not `instana-agent`, replace the `namespace:` accordingly.\n* `agent.key` must be set with your Instana agent key.\n* `agent.endpoint` must be set with the monitoring ingress endpoint, generally either `saas-us-west-2.instana.io` or `saas-eu-west-1.instana.io`.\n* `agent.endpoint.port` must be set with the monitoring ingress port, generally \"443\" (wrapped in quotes).\n* `agent.zone.name` should be set with the name of the Kubernetes cluster that is be displayed in Instana.\n\nFor advanced configuration, you can edit the contents of the `configuration.yaml` file. View documentation [here](https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/).\n\nApply the custom resource with `kubectl apply -f instana-agent.yaml`. After some time, you should see `instana-agent` Pods being created on each node of your cluster, and your cluster should show on the infrastructure map on your Instana Web interface.\n\n## Uninstalling\n\nIn order to uninstall the Instana agent, simply remove the custom resource with `kubectl delete -f instana-agent.yaml`.\n\n## Source Code\n\nThe Instana agent operator is an open source project hosted on [https://github.com/instana/instana-agent-operator](https://github.com/instana/instana-agent-operator/).\n",
      "csv_display_name": "Instana Agent Operator",
      "csv_metadata_description": "Fully automated Application Performance Monitoring (APM) for microservices.",
      "csv_name": "instana-agent-operator.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:35:08.967000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "instana-agent",
      "provided_apis": [
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "plural": "agents",
          "version": "v1beta1"
        },
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "plural": "agents",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:1e31376496d3aa418a380d9087e2eb159567a7e486dbf46b4a4f20e7af5d5f94",
          "image": "registry.connect.redhat.com/instana/instana-agent-operator@sha256:1e31376496d3aa418a380d9087e2eb159567a7e486dbf46b4a4f20e7af5d5f94",
          "name": "instana-agent-operator-1e31376496d3aa418a380d9087e2eb159567a7e486dbf46b4a4f20e7af5d5f94-annotation"
        },
        {
          "digest": "sha256:1e31376496d3aa418a380d9087e2eb159567a7e486dbf46b4a4f20e7af5d5f94",
          "image": "registry.connect.redhat.com/instana/instana-agent-operator@sha256:1e31376496d3aa418a380d9087e2eb159567a7e486dbf46b4a4f20e7af5d5f94",
          "name": "instana-agent-operator"
        },
        {
          "digest": "sha256:dfd02a82d7414d644ab6e47c28fac98b8b60737b7922ce0468ebb72e24b989f0",
          "image": "registry.connect.redhat.com/instana/agent@sha256:dfd02a82d7414d644ab6e47c28fac98b8b60737b7922ce0468ebb72e24b989f0",
          "name": "instana_agent"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "5ffe3f7d3533c9639d9e2cb5",
      "alm_examples": [
        {
          "kind": "CertManager",
          "metadata": {
            "name": "cert-manager",
            "namespace": "cert-manager"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jetstack/cert-manager-operator-bundle@sha256:a7cb0f2a1b263c432727d1ffe7ec8d0be470fcca26e1b568eb9d0dc64e96373e",
      "bundle_path_digest": "sha256:a7cb0f2a1b263c432727d1ffe7ec8d0be470fcca26e1b568eb9d0dc64e96373e",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-01-13T00:31:57.320000+00:00",
      "csv_description": "x509 certificate management for Kubernetes",
      "csv_display_name": "cert-manager",
      "csv_metadata_description": "x509 certificate management for Kubernetes",
      "csv_name": "cert-manager-operator.v0.15.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:13:57.077000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "cert-manager-operator",
      "provided_apis": [
        {
          "group": "operator.cert-manager.io",
          "kind": "CertManager",
          "plural": "certmanagers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:a41989d2b91e16d9ecc3f99dafd2a5f3f983587373d179adc579d2fda4978bf8",
          "image": "registry.connect.redhat.com/jetstack/cert-manager-operator@sha256:a41989d2b91e16d9ecc3f99dafd2a5f3f983587373d179adc579d2fda4978bf8",
          "name": "cert-manager-operator-a41989d2b91e16d9ecc3f99dafd2a5f3f983587373d179adc579d2fda4978bf8-annotation"
        },
        {
          "digest": "sha256:a41989d2b91e16d9ecc3f99dafd2a5f3f983587373d179adc579d2fda4978bf8",
          "image": "registry.connect.redhat.com/jetstack/cert-manager-operator@sha256:a41989d2b91e16d9ecc3f99dafd2a5f3f983587373d179adc579d2fda4978bf8",
          "name": "cert-manager-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.15.3",
      "version_original": "0.15.3"
    },
    {
      "_id": "5ffe3f7ef605d148e61b835b",
      "alm_examples": [
        {
          "kind": "CertManager",
          "metadata": {
            "name": "cert-manager",
            "namespace": "cert-manager"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jetstack/cert-manager-operator-bundle@sha256:a7cb0f2a1b263c432727d1ffe7ec8d0be470fcca26e1b568eb9d0dc64e96373e",
      "bundle_path_digest": "sha256:a7cb0f2a1b263c432727d1ffe7ec8d0be470fcca26e1b568eb9d0dc64e96373e",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2021-01-13T00:31:58.509000+00:00",
      "csv_description": "x509 certificate management for Kubernetes",
      "csv_display_name": "cert-manager",
      "csv_metadata_description": "x509 certificate management for Kubernetes",
      "csv_name": "cert-manager-operator.v0.15.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:21:07.643000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "cert-manager-operator",
      "provided_apis": [
        {
          "group": "operator.cert-manager.io",
          "kind": "CertManager",
          "plural": "certmanagers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:a41989d2b91e16d9ecc3f99dafd2a5f3f983587373d179adc579d2fda4978bf8",
          "image": "registry.connect.redhat.com/jetstack/cert-manager-operator@sha256:a41989d2b91e16d9ecc3f99dafd2a5f3f983587373d179adc579d2fda4978bf8",
          "name": "cert-manager-operator-a41989d2b91e16d9ecc3f99dafd2a5f3f983587373d179adc579d2fda4978bf8-annotation"
        },
        {
          "digest": "sha256:a41989d2b91e16d9ecc3f99dafd2a5f3f983587373d179adc579d2fda4978bf8",
          "image": "registry.connect.redhat.com/jetstack/cert-manager-operator@sha256:a41989d2b91e16d9ecc3f99dafd2a5f3f983587373d179adc579d2fda4978bf8",
          "name": "cert-manager-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.15.3",
      "version_original": "0.15.3"
    },
    {
      "_id": "5ffe3fc358d32ca096526379",
      "alm_examples": [
        {
          "kind": "CertManager",
          "metadata": {
            "name": "cert-manager",
            "namespace": "cert-manager"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jetstack/cert-manager-operator-bundle@sha256:a7cb0f2a1b263c432727d1ffe7ec8d0be470fcca26e1b568eb9d0dc64e96373e",
      "bundle_path_digest": "sha256:a7cb0f2a1b263c432727d1ffe7ec8d0be470fcca26e1b568eb9d0dc64e96373e",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-01-13T00:33:07.276000+00:00",
      "csv_description": "x509 certificate management for Kubernetes",
      "csv_display_name": "cert-manager",
      "csv_metadata_description": "x509 certificate management for Kubernetes",
      "csv_name": "cert-manager-operator.v0.15.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-04T14:42:14.830000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "cert-manager-operator",
      "provided_apis": [
        {
          "group": "operator.cert-manager.io",
          "kind": "CertManager",
          "plural": "certmanagers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:a41989d2b91e16d9ecc3f99dafd2a5f3f983587373d179adc579d2fda4978bf8",
          "image": "registry.connect.redhat.com/jetstack/cert-manager-operator@sha256:a41989d2b91e16d9ecc3f99dafd2a5f3f983587373d179adc579d2fda4978bf8",
          "name": "cert-manager-operator-a41989d2b91e16d9ecc3f99dafd2a5f3f983587373d179adc579d2fda4978bf8-annotation"
        },
        {
          "digest": "sha256:a41989d2b91e16d9ecc3f99dafd2a5f3f983587373d179adc579d2fda4978bf8",
          "image": "registry.connect.redhat.com/jetstack/cert-manager-operator@sha256:a41989d2b91e16d9ecc3f99dafd2a5f3f983587373d179adc579d2fda4978bf8",
          "name": "cert-manager-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.15.3",
      "version_original": "0.15.3"
    },
    {
      "_id": "5ffe3fc4f605d148e61b835c",
      "alm_examples": [
        {
          "kind": "CertManager",
          "metadata": {
            "name": "cert-manager",
            "namespace": "cert-manager"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jetstack/cert-manager-operator-bundle@sha256:a7cb0f2a1b263c432727d1ffe7ec8d0be470fcca26e1b568eb9d0dc64e96373e",
      "bundle_path_digest": "sha256:a7cb0f2a1b263c432727d1ffe7ec8d0be470fcca26e1b568eb9d0dc64e96373e",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2021-01-13T00:33:08.378000+00:00",
      "csv_description": "x509 certificate management for Kubernetes",
      "csv_display_name": "cert-manager",
      "csv_metadata_description": "x509 certificate management for Kubernetes",
      "csv_name": "cert-manager-operator.v0.15.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:36:45.936000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "cert-manager-operator",
      "provided_apis": [
        {
          "group": "operator.cert-manager.io",
          "kind": "CertManager",
          "plural": "certmanagers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:a41989d2b91e16d9ecc3f99dafd2a5f3f983587373d179adc579d2fda4978bf8",
          "image": "registry.connect.redhat.com/jetstack/cert-manager-operator@sha256:a41989d2b91e16d9ecc3f99dafd2a5f3f983587373d179adc579d2fda4978bf8",
          "name": "cert-manager-operator-a41989d2b91e16d9ecc3f99dafd2a5f3f983587373d179adc579d2fda4978bf8-annotation"
        },
        {
          "digest": "sha256:a41989d2b91e16d9ecc3f99dafd2a5f3f983587373d179adc579d2fda4978bf8",
          "image": "registry.connect.redhat.com/jetstack/cert-manager-operator@sha256:a41989d2b91e16d9ecc3f99dafd2a5f3f983587373d179adc579d2fda4978bf8",
          "name": "cert-manager-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.15.3",
      "version_original": "0.15.3"
    },
    {
      "_id": "600036b4557a41953d1b8323",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/kubemq/kubemq-operator-bundle@sha256:afe0430ae7f0c5df27e4a3ca69ea25793bfd03870915221510c3d194e4a987ca",
      "bundle_path_digest": "sha256:afe0430ae7f0c5df27e4a3ca69ea25793bfd03870915221510c3d194e4a987ca",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-01-14T12:19:00.139000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "kubemq-operator.v1.3.5",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:09:00.239000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "kubemq-operator-marketplace",
      "provided_apis": [
        {
          "group": "core.k8s.kubemq.io",
          "kind": "KubemqCluster",
          "plural": "kubemqclusters",
          "version": "v1alpha1"
        },
        {
          "group": "core.k8s.kubemq.io",
          "kind": "KubemqConnector",
          "plural": "kubemqconnectors",
          "version": "v1alpha1"
        },
        {
          "group": "core.k8s.kubemq.io",
          "kind": "KubemqDashboard",
          "plural": "kubemqdashboards",
          "version": "v1alpha1"
        }
      ],
      "related_images": [],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.3.5",
      "version_original": "1.3.5"
    },
    {
      "_id": "6000643a01ff13a6371b8328",
      "alm_examples": [
        {
          "kind": "KubemqCluster",
          "metadata": {
            "name": "kubemq-cluster"
          },
          "spec": {
            "replicas": 3
          }
        },
        {
          "kind": "KubemqDashboard",
          "metadata": {
            "name": "kubemq-dashboard"
          }
        },
        {
          "kind": "KubemqConnector",
          "metadata": {
            "name": "kubemq-bridges"
          },
          "spec": {
            "config": "bindings: null",
            "type": "bridges"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/kubemq/kubemq-operator-bundle@sha256:18ccdb6da4534cf1e10c831e392df7252273ccfa763fe7251391a8bd0bca4571",
      "bundle_path_digest": "sha256:18ccdb6da4534cf1e10c831e392df7252273ccfa763fe7251391a8bd0bca4571",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-01-14T15:33:14.411000+00:00",
      "csv_description": "\n## Kubernetes Messaging Platform\nA message-based architecture for microservices providing flexible connectivity for hybrid environments: multi-cloud, on-premises, and at the edge. Powered by enterprise-grade message broker and message queue with ready to use connectors, bridges, and control center.\n\nMessaging platform components:\n  - **KubeMQ Cluster** - Enterprise-grade message broker and message queue, scalable, high available, and secured.\n  - **KubeMQ Targets Connector** - connects a KubeMQ cluster with external systems and cloud services.\n  - **KubeMQ Bridges Connector** - bridge, replicate, aggregate, and transform messages between KubeMQ clusters.\n  - **KubeMQ Sources Connector** - transform external systems and cloud services data to KubeMQ cluster messages.\n  - **KubeMQ Dashboard** - monitor KubeMQ cluster metrics.\n\n### Kubernetes Native\nInnovative and modern message queue and message broker in a lightweight container developed to run in Kubernetes, certified in the CNCF landscape, and connect natively to the cloud-native ecosystem.\n\n### Ease of use\n\nSimple deployment in Kubernetes in less than 1 minute. Developer friendly by simple to use SDKs and elimination of the many developers and DevOps-centered challenges to define exchanges, brokers, channels, routes, and predefined topics\n\n### All messaging patterns\n\nKubeMQ is available with all messaging patterns such as Queue, Stream, Pub/Sub, and RPC, Saving the need to maintain multiple messaging platforms for different use cases.\n\n### Hybrid Environments\n\nKubeMQ enables the microservices from multiple environments to communicate and build one hybrid infrastructure solution across clouds, on-prem, and at the edge.\n\n### KubeMQ Cluster key features\n\n- All-batteries included Messaging Queue Broker for the Kubernetes environment\n- Deployed with Operator for full life cycle operation\n- Blazing fast (written in Go), small and lightweight Docker container\n- Asynchronous and Synchronous messaging with support for  `At Most Once Delivery` and `At Least Once Delivery` models\n- Supports durable FIFO based Queue, Publish-Subscribe Events, Publish-Subscribe with Persistence (Events Store), RPC Command and Query messaging patterns\n- Supports gRPC, Rest and WebSocket Transport protocols with TLS support (both RPC and Stream modes)\n- Supports Access control Authorization and Authentication\n- Supports message masticating and smart routing\n- No Message broker configuration needed (i.e., queues, exchanges)\n- .Net, Java, Python, Go, and NodeJS SDKs\n\n### KubeMQ Targets Connector key features\n\n- Runs anywhere - Kubernetes, Cloud, on-prem, anywhere\n- Stand-alone - small docker container / binary\n- Single Interface - One interface all the services\n- Any Service - Support all major services types (databases, cache, messaging, serverless, HTTP, etc.)\n- Plug-in Architecture Easy to extend, easy to connect\n- Middleware Supports - Logs, Metrics, Retries, and Rate Limiters\n- Easy Configuration - simple yaml file builds your topology\n\n[Check out Github page](https://github.com/kubemq-hub/kubemq-targets)\n\n### KubeMQ Bridges Connector key features\n\n- Runs anywhere - Kubernetes, Cloud, on-prem, anywhere\n- Stand-alone - small docker container / binary\n- Build Any Topology - connects KubeMQ clusters in 1:1, 1:n , n:1, n:n\n- Middleware Supports - Logs, Metrics, Retries, and Rate Limiters\n- Easy Configuration - simple yaml file builds your topology\n\n[Check out Github page](https://github.com/kubemq-hub/kubemq-bridges)\n\n### KubeMQ Sources Connector key features\n\n- Runs anywhere - Kubernetes, Cloud, on-prem, anywhere\n- Stand-alone - small docker container / binary\n- Single Interface - One interface all the services\n- Any Service - Support all major messaging services such as Kafka, ActiveMQ, SQS, and more.\n- Plug-in Architecture Easy to extend, easy to connect\n- Middleware Supports - Logs, Metrics, Retries, and Rate Limiters\n- Easy Configuration - simple yaml file builds your topology\n\n[Check out Github page](https://github.com/kubemq-hub/kubemq-sources)\n\n## Getting Started\n\n[Start with OpenShift](https://docs.kubemq.io/getting-started/create-cluster/openshift)\n\n## Get Enterprise Trial License\n\n[Register](https://account.kubemq.io/login/register)\n\n## Request a Demo\n\n[See KubeMQ in Action](https://kubemq.io/request-a-demo/)",
      "csv_display_name": "Kubemq Enterprise Operator",
      "csv_metadata_description": "Kubernetes Messaging Platform",
      "csv_name": "kubemq-operator.v1.4.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:47:31.927000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "kubemq-operator-marketplace",
      "provided_apis": [
        {
          "group": "core.k8s.kubemq.io",
          "kind": "KubemqCluster",
          "plural": "kubemqclusters",
          "version": "v1alpha1"
        },
        {
          "group": "core.k8s.kubemq.io",
          "kind": "KubemqConnector",
          "plural": "kubemqconnectors",
          "version": "v1alpha1"
        },
        {
          "group": "core.k8s.kubemq.io",
          "kind": "KubemqDashboard",
          "plural": "kubemqdashboards",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6b8680bb34b335f0c5653bc38a4d1be174a91846176b1336ac166e32158b42c9",
          "image": "registry.connect.redhat.com/kubemq/kubemq-operator@sha256:6b8680bb34b335f0c5653bc38a4d1be174a91846176b1336ac166e32158b42c9",
          "name": "kubemq-operator-6b8680bb34b335f0c5653bc38a4d1be174a91846176b1336ac166e32158b42c9-annotation"
        },
        {
          "digest": "sha256:6b8680bb34b335f0c5653bc38a4d1be174a91846176b1336ac166e32158b42c9",
          "image": "registry.connect.redhat.com/kubemq/kubemq-operator@sha256:6b8680bb34b335f0c5653bc38a4d1be174a91846176b1336ac166e32158b42c9",
          "name": "kubemq-operator"
        },
        {
          "digest": "sha256:64f27bccdec7f70795fadec0201313e7a002dc74355ba18d397aef0e61ef381b",
          "image": "registry.connect.redhat.com/kubemq/kubemq-uni@sha256:64f27bccdec7f70795fadec0201313e7a002dc74355ba18d397aef0e61ef381b",
          "name": "kubemq_cluster"
        },
        {
          "digest": "sha256:84b01bd821ac3d5754119dfa2f6ad3d74483436bfc9ac4223795a9b1317232d3",
          "image": "registry.redhat.io/openshift4/ose-prometheus@sha256:84b01bd821ac3d5754119dfa2f6ad3d74483436bfc9ac4223795a9b1317232d3",
          "name": "prometheus"
        },
        {
          "digest": "sha256:0f90281201084c0ad22b26597d85a8bcdf0f740a1d3957822103f8fea58fe9f9",
          "image": "registry.redhat.io/openshift4/ose-grafana@sha256:0f90281201084c0ad22b26597d85a8bcdf0f740a1d3957822103f8fea58fe9f9",
          "name": "grafana"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.4.0",
      "version_original": "1.4.0"
    },
    {
      "_id": "60083b81935d6ec09f00100a",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/data-explorer-operator-bundle@sha256:2098ab48bafee24a19a6bd6592a2b177b5d863e9c1d2519bf095325dcd4476e1",
      "bundle_path_digest": "sha256:2098ab48bafee24a19a6bd6592a2b177b5d863e9c1d2519bf095325dcd4476e1",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-01-20T14:17:37.631000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "data-explorer-operator.v0.1.4",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:31:13.899000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "data-explorer-operator-certified",
      "provided_apis": [
        {
          "group": "data-explorer.com",
          "kind": "DashboardWithJupyterHub",
          "version": "v1alpha1"
        }
      ],
      "related_images": [],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.1.4",
      "version_original": "0.1.4"
    },
    {
      "_id": "60083ba93925c7b07a75f2d6",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:770c0b5a41cc3103582daeb44a0d897d578e03fdd8597a3a385f8ef78d5b6f38",
      "bundle_path_digest": "sha256:770c0b5a41cc3103582daeb44a0d897d578e03fdd8597a3a385f8ef78d5b6f38",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-01-20T14:18:17.487000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "kubeturbo-operator.v8.0.4",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T16:58:29.896000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        }
      ],
      "related_images": [],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "8.0.4",
      "version_original": "8.0.4"
    },
    {
      "_id": "60083f273925c7b07a75f2dc",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:770c0b5a41cc3103582daeb44a0d897d578e03fdd8597a3a385f8ef78d5b6f38",
      "bundle_path_digest": "sha256:770c0b5a41cc3103582daeb44a0d897d578e03fdd8597a3a385f8ef78d5b6f38",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-01-20T14:33:11.865000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "kubeturbo-operator.v8.0.4",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:13:51.638000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [],
      "related_images": [],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "8.0.4",
      "version_original": "8.0.4"
    },
    {
      "_id": "60130def7cfa229c47789216",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/data-explorer-operator-bundle@sha256:2098ab48bafee24a19a6bd6592a2b177b5d863e9c1d2519bf095325dcd4476e1",
      "bundle_path_digest": "sha256:2098ab48bafee24a19a6bd6592a2b177b5d863e9c1d2519bf095325dcd4476e1",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-01-28T19:18:07.839000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "data-explorer-operator.v0.1.4",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T16:58:48.245000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "data-explorer-operator-certified",
      "provided_apis": [
        {
          "group": "data-explorer.com",
          "kind": "DashboardWithJupyterHub",
          "plural": "dashboardwithjupyterhubs",
          "version": "v1alpha1"
        }
      ],
      "related_images": [],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.1.4",
      "version_original": "0.1.4"
    },
    {
      "_id": "60133ee4f9b54437601a0894",
      "alm_examples": [
        {
          "kind": "AirgappedDeployment",
          "metadata": {
            "name": "airgappeddeployment"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            }
          }
        },
        {
          "kind": "AnalyticsProxy",
          "metadata": {
            "name": "analyticsproxy"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7,
              "enabled": false
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            }
          }
        },
        {
          "kind": "DeleteCluster",
          "metadata": {
            "name": "deletecluster"
          },
          "spec": {
            "image_pull_secret": "bas-images-pull-secret"
          }
        },
        {
          "kind": "FullDeployment",
          "metadata": {
            "name": "fulldeployment"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7,
              "enabled": false
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            },
            "prometheus_metrics": [],
            "prometheus_scheduler_frequency": "@daily"
          }
        },
        {
          "kind": "GenerateKey",
          "metadata": {
            "name": "bas-api-key"
          },
          "spec": {
            "image_pull_secret": "bas-images-pull-secret"
          }
        },
        {
          "kind": "StoreForwardMetric",
          "metadata": {
            "name": "storeforwardmetric"
          },
          "spec": {
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            },
            "prometheus_metrics": [],
            "prometheus_scheduler_frequency": "@daily"
          }
        },
        {
          "kind": "Dashboard",
          "metadata": {
            "name": "dashboard"
          },
          "spec": {
            "enable_test_api": true,
            "image_pull_secret": "bas-images-pull-secret"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/behavior-analytics-services-operator-bundle@sha256:79520ef98e9cd360fb2a01519631e3d3c488ada6d3cb8c68334c4f517750c0ac",
      "bundle_path_digest": "sha256:79520ef98e9cd360fb2a01519631e3d3c488ada6d3cb8c68334c4f517750c0ac",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-01-28T22:47:00.528000+00:00",
      "csv_description": "Behavior Analytics Services Operator is a service that collects, transforms and transmits product usage data.\nThe Operator supports deployments using-\nA. Dashboard\nB. Openshift portal or CLI\n\n**A. Dashboard**\n----\nWhen the Operator is installed, the Dashboard is installed too. Goto the Dashboard Custom Resource to get the URL to the Dashboard.\n\n\n**B. Openshift portal or CLI**\n----\n----\nFor manual installation using Openshift portal or CLI, follow the steps below\n\n\n**Pre-requisites**\n----\nStep 1: Create a new Project\n```sh\noc new-project <project-name>\n```\n\nStep 2: Create a secret named \"database-credentials\" for PostgreSQL DB\n```sh\n oc create secret generic database-credentials --from-literal=db_username=<DB Username> --from-literal=db_password=<DB Password> -n <project-name>\n```\n\nStep 3: [Optional] If the images require a secret to pull the container images, create a secret of type dockerconfigjson. Pass this secret name in the CR spec image\\_pull\\_secret\n```sh\noc create secret generic bas-images-pull-secret --from-file=.dockerconfigjson=<path/to/.docker/config.json>  --type=kubernetes.io/dockerconfigjson\n```\n\nStep 4: Create a secret named \"grafana-credentials\" to setup Grafana login credentials\n```sh\n oc create secret generic grafana-credentials --from-literal=grafana_username=<username> --from-literal=grafana_password=<password> -n <project-name>\n```\n\nStep 5: Create a secret named \"mtls-proxy-secret\" which has the client key and certificate to connect to IBM Proxy service. If you don't have certificates then refer link https://developers.cloudflare.com/access/service-auth/mtls-testing#generating-the-root-ca to create root and client certificates. Please ensure to share root certificate with edge@ibm.com to allow access to IBM proxy service using client certificate\n```sh\noc create secret tls mtls-proxy-secret --key client-key.pem --cert client.pem\n```\n\n**Installing the Behavior Analytics Services**\n----\n\nSelect any one of the deployments to setup the Behavior Analytics Services\n1. Full Deployment\n2. Analytics Proxy Deployment\n3. Store and Forward metrics Deployment\n4. Airgapped Analytics Proxy Deployment\n\n| Spec                                                      | Description                                                      | Default Value          |\n| --------------------------------------------------------- | ------------------------------------------------------------ | ---------------------- |\n| `ibmproxyurl`                                               | URL of IBM Proxy Service                                     | `https://iaps.ibm.com`   |\n| `postgres.storage_class`                                    | Storage class of type ReadWriteOnce                          | Required user input        |\n| `postgres.size`                                             | Size (in G) of the storage to be attached to Database        | `10G`                    |\n| `kafka.storage_class`                                       | Storage class of type ReadWriteOnce                          | Required user input        |\n| `kafka.storage_size`                                        | Size (in G) of the storage to be attached to Kafka  | `5G`                     |\n| `kafka.zookeeper_storage_class`                                 | Storage class of type ReadWriteOnce                          | Required user input        |\n| `kafka.zookeeper_storage_size`                                 | Size (in G) of the storage to be attached to Zookeeper | `5G`                     |\n| `airgapped.enabled`                                         | Set value to \"true\" if airgapped setup is to be enabled otherwise keep the default value \"false\" | `false`                  |\n| `airgapped.backup_retention_period`   | Number of days to keep the backup files in the storage       | `7`                     |\n| `airgapped.backup_deletion_frequency` | Frequency of job to delete files from the storage. It accepts values in Cron format (https://en.wikipedia.org/wiki/Cron) | `@daily`                 |\n| `event_scheduler_frequency`                               | Frequency at which events will be forwarded to proxy in Cron format. In case if internet connection available on the cluster only during a certain time frame, specify time in UTC equivalent Cron format. | `@hourly`                |\n| `prometheus_scheduler_frequency`                          | Frequency in Cronjob format to pull metrics from Prometheus  | `@daily`                |\n| `image_pull_secret`                                       | Secret to pull container images from registry                | `bas-images-pull-secret` |\n| `db_archive.frequency`                                    | Frequency in Cronjob format to run archive job                                                           | `@monthly`             |\n| `db_archive.retention_age`                                | Number of months to retain the data in Database              | `6`                    |\n| `db_archive.persistent_storage.storage_class`             |Storage class of type ReadWriteMany         | Required user input    |\n| `db_archive.persistent_storage.storage_size`              | Size (in G) of the storage to be attached for saving airgapped files | `10G`                  |\n| `prometheus_metrics`                                      | Array of metrics information to be send to destination at desired frequency | []\n| `env_type`              | Type of environment. Can be **prod** (HA) or **lite** (non HA) | `lite`                  |\n| `allowed_domains`                                         | Comma separated values of domains allowed by BAS. By default all domains are allowed | '*'\n\n\n**Generating the API Key**\n----\nOnce the deployment is complete, to use the Behavior Analytics Services Endpoints, generate an API key using the CR GenerateKey. This API key to be used to authenticate Behavior Analytics Services Endpoints.\n\nNote- Key can be retrieved from the secret with same name used while creating Generate Key CR's instance.\nOnce you get key from the secret, decode it using below command:\n```sh\necho -n <secret key> | base64 -d\n```\n\n**Deleting the API Key**\n----\nTo revoke the Key, delete the corresponding GenerateKey instance.\n\n**Using Behavior Analytics Services Endpoints**\n---\nFor all BAS APIs, use the Generated API Key for Authentication. Pass it as the Header- X-API-KEY and the key while using the APIs.",
      "csv_display_name": "Behavior Analytics Services",
      "csv_metadata_description": "Behavior Analytics Services is a service that collects, transforms and transmits product usage data.",
      "csv_name": "behavior-analytics-services-operator.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:16:08.519000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "behavior-analytics-services-operator-certified",
      "provided_apis": [
        {
          "group": "bas.ibm.com",
          "kind": "DeleteCluster",
          "plural": "deleteclusters",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "FullDeployment",
          "plural": "fulldeployments",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "GenerateKey",
          "plural": "generatekeys",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "StoreForwardMetric",
          "plural": "storeforwardmetrics",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "AirgappedDeployment",
          "plural": "airgappeddeployments",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "AnalyticsProxy",
          "plural": "analyticsproxies",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "Dashboard",
          "plural": "dashboards",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6b048ead1121a9ca2bcc0d5b2a198a01e889456d5069f303d2af4dcdf465a40f",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6b048ead1121a9ca2bcc0d5b2a198a01e889456d5069f303d2af4dcdf465a40f",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:2b7f3b3e231cfcfcb9ed400b23957ce0ac8df5996376afcde9d1dc2c27184686",
          "image": "registry.connect.redhat.com/ibm-edge/behavior-analytics-services-operator@sha256:2b7f3b3e231cfcfcb9ed400b23957ce0ac8df5996376afcde9d1dc2c27184686",
          "name": "behavior-analytics-services-operator"
        },
        {
          "digest": "sha256:5bc5f622a05b8993785c996890b7e8b19ca680788e525ae9e7833e365c1774f9",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:5bc5f622a05b8993785c996890b7e8b19ca680788e525ae9e7833e365c1774f9",
          "name": "dashboardinstaller"
        },
        {
          "digest": "sha256:13902a13f7bca0d346e1af4719ac0be4b92d8d283c2c35068ecc1f1dedd676ab",
          "image": "registry.connect.redhat.com/ibm-edge/event-api@sha256:13902a13f7bca0d346e1af4719ac0be4b92d8d283c2c35068ecc1f1dedd676ab",
          "name": "event_api"
        },
        {
          "digest": "sha256:e5dc124a4e9c9b1a85fc421c557bdd071b25330a093c61ba7430d69d477fcd4b",
          "image": "registry.connect.redhat.com/ibm-edge/store-api@sha256:e5dc124a4e9c9b1a85fc421c557bdd071b25330a093c61ba7430d69d477fcd4b",
          "name": "store_api"
        },
        {
          "digest": "sha256:819ffaf71e72b744cd9d8ce8fb40a60f1a2ada42c27bdfd160e6678b4538c38b",
          "image": "registry.connect.redhat.com/ibm-edge/event-reader@sha256:819ffaf71e72b744cd9d8ce8fb40a60f1a2ada42c27bdfd160e6678b4538c38b",
          "name": "reader"
        },
        {
          "digest": "sha256:93dd46f5a4e7cf5ff2b9c440fb75147bd7dffb426ba261355f39adcf91d86117",
          "image": "registry.connect.redhat.com/ibm-edge/event-scheduler@sha256:93dd46f5a4e7cf5ff2b9c440fb75147bd7dffb426ba261355f39adcf91d86117",
          "name": "event_scheduler"
        },
        {
          "digest": "sha256:b7feb7e1ab0faa1fe2ec0fc0ce7d823e5476e9f5c13d7ed6a4c1eff013bf07bc",
          "image": "registry.connect.redhat.com/ibm-edge/prometheus-scheduler@sha256:b7feb7e1ab0faa1fe2ec0fc0ce7d823e5476e9f5c13d7ed6a4c1eff013bf07bc",
          "name": "prometheus_scheduler"
        },
        {
          "digest": "sha256:5af6f4603b6c5a173f75a408aabf806e660ce60ced5d3dbe76a0ccfcb01c78da",
          "image": "registry.connect.redhat.com/ibm-edge/pgo-client@sha256:5af6f4603b6c5a173f75a408aabf806e660ce60ced5d3dbe76a0ccfcb01c78da",
          "name": "pgo_client"
        },
        {
          "digest": "sha256:865d9288eb8a2ab50c1e75bf7849b0a8e4b33d0f72a984eed22639a20aeb8c7d",
          "image": "registry.connect.redhat.com/ibm-edge/reverse-proxy@sha256:865d9288eb8a2ab50c1e75bf7849b0a8e4b33d0f72a984eed22639a20aeb8c7d",
          "name": "nginx"
        },
        {
          "digest": "sha256:ca3402d3298ee14a1cada233bc0fe6d86eb9d9ed0bc7773940fbfecef8e35972",
          "image": "registry.redhat.io/openshift4/ose-grafana@sha256:ca3402d3298ee14a1cada233bc0fe6d86eb9d9ed0bc7773940fbfecef8e35972",
          "name": "grafana"
        },
        {
          "digest": "sha256:4fc96dc7a835c37dd3441a2c78e094cbfff8ea7fc8432e99f979c00965184260",
          "image": "registry.redhat.io/openshift3/ose-kube-state-metrics@sha256:4fc96dc7a835c37dd3441a2c78e094cbfff8ea7fc8432e99f979c00965184260",
          "name": "ksm"
        },
        {
          "digest": "sha256:e42df9b4eac95f43d4abafa1cdfe4ea471941cb884d454a58533f3650d667064",
          "image": "registry.connect.redhat.com/ibm-edge/growth-stack-base@sha256:e42df9b4eac95f43d4abafa1cdfe4ea471941cb884d454a58533f3650d667064",
          "name": "init_container"
        },
        {
          "digest": "sha256:d748c21a55796827da82c61f162b505c59451cba24f1874e5185f21275b6bddc",
          "image": "registry.access.redhat.com/ubi8/ubi@sha256:d748c21a55796827da82c61f162b505c59451cba24f1874e5185f21275b6bddc",
          "name": "ubi"
        },
        {
          "digest": "sha256:a05b0b82ca02f4cf731f0d18c1196084d8f3c1d4c78e5d4e6a2b593efe274bc7",
          "image": "registry.connect.redhat.com/ibm-edge/airgap-download-ui@sha256:a05b0b82ca02f4cf731f0d18c1196084d8f3c1d4c78e5d4e6a2b593efe274bc7",
          "name": "download_ui"
        },
        {
          "digest": "sha256:0151e5dbe0a25e30a0f22b788329f35a918ab8649c59ebd3fa1e0d1dd0c3bb3f",
          "image": "registry.connect.redhat.com/ibm-edge/bas-operator-dashboard@sha256:0151e5dbe0a25e30a0f22b788329f35a918ab8649c59ebd3fa1e0d1dd0c3bb3f",
          "name": "dashboard_ui"
        },
        {
          "digest": "sha256:5e31ce8745926e0116827b1b658800dd3e8b91cd1800be4f9943a84a1c023f78",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:5e31ce8745926e0116827b1b658800dd3e8b91cd1800be4f9943a84a1c023f78",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "image": "registry.connect.redhat.com/crunchydata/pgo-deployer@sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "name": "pgo_deployer"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "601342d7a44e72527c4b11ef",
      "alm_examples": [
        {
          "kind": "AirgappedDeployment",
          "metadata": {
            "name": "airgappeddeployment"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            }
          }
        },
        {
          "kind": "AnalyticsProxy",
          "metadata": {
            "name": "analyticsproxy"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7,
              "enabled": false
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            }
          }
        },
        {
          "kind": "DeleteCluster",
          "metadata": {
            "name": "deletecluster"
          },
          "spec": {
            "image_pull_secret": "bas-images-pull-secret"
          }
        },
        {
          "kind": "FullDeployment",
          "metadata": {
            "name": "fulldeployment"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7,
              "enabled": false
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            },
            "prometheus_metrics": [],
            "prometheus_scheduler_frequency": "@daily"
          }
        },
        {
          "kind": "GenerateKey",
          "metadata": {
            "name": "bas-api-key"
          },
          "spec": {
            "image_pull_secret": "bas-images-pull-secret"
          }
        },
        {
          "kind": "StoreForwardMetric",
          "metadata": {
            "name": "storeforwardmetric"
          },
          "spec": {
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            },
            "prometheus_metrics": [],
            "prometheus_scheduler_frequency": "@daily"
          }
        },
        {
          "kind": "Dashboard",
          "metadata": {
            "name": "dashboard"
          },
          "spec": {
            "enable_test_api": true,
            "image_pull_secret": "bas-images-pull-secret"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/behavior-analytics-services-operator-bundle@sha256:79520ef98e9cd360fb2a01519631e3d3c488ada6d3cb8c68334c4f517750c0ac",
      "bundle_path_digest": "sha256:79520ef98e9cd360fb2a01519631e3d3c488ada6d3cb8c68334c4f517750c0ac",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-01-28T23:03:51.685000+00:00",
      "csv_description": "Behavior Analytics Services Operator is a service that collects, transforms and transmits product usage data.\nThe Operator supports deployments using-\nA. Dashboard\nB. Openshift portal or CLI\n\n**A. Dashboard**\n----\nWhen the Operator is installed, the Dashboard is installed too. Goto the Dashboard Custom Resource to get the URL to the Dashboard.\n\n\n**B. Openshift portal or CLI**\n----\n----\nFor manual installation using Openshift portal or CLI, follow the steps below\n\n\n**Pre-requisites**\n----\nStep 1: Create a new Project\n```sh\noc new-project <project-name>\n```\n\nStep 2: Create a secret named \"database-credentials\" for PostgreSQL DB\n```sh\n oc create secret generic database-credentials --from-literal=db_username=<DB Username> --from-literal=db_password=<DB Password> -n <project-name>\n```\n\nStep 3: [Optional] If the images require a secret to pull the container images, create a secret of type dockerconfigjson. Pass this secret name in the CR spec image\\_pull\\_secret\n```sh\noc create secret generic bas-images-pull-secret --from-file=.dockerconfigjson=<path/to/.docker/config.json>  --type=kubernetes.io/dockerconfigjson\n```\n\nStep 4: Create a secret named \"grafana-credentials\" to setup Grafana login credentials\n```sh\n oc create secret generic grafana-credentials --from-literal=grafana_username=<username> --from-literal=grafana_password=<password> -n <project-name>\n```\n\nStep 5: Create a secret named \"mtls-proxy-secret\" which has the client key and certificate to connect to IBM Proxy service. If you don't have certificates then refer link https://developers.cloudflare.com/access/service-auth/mtls-testing#generating-the-root-ca to create root and client certificates. Please ensure to share root certificate with edge@ibm.com to allow access to IBM proxy service using client certificate\n```sh\noc create secret tls mtls-proxy-secret --key client-key.pem --cert client.pem\n```\n\n**Installing the Behavior Analytics Services**\n----\n\nSelect any one of the deployments to setup the Behavior Analytics Services\n1. Full Deployment\n2. Analytics Proxy Deployment\n3. Store and Forward metrics Deployment\n4. Airgapped Analytics Proxy Deployment\n\n| Spec                                                      | Description                                                      | Default Value          |\n| --------------------------------------------------------- | ------------------------------------------------------------ | ---------------------- |\n| `ibmproxyurl`                                               | URL of IBM Proxy Service                                     | `https://iaps.ibm.com`   |\n| `postgres.storage_class`                                    | Storage class of type ReadWriteOnce                          | Required user input        |\n| `postgres.size`                                             | Size (in G) of the storage to be attached to Database        | `10G`                    |\n| `kafka.storage_class`                                       | Storage class of type ReadWriteOnce                          | Required user input        |\n| `kafka.storage_size`                                        | Size (in G) of the storage to be attached to Kafka  | `5G`                     |\n| `kafka.zookeeper_storage_class`                                 | Storage class of type ReadWriteOnce                          | Required user input        |\n| `kafka.zookeeper_storage_size`                                 | Size (in G) of the storage to be attached to Zookeeper | `5G`                     |\n| `airgapped.enabled`                                         | Set value to \"true\" if airgapped setup is to be enabled otherwise keep the default value \"false\" | `false`                  |\n| `airgapped.backup_retention_period`   | Number of days to keep the backup files in the storage       | `7`                     |\n| `airgapped.backup_deletion_frequency` | Frequency of job to delete files from the storage. It accepts values in Cron format (https://en.wikipedia.org/wiki/Cron) | `@daily`                 |\n| `event_scheduler_frequency`                               | Frequency at which events will be forwarded to proxy in Cron format. In case if internet connection available on the cluster only during a certain time frame, specify time in UTC equivalent Cron format. | `@hourly`                |\n| `prometheus_scheduler_frequency`                          | Frequency in Cronjob format to pull metrics from Prometheus  | `@daily`                |\n| `image_pull_secret`                                       | Secret to pull container images from registry                | `bas-images-pull-secret` |\n| `db_archive.frequency`                                    | Frequency in Cronjob format to run archive job                                                           | `@monthly`             |\n| `db_archive.retention_age`                                | Number of months to retain the data in Database              | `6`                    |\n| `db_archive.persistent_storage.storage_class`             |Storage class of type ReadWriteMany         | Required user input    |\n| `db_archive.persistent_storage.storage_size`              | Size (in G) of the storage to be attached for saving airgapped files | `10G`                  |\n| `prometheus_metrics`                                      | Array of metrics information to be send to destination at desired frequency | []\n| `env_type`              | Type of environment. Can be **prod** (HA) or **lite** (non HA) | `lite`                  |\n| `allowed_domains`                                         | Comma separated values of domains allowed by BAS. By default all domains are allowed | '*'\n\n\n**Generating the API Key**\n----\nOnce the deployment is complete, to use the Behavior Analytics Services Endpoints, generate an API key using the CR GenerateKey. This API key to be used to authenticate Behavior Analytics Services Endpoints.\n\nNote- Key can be retrieved from the secret with same name used while creating Generate Key CR's instance.\nOnce you get key from the secret, decode it using below command:\n```sh\necho -n <secret key> | base64 -d\n```\n\n**Deleting the API Key**\n----\nTo revoke the Key, delete the corresponding GenerateKey instance.\n\n**Using Behavior Analytics Services Endpoints**\n---\nFor all BAS APIs, use the Generated API Key for Authentication. Pass it as the Header- X-API-KEY and the key while using the APIs.",
      "csv_display_name": "Behavior Analytics Services",
      "csv_metadata_description": "Behavior Analytics Services is a service that collects, transforms and transmits product usage data.",
      "csv_name": "behavior-analytics-services-operator.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:44:07.326000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "behavior-analytics-services-operator-certified",
      "provided_apis": [
        {
          "group": "bas.ibm.com",
          "kind": "StoreForwardMetric",
          "plural": "storeforwardmetrics",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "AirgappedDeployment",
          "plural": "airgappeddeployments",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "AnalyticsProxy",
          "plural": "analyticsproxies",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "Dashboard",
          "plural": "dashboards",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "DeleteCluster",
          "plural": "deleteclusters",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "FullDeployment",
          "plural": "fulldeployments",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "GenerateKey",
          "plural": "generatekeys",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6b048ead1121a9ca2bcc0d5b2a198a01e889456d5069f303d2af4dcdf465a40f",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6b048ead1121a9ca2bcc0d5b2a198a01e889456d5069f303d2af4dcdf465a40f",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:2b7f3b3e231cfcfcb9ed400b23957ce0ac8df5996376afcde9d1dc2c27184686",
          "image": "registry.connect.redhat.com/ibm-edge/behavior-analytics-services-operator@sha256:2b7f3b3e231cfcfcb9ed400b23957ce0ac8df5996376afcde9d1dc2c27184686",
          "name": "behavior-analytics-services-operator"
        },
        {
          "digest": "sha256:5bc5f622a05b8993785c996890b7e8b19ca680788e525ae9e7833e365c1774f9",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:5bc5f622a05b8993785c996890b7e8b19ca680788e525ae9e7833e365c1774f9",
          "name": "dashboardinstaller"
        },
        {
          "digest": "sha256:13902a13f7bca0d346e1af4719ac0be4b92d8d283c2c35068ecc1f1dedd676ab",
          "image": "registry.connect.redhat.com/ibm-edge/event-api@sha256:13902a13f7bca0d346e1af4719ac0be4b92d8d283c2c35068ecc1f1dedd676ab",
          "name": "event_api"
        },
        {
          "digest": "sha256:e5dc124a4e9c9b1a85fc421c557bdd071b25330a093c61ba7430d69d477fcd4b",
          "image": "registry.connect.redhat.com/ibm-edge/store-api@sha256:e5dc124a4e9c9b1a85fc421c557bdd071b25330a093c61ba7430d69d477fcd4b",
          "name": "store_api"
        },
        {
          "digest": "sha256:819ffaf71e72b744cd9d8ce8fb40a60f1a2ada42c27bdfd160e6678b4538c38b",
          "image": "registry.connect.redhat.com/ibm-edge/event-reader@sha256:819ffaf71e72b744cd9d8ce8fb40a60f1a2ada42c27bdfd160e6678b4538c38b",
          "name": "reader"
        },
        {
          "digest": "sha256:93dd46f5a4e7cf5ff2b9c440fb75147bd7dffb426ba261355f39adcf91d86117",
          "image": "registry.connect.redhat.com/ibm-edge/event-scheduler@sha256:93dd46f5a4e7cf5ff2b9c440fb75147bd7dffb426ba261355f39adcf91d86117",
          "name": "event_scheduler"
        },
        {
          "digest": "sha256:b7feb7e1ab0faa1fe2ec0fc0ce7d823e5476e9f5c13d7ed6a4c1eff013bf07bc",
          "image": "registry.connect.redhat.com/ibm-edge/prometheus-scheduler@sha256:b7feb7e1ab0faa1fe2ec0fc0ce7d823e5476e9f5c13d7ed6a4c1eff013bf07bc",
          "name": "prometheus_scheduler"
        },
        {
          "digest": "sha256:5af6f4603b6c5a173f75a408aabf806e660ce60ced5d3dbe76a0ccfcb01c78da",
          "image": "registry.connect.redhat.com/ibm-edge/pgo-client@sha256:5af6f4603b6c5a173f75a408aabf806e660ce60ced5d3dbe76a0ccfcb01c78da",
          "name": "pgo_client"
        },
        {
          "digest": "sha256:865d9288eb8a2ab50c1e75bf7849b0a8e4b33d0f72a984eed22639a20aeb8c7d",
          "image": "registry.connect.redhat.com/ibm-edge/reverse-proxy@sha256:865d9288eb8a2ab50c1e75bf7849b0a8e4b33d0f72a984eed22639a20aeb8c7d",
          "name": "nginx"
        },
        {
          "digest": "sha256:ca3402d3298ee14a1cada233bc0fe6d86eb9d9ed0bc7773940fbfecef8e35972",
          "image": "registry.redhat.io/openshift4/ose-grafana@sha256:ca3402d3298ee14a1cada233bc0fe6d86eb9d9ed0bc7773940fbfecef8e35972",
          "name": "grafana"
        },
        {
          "digest": "sha256:4fc96dc7a835c37dd3441a2c78e094cbfff8ea7fc8432e99f979c00965184260",
          "image": "registry.redhat.io/openshift3/ose-kube-state-metrics@sha256:4fc96dc7a835c37dd3441a2c78e094cbfff8ea7fc8432e99f979c00965184260",
          "name": "ksm"
        },
        {
          "digest": "sha256:e42df9b4eac95f43d4abafa1cdfe4ea471941cb884d454a58533f3650d667064",
          "image": "registry.connect.redhat.com/ibm-edge/growth-stack-base@sha256:e42df9b4eac95f43d4abafa1cdfe4ea471941cb884d454a58533f3650d667064",
          "name": "init_container"
        },
        {
          "digest": "sha256:d748c21a55796827da82c61f162b505c59451cba24f1874e5185f21275b6bddc",
          "image": "registry.access.redhat.com/ubi8/ubi@sha256:d748c21a55796827da82c61f162b505c59451cba24f1874e5185f21275b6bddc",
          "name": "ubi"
        },
        {
          "digest": "sha256:a05b0b82ca02f4cf731f0d18c1196084d8f3c1d4c78e5d4e6a2b593efe274bc7",
          "image": "registry.connect.redhat.com/ibm-edge/airgap-download-ui@sha256:a05b0b82ca02f4cf731f0d18c1196084d8f3c1d4c78e5d4e6a2b593efe274bc7",
          "name": "download_ui"
        },
        {
          "digest": "sha256:0151e5dbe0a25e30a0f22b788329f35a918ab8649c59ebd3fa1e0d1dd0c3bb3f",
          "image": "registry.connect.redhat.com/ibm-edge/bas-operator-dashboard@sha256:0151e5dbe0a25e30a0f22b788329f35a918ab8649c59ebd3fa1e0d1dd0c3bb3f",
          "name": "dashboard_ui"
        },
        {
          "digest": "sha256:5e31ce8745926e0116827b1b658800dd3e8b91cd1800be4f9943a84a1c023f78",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:5e31ce8745926e0116827b1b658800dd3e8b91cd1800be4f9943a84a1c023f78",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "image": "registry.connect.redhat.com/crunchydata/pgo-deployer@sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "name": "pgo_deployer"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "60137e8aa44e72527c4b1211",
      "alm_examples": [
        {
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:dd05b33ddb1ff5fb9e31d24ab0f568974d6592d50e02908c7a2e9f0d680e27b9",
      "bundle_path_digest": "sha256:dd05b33ddb1ff5fb9e31d24ab0f568974d6592d50e02908c7a2e9f0d680e27b9",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-01-29T03:18:34.604000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.0.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:12:03.027000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:204ad91c434c7179b316c1a190329c59dc41a0993f5f99d5f52d7f9e414373e0",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:204ad91c434c7179b316c1a190329c59dc41a0993f5f99d5f52d7f9e414373e0",
          "name": "kubeturbo-operator-204ad91c434c7179b316c1a190329c59dc41a0993f5f99d5f52d7f9e414373e0-annotation"
        },
        {
          "digest": "sha256:204ad91c434c7179b316c1a190329c59dc41a0993f5f99d5f52d7f9e414373e0",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:204ad91c434c7179b316c1a190329c59dc41a0993f5f99d5f52d7f9e414373e0",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:7894d08300b13a19290ae5262c8a8224663246f55de7dc9d163965af9c2e9a08",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:7894d08300b13a19290ae5262c8a8224663246f55de7dc9d163965af9c2e9a08",
          "name": "kubeturbo"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "8.0.6",
      "version_original": "8.0.6"
    },
    {
      "_id": "601388ddf94465a34f4eff0b",
      "alm_examples": [
        {
          "kind": "DashboardWithJupyterHub",
          "metadata": {
            "name": "dashboard-jupyterhub-custom"
          },
          "spec": {
            "resources": {
              "limits": {
                "cpu": "2",
                "memory": "8Gi"
              },
              "requests": {
                "cpu": "2",
                "memory": "8Gi"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/dataexplorer-operator-bundle@sha256:0ed15b5b5140d9873c43ff69f99bc86ca4c146fcd3ab9bb3c151cb3ac8a94e69",
      "bundle_path_digest": "sha256:0ed15b5b5140d9873c43ff69f99bc86ca4c146fcd3ab9bb3c151cb3ac8a94e69",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-01-29T04:02:37.869000+00:00",
      "csv_description": "Data Explorer provides ready to use pre-configured data science environment for experimentation.Bringing the promise of notebooks to Kubernetes and OpenShift as an Operator pattern.  Deploy in the cloud or your data center or local laptop with ready to use data and notebooks without burdening yourself with installation details. You can work as team or use your own project namespace.\n\nThe Operator deploys Data Explorer Dashbaord with **default** configuration of **2 CPU** and **8Gi Memory**.\n\nTo learn ***How to access the Data Explorer Dashboard*** and ***How to Deploy Data Explorer Dashboard with custom configuration*** visit <https://github.com/rhm-samples/data-explorer-operator/wiki>.\n",
      "csv_display_name": "Data Explorer Operator",
      "csv_metadata_description": "",
      "csv_name": "dataexplorer-operator.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:56:35.569000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "dataexplorer-operator-certified",
      "provided_apis": [
        {
          "group": "data-explorer.com",
          "kind": "DashboardWithJupyterHub",
          "plural": "dashboardwithjupyterhubs",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:9867fa585db94f7df90cbaf39961677b2aad6862a487ed6d8a2f6b9272069649",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:9867fa585db94f7df90cbaf39961677b2aad6862a487ed6d8a2f6b9272069649",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:f1c2252b5a614cf3bc281daa9925ab44f25a5612daab81ef36302a82e7fc8b49",
          "image": "registry.connect.redhat.com/ibm-edge/data-explorer-operator@sha256:f1c2252b5a614cf3bc281daa9925ab44f25a5612daab81ef36302a82e7fc8b49",
          "name": "manager"
        },
        {
          "digest": "sha256:fd1158972c0aca9d261f6aaf04fae857088546315f72665fd754105264d6cc59",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:fd1158972c0aca9d261f6aaf04fae857088546315f72665fd754105264d6cc59",
          "name": "dashboardinstaller"
        },
        {
          "digest": "sha256:b66cecb9b14c8ff16c6d41444e7281325c19bb0e21245d195a355d6bc572ee89",
          "image": "registry.connect.redhat.com/ibm-edge/data-explorer-dashboard@sha256:b66cecb9b14c8ff16c6d41444e7281325c19bb0e21245d195a355d6bc572ee89",
          "name": "jupyterhub_dashboard"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "6013976cf9b54437601a08ad",
      "alm_examples": [
        {
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:dd05b33ddb1ff5fb9e31d24ab0f568974d6592d50e02908c7a2e9f0d680e27b9",
      "bundle_path_digest": "sha256:dd05b33ddb1ff5fb9e31d24ab0f568974d6592d50e02908c7a2e9f0d680e27b9",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-01-29T05:04:44.967000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.0.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:57:29.654000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [],
      "related_images": [
        {
          "digest": "sha256:204ad91c434c7179b316c1a190329c59dc41a0993f5f99d5f52d7f9e414373e0",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:204ad91c434c7179b316c1a190329c59dc41a0993f5f99d5f52d7f9e414373e0",
          "name": "kubeturbo-operator-204ad91c434c7179b316c1a190329c59dc41a0993f5f99d5f52d7f9e414373e0-annotation"
        },
        {
          "digest": "sha256:204ad91c434c7179b316c1a190329c59dc41a0993f5f99d5f52d7f9e414373e0",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:204ad91c434c7179b316c1a190329c59dc41a0993f5f99d5f52d7f9e414373e0",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:7894d08300b13a19290ae5262c8a8224663246f55de7dc9d163965af9c2e9a08",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:7894d08300b13a19290ae5262c8a8224663246f55de7dc9d163965af9c2e9a08",
          "name": "kubeturbo"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "8.0.6",
      "version_original": "8.0.6"
    },
    {
      "_id": "6013a5adf9b54437601a08b0",
      "alm_examples": [
        {
          "kind": "NexusRepo",
          "metadata": {
            "name": "example-nexusrepo"
          },
          "spec": {
            "config": {
              "enabled": false,
              "mountPath": "/sonatype-nexus-conf"
            },
            "deployment": {
              "annotations": {},
              "postStart": {},
              "preStart": {},
              "terminationGracePeriodSeconds": 120
            },
            "deploymentStrategy": {},
            "ingress": {
              "annotations": {},
              "enabled": false,
              "path": "/",
              "tls": {
                "enabled": true,
                "secretName": "nexus-tls"
              }
            },
            "nexus": {
              "dockerPort": 5003,
              "env": [
                {
                  "name": "install4jAddVmParams",
                  "value": "-Xms1200M -Xmx1200M -XX:MaxDirectMemorySize=2G -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
                },
                {
                  "name": "NEXUS_SECURITY_RANDOMPASSWORD",
                  "value": "false"
                }
              ],
              "hostAliases": [],
              "imageName": "registry.connect.redhat.com/sonatype/nexus-repository-manager@sha256:4d816619ae0add7010dcc297d7593ceace9c92c060ed01764dd3d84e804c42f0",
              "imagePullPolicy": "IfNotPresent",
              "imagePullSecret": "",
              "livenessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 30,
                "path": "/",
                "periodSeconds": 30
              },
              "nexusPort": 8081,
              "podAnnotations": {},
              "readinessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 30,
                "path": "/",
                "periodSeconds": 30
              },
              "resources": {},
              "securityContext": {
                "fsGroup": 2000
              },
              "service": {
                "type": "NodePort"
              }
            },
            "nexusProxyRoute": {
              "enabled": false
            },
            "persistence": {
              "accessMode": "ReadWriteOnce",
              "enabled": true,
              "storageSize": "8Gi"
            },
            "replicaCount": 1,
            "route": {
              "enabled": false,
              "name": "docker",
              "portName": "docker"
            },
            "secret": {
              "enabled": false,
              "mountPath": "/etc/secret-volume",
              "readOnly": true
            },
            "service": {
              "annotations": {},
              "enabled": false,
              "labels": {},
              "ports": [
                {
                  "name": "nexus-service",
                  "port": 80,
                  "targetPort": 80
                }
              ]
            },
            "statefulset": {
              "enabled": false
            },
            "tolerations": []
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sonatype/nxrm-operator-bundle@sha256:2468cdba4a093312d121be5389b40456fac45c92de4be8560da448bc225be8d7",
      "bundle_path_digest": "sha256:2468cdba4a093312d121be5389b40456fac45c92de4be8560da448bc225be8d7",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-01-29T06:05:33.593000+00:00",
      "csv_description": "Nexus Repository is the central source of control to efficiently manage all binaries\nand build artifacts across your DevOps pipeline.\nThe flow of open source and third-party components into and through an organization\ncreates a complex software supply chain.\nNexus Repository delivers speed, efficiency, and quality to the governance\nand management of all dependencies, libraries, and applications for your DevOps teams.\n\n## Core Capabilities\n\n* **Dependency Management**:\n  Improves reliability with repeatable, fast access to secure dependencies\n* **Developer Productivity**:\n  Streamline developer workflows by enabling the sharing of components and applications across teams\n* **Supply Chain Performance**:\n  Improve speed-to-market and reduced build times with release advanced staging and component tagging\n* **CI/CD Integrations**:\n  Increase DevOps scalability with integrations to the most popular build and deployment tools\n\nVersion control systems and package registries do not scale when managing proprietary,\nopen source, and third-party components.\nOrganizations need a central binary and build artifact repository to manage dependencies\nacross the entire software supply chain.\n\n## Usage\n\nOnce the server instance is created by the operator and running,\nyou'll want to expose the service as you see fit:\n1. Create a Route to that service for nexus.port (8081).\n\nBy default, the Nexus Repository starts up in OSS mode until a license is installed.\n\nThe Nexus Repository can be further configured via the NexusRepo custom resource definition:\n\n| Parameter                                   | Description                         | Default                                 |\n| ------------------------------------------  | ----------------------------------  | ----------------------------------------|\n| `statefulset.enabled`                       | Use statefulset instead of deployment | `false` |\n| `deploymentStrategy`                        | Deployment Strategy     |  `rollingUpdate` |\n| `nexus.env`                                 | Nexus environment variables         | `[{install4jAddVmParams: -Xms1200M -Xmx1200M -XX:MaxDirectMemorySize=2G -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap}]` |\n| `nexus.resources`                           | Nexus resource requests and limits  | `{}`                                    |\n| `nexus.dockerPort`                          | Port to access docker               | `5003`                                  |\n| `nexus.nexusPort`                           | Internal port for Nexus service     | `8081`                                  |\n| `nexus.service.type`                        | Service for Nexus                   |`NodePort`                                |\n| `nexus.service.clusterIp`                   | Specific cluster IP when service type is cluster IP. Use None for headless service |`nil`   |\n| `nexus.securityContext`                     | Security Context (for enabling official image use `fsGroup: 2000`) | `{}`     |\n| `nexus.labels`                              | Service labels                      | `{}`                                    |\n| `nexus.podAnnotations`                      | Pod Annotations                     | `{}`\n| `nexus.livenessProbe.initialDelaySeconds`   | LivenessProbe initial delay         | 30                                      |\n| `nexus.livenessProbe.periodSeconds`         | Seconds between polls               | 30                                      |\n| `nexus.livenessProbe.failureThreshold`      | Number of attempts before failure   | 6                                       |\n| `nexus.livenessProbe.timeoutSeconds`        | Time in seconds after liveness probe times out    | `nil`                     |\n| `nexus.livenessProbe.path`                  | Path for LivenessProbe              | /                                       |\n| `nexus.readinessProbe.initialDelaySeconds`  | ReadinessProbe initial delay        | 30                                      |\n| `nexus.readinessProbe.periodSeconds`        | Seconds between polls               | 30                                      |\n| `nexus.readinessProbe.failureThreshold`     | Number of attempts before failure   | 6                                       |\n| `nexus.readinessProbe.timeoutSeconds`       | Time in seconds after readiness probe times out    | `nil`                    |\n| `nexus.readinessProbe.path`                 | Path for ReadinessProbe             | /                                       |\n| `nexus.hostAliases`                         | Aliases for IPs in /etc/hosts       | []                                      |\n| `ingress.enabled`                           | Create an ingress for Nexus         | `true`                                  |\n| `ingress.annotations`                       | Annotations to enhance ingress configuration  | `{}`                          |\n| `ingress.tls.enabled`                       | Enable TLS                          | `true`                                 |\n| `ingress.tls.secretName`                    | Name of the secret storing TLS cert, `false` to use the Ingress' default certificate | `nexus-tls`                             |\n| `ingress.path`                              | Path for ingress rules. GCP users should set to `/*` | `/`                    |\n| `tolerations`                               | tolerations list                    | `[]`                                    |\n| `config.enabled`                            | Enable configmap                    | `false`                                 |\n| `config.mountPath`                          | Path to mount the config            | `/sonatype-nexus-conf`                  |\n| `config.data`                               | Configmap data                      | `nil`                                   |\n| `deployment.terminationGracePeriodSeconds`  | Time to allow for clean shutdown    | 120                                     |\n| `deployment.annotations`                    | Annotations to enhance deployment configuration  | `{}`                       |\n| `deployment.initContainers`                 | Init containers to run before main containers  | `nil`                        |\n| `deployment.postStart.command`              | Command to run after starting the nexus container  | `nil`                    |\n| `deployment.preStart.command`               | Command to run before starting the nexus container  | `nil`                   |\n| `deployment.additionalContainers`           | Add additional Container         | `nil`                                      |\n| `deployment.additionalVolumes`              | Add additional Volumes           | `nil`                                      |\n| `deployment.additionalVolumeMounts`         | Add additional Volume mounts     | `nil`                                      |\n| `secret.enabled`                            | Enable secret                    | `false`                                    |\n| `secret.mountPath`                          | Path to mount the secret         | `/etc/secret-volume`                       |\n| `secret.readOnly`                           | Secret readonly state            | `true`                                     |\n| `secret.data`                               | Secret data                      | `nil`                                      |\n| `service.enabled`                           | Enable additional service        | `nil`                                      |\n| `service.name`                              | Service name                     | `nil`                                      |\n| `service.portName`                          | Service port name                | `nil`                                      |\n| `service.labels`                            | Service labels                   | `nil`                                      |\n| `service.annotations`                       | Service annotations              | `nil`                                      |\n| `service.loadBalancerSourceRanges`          | Service LoadBalancer source IP whitelist | `nil`                              |\n| `service.targetPort`                        | Service port                     | `nil`                                      |\n| `service.port`                              | Port for exposing service        | `nil`                                      |\n| `route.enabled`         | Set to true to create route for additional service | `false` |\n| `route.name`            | Name of route                                      | `docker` |\n| `route.portName`        | Target port name of service                        | `docker` |\n| `route.labels`          | Labels to be added to route                        | `{}` |\n| `route.annotations`     | Annotations to be added to route                   | `{}` |\n| `route.path`            | Host name of Route e.g jenkins.example.com         | nil |",
      "csv_display_name": "Nexus Repository Operator",
      "csv_metadata_description": "Nexus Repository is the central source of control to efficiently manage all binaries\nand build artifacts across your DevOps pipeline.",
      "csv_name": "nxrm-operator-certified.v3.27.0-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:41:19.760000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "nxrm-operator-certified",
      "provided_apis": [],
      "related_images": [
        {
          "digest": "sha256:89c48d5d4868391edc5b0d713d21a47c0305a4d0e8e94bd55eca0c019f2e3185",
          "image": "registry.connect.redhat.com/sonatype/nxrm-operator-certified@sha256:89c48d5d4868391edc5b0d713d21a47c0305a4d0e8e94bd55eca0c019f2e3185",
          "name": "nxrm-operator-certified-89c48d5d4868391edc5b0d713d21a47c0305a4d0e8e94bd55eca0c019f2e3185-annotation"
        },
        {
          "digest": "sha256:89c48d5d4868391edc5b0d713d21a47c0305a4d0e8e94bd55eca0c019f2e3185",
          "image": "registry.connect.redhat.com/sonatype/nxrm-operator-certified@sha256:89c48d5d4868391edc5b0d713d21a47c0305a4d0e8e94bd55eca0c019f2e3185",
          "name": "nxrm-operator-certified"
        },
        {
          "digest": "sha256:4d816619ae0add7010dcc297d7593ceace9c92c060ed01764dd3d84e804c42f0",
          "image": "registry.connect.redhat.com/sonatype/nexus-repository-manager@sha256:4d816619ae0add7010dcc297d7593ceace9c92c060ed01764dd3d84e804c42f0",
          "name": "nexus"
        },
        {
          "digest": "sha256:4d816619ae0add7010dcc297d7593ceace9c92c060ed01764dd3d84e804c42f0",
          "image": "registry.connect.redhat.com/sonatype/nexus-repository-manager@sha256:4d816619ae0add7010dcc297d7593ceace9c92c060ed01764dd3d84e804c42f0",
          "name": "nexus-repository-manager-4d816619ae0add7010dcc297d7593ceace9c92c060ed01764dd3d84e804c42f0-annotation"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "3.27.0-1",
      "version_original": "3.27.0-1"
    },
    {
      "_id": "6013c8fef94465a34f4eff2d",
      "alm_examples": [
        {
          "kind": "DashboardWithJupyterHub",
          "metadata": {
            "name": "dashboard-jupyterhub-custom"
          },
          "spec": {
            "resources": {
              "limits": {
                "cpu": "2",
                "memory": "8Gi"
              },
              "requests": {
                "cpu": "2",
                "memory": "8Gi"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/data-explorer-operator-bundle@sha256:9afce5e1bbde0725580c579ade487aeb2373f647ab7f40cc4d0bd061f3f887d6",
      "bundle_path_digest": "sha256:9afce5e1bbde0725580c579ade487aeb2373f647ab7f40cc4d0bd061f3f887d6",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-01-29T08:36:14.915000+00:00",
      "csv_description": "Data Explorer provides ready to use pre-configured data science environment for experimentation.Bringing the promise of notebooks to Kubernetes and OpenShift as an Operator pattern.  Deploy in the cloud or your data center or local laptop with ready to use data and notebooks without burdening yourself with installation details. You can work as team or use your own project namespace.\n\nThe Operator deploys Data Explorer Dashbaord with **default** configuration of **2 CPU** and **8Gi Memory**.\n\nTo learn ***How to access the Data Explorer Dashboard*** and ***How to Deploy Data Explorer Dashboard with custom configuration*** visit <https://github.com/rhm-samples/data-explorer-operator/wiki>.\n",
      "csv_display_name": "Data Explorer Operator",
      "csv_metadata_description": "",
      "csv_name": "data-explorer-operator.v0.1.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:22:42.158000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "data-explorer-operator-certified",
      "provided_apis": [
        {
          "group": "data-explorer.com",
          "kind": "DashboardWithJupyterHub",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6b048ead1121a9ca2bcc0d5b2a198a01e889456d5069f303d2af4dcdf465a40f",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6b048ead1121a9ca2bcc0d5b2a198a01e889456d5069f303d2af4dcdf465a40f",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:f1c2252b5a614cf3bc281daa9925ab44f25a5612daab81ef36302a82e7fc8b49",
          "image": "registry.connect.redhat.com/ibm-edge/data-explorer-operator@sha256:f1c2252b5a614cf3bc281daa9925ab44f25a5612daab81ef36302a82e7fc8b49",
          "name": "manager"
        },
        {
          "digest": "sha256:3a9983c5c7851d1f745908fb9886a6106b67f883f375598671088e2379ef432f",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:3a9983c5c7851d1f745908fb9886a6106b67f883f375598671088e2379ef432f",
          "name": "dashboardinstaller"
        },
        {
          "digest": "sha256:b66cecb9b14c8ff16c6d41444e7281325c19bb0e21245d195a355d6bc572ee89",
          "image": "registry.connect.redhat.com/ibm-edge/data-explorer-dashboard@sha256:b66cecb9b14c8ff16c6d41444e7281325c19bb0e21245d195a355d6bc572ee89",
          "name": "jupyterhub_dashboard"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.1.5",
      "version_original": "0.1.5"
    },
    {
      "_id": "6013cf5ba44e72527c4b1246",
      "alm_examples": [
        {
          "kind": "DashboardWithJupyterHub",
          "metadata": {
            "name": "dashboard-jupyterhub-custom"
          },
          "spec": {
            "resources": {
              "limits": {
                "cpu": "2",
                "memory": "8Gi"
              },
              "requests": {
                "cpu": "2",
                "memory": "8Gi"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/data-explorer-operator-bundle@sha256:9afce5e1bbde0725580c579ade487aeb2373f647ab7f40cc4d0bd061f3f887d6",
      "bundle_path_digest": "sha256:9afce5e1bbde0725580c579ade487aeb2373f647ab7f40cc4d0bd061f3f887d6",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-01-29T09:03:23.093000+00:00",
      "csv_description": "Data Explorer provides ready to use pre-configured data science environment for experimentation.Bringing the promise of notebooks to Kubernetes and OpenShift as an Operator pattern.  Deploy in the cloud or your data center or local laptop with ready to use data and notebooks without burdening yourself with installation details. You can work as team or use your own project namespace.\n\nThe Operator deploys Data Explorer Dashbaord with **default** configuration of **2 CPU** and **8Gi Memory**.\n\nTo learn ***How to access the Data Explorer Dashboard*** and ***How to Deploy Data Explorer Dashboard with custom configuration*** visit <https://github.com/rhm-samples/data-explorer-operator/wiki>.\n",
      "csv_display_name": "Data Explorer Operator",
      "csv_metadata_description": "",
      "csv_name": "data-explorer-operator.v0.1.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:46:50.659000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "data-explorer-operator-certified",
      "provided_apis": [
        {
          "group": "data-explorer.com",
          "kind": "DashboardWithJupyterHub",
          "plural": "dashboardwithjupyterhubs",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6b048ead1121a9ca2bcc0d5b2a198a01e889456d5069f303d2af4dcdf465a40f",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6b048ead1121a9ca2bcc0d5b2a198a01e889456d5069f303d2af4dcdf465a40f",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:f1c2252b5a614cf3bc281daa9925ab44f25a5612daab81ef36302a82e7fc8b49",
          "image": "registry.connect.redhat.com/ibm-edge/data-explorer-operator@sha256:f1c2252b5a614cf3bc281daa9925ab44f25a5612daab81ef36302a82e7fc8b49",
          "name": "manager"
        },
        {
          "digest": "sha256:3a9983c5c7851d1f745908fb9886a6106b67f883f375598671088e2379ef432f",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:3a9983c5c7851d1f745908fb9886a6106b67f883f375598671088e2379ef432f",
          "name": "dashboardinstaller"
        },
        {
          "digest": "sha256:b66cecb9b14c8ff16c6d41444e7281325c19bb0e21245d195a355d6bc572ee89",
          "image": "registry.connect.redhat.com/ibm-edge/data-explorer-dashboard@sha256:b66cecb9b14c8ff16c6d41444e7281325c19bb0e21245d195a355d6bc572ee89",
          "name": "jupyterhub_dashboard"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.1.5",
      "version_original": "0.1.5"
    },
    {
      "_id": "60147114ef2940f01428e9e4",
      "alm_examples": [
        {
          "kind": "Neuvector",
          "metadata": {
            "name": "example-neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "apisvc": {},
              "azureFileShare": {
                "enabled": false
              },
              "configmap": {
                "enabled": false
              },
              "enabled": true,
              "federation": {
                "managedsvc": {},
                "mastersvc": {}
              },
              "image": "registry.connect.redhat.com/neuvector/controller@sha256:c8d36c69c8e740d6cc9c1adc630d10b9b67639d45d5c103fdf8961151407af30",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "path": "/",
                "tls": false
              },
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "enabled": false
              },
              "replicas": 3,
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              }
            },
            "crdwebhook": {
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:ef5b441635be35e03a31c392363d6c7fb5a82aa8450e0f197d8b7769599877f7",
                "replicas": 3,
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                }
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:82e0fbbf1f3e223550aefbc28f44dc6b04967fe25788520eac910ac8281cec9e",
                "schedule": "0 0 * * *"
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:7d4788e2853ba23296bd06bdab92ba90c4d06f3a8a6de6e17d5becdec4c5f0a0",
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "exporter": {
              "CTRL_PASSWORD": "admin",
              "CTRL_USERNAME": "admin",
              "enabled": false,
              "scrapping": true
            },
            "imagePullSecrets": "regsecret",
            "manager": {
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager@sha256:33588d66bd7a778bc65af23864256fb683625a1a08f6c814762f7fffbca7c1bc",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "path": "/",
                "tls": false
              },
              "svc": {
                "type": "NodePort"
              }
            },
            "openshift": true,
            "resources": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:c9a87ec0ec782af1bbd37851f1b15e639a36ff8e4b5a295b9886d7516fc7eba4",
      "bundle_path_digest": "sha256:c9a87ec0ec782af1bbd37851f1b15e639a36ff8e4b5a295b9886d7516fc7eba4",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-01-29T20:33:24.427000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [NeuVector Helm Chart](https://github.com/neuvector/neuvector-helm) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart. \n\n**Complete below steps to create secret for accessing Docker or similar registry and Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nConfigure OpenShift to pull images from the private NeuVector registry on Docker Hub\n\n         oc create secret docker-registry regsecret -n neuvector --docker-server=https://index.docker.io/v1/ --docker-username=your-name --docker-password=your-pword --docker-email=your-email\n\t\t\t\t \n\nWhere \u2019your-name\u2019 is your Docker username, \u2019your-pword\u2019 is your Docker password, \u2019your-email\u2019 is your Docker email.\n\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "Neuvector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.2.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:21:23.985000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:98cc0907736d3952984d72afb4e1039ac509218f8ab082f122129e5954904d6e",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:98cc0907736d3952984d72afb4e1039ac509218f8ab082f122129e5954904d6e",
          "name": "neuvector-operator-98cc0907736d3952984d72afb4e1039ac509218f8ab082f122129e5954904d6e-annotation"
        },
        {
          "digest": "sha256:98cc0907736d3952984d72afb4e1039ac509218f8ab082f122129e5954904d6e",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:98cc0907736d3952984d72afb4e1039ac509218f8ab082f122129e5954904d6e",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:c8d36c69c8e740d6cc9c1adc630d10b9b67639d45d5c103fdf8961151407af30",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:c8d36c69c8e740d6cc9c1adc630d10b9b67639d45d5c103fdf8961151407af30",
          "name": "controller"
        },
        {
          "digest": "sha256:7d4788e2853ba23296bd06bdab92ba90c4d06f3a8a6de6e17d5becdec4c5f0a0",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:7d4788e2853ba23296bd06bdab92ba90c4d06f3a8a6de6e17d5becdec4c5f0a0",
          "name": "enforcer"
        },
        {
          "digest": "sha256:33588d66bd7a778bc65af23864256fb683625a1a08f6c814762f7fffbca7c1bc",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:33588d66bd7a778bc65af23864256fb683625a1a08f6c814762f7fffbca7c1bc",
          "name": "manager"
        },
        {
          "digest": "sha256:ef5b441635be35e03a31c392363d6c7fb5a82aa8450e0f197d8b7769599877f7",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:ef5b441635be35e03a31c392363d6c7fb5a82aa8450e0f197d8b7769599877f7",
          "name": "scanner"
        },
        {
          "digest": "sha256:82e0fbbf1f3e223550aefbc28f44dc6b04967fe25788520eac910ac8281cec9e",
          "image": "registry.access.redhat.com/ubi8@sha256:82e0fbbf1f3e223550aefbc28f44dc6b04967fe25788520eac910ac8281cec9e",
          "name": "updater"
        },
        {
          "digest": "sha256:33588d66bd7a778bc65af23864256fb683625a1a08f6c814762f7fffbca7c1bc",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:33588d66bd7a778bc65af23864256fb683625a1a08f6c814762f7fffbca7c1bc",
          "name": "manager-33588d66bd7a778bc65af23864256fb683625a1a08f6c814762f7fffbca7c1bc-annotation"
        },
        {
          "digest": "sha256:7d4788e2853ba23296bd06bdab92ba90c4d06f3a8a6de6e17d5becdec4c5f0a0",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:7d4788e2853ba23296bd06bdab92ba90c4d06f3a8a6de6e17d5becdec4c5f0a0",
          "name": "enforcer-7d4788e2853ba23296bd06bdab92ba90c4d06f3a8a6de6e17d5becdec4c5f0a0-annotation"
        },
        {
          "digest": "sha256:ef5b441635be35e03a31c392363d6c7fb5a82aa8450e0f197d8b7769599877f7",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:ef5b441635be35e03a31c392363d6c7fb5a82aa8450e0f197d8b7769599877f7",
          "name": "scanner-ef5b441635be35e03a31c392363d6c7fb5a82aa8450e0f197d8b7769599877f7-annotation"
        },
        {
          "digest": "sha256:82e0fbbf1f3e223550aefbc28f44dc6b04967fe25788520eac910ac8281cec9e",
          "image": "registry.access.redhat.com/ubi8@sha256:82e0fbbf1f3e223550aefbc28f44dc6b04967fe25788520eac910ac8281cec9e",
          "name": "ubi8-82e0fbbf1f3e223550aefbc28f44dc6b04967fe25788520eac910ac8281cec9e-annotation"
        },
        {
          "digest": "sha256:c8d36c69c8e740d6cc9c1adc630d10b9b67639d45d5c103fdf8961151407af30",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:c8d36c69c8e740d6cc9c1adc630d10b9b67639d45d5c103fdf8961151407af30",
          "name": "controller-c8d36c69c8e740d6cc9c1adc630d10b9b67639d45d5c103fdf8961151407af30-annotation"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.2.2",
      "version_original": "1.2.2"
    },
    {
      "_id": "601471d721425f9b145b89af",
      "alm_examples": [
        {
          "kind": "Neuvector",
          "metadata": {
            "name": "example-neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "apisvc": {},
              "azureFileShare": {
                "enabled": false
              },
              "configmap": {
                "enabled": false
              },
              "enabled": true,
              "federation": {
                "managedsvc": {},
                "mastersvc": {}
              },
              "image": "registry.connect.redhat.com/neuvector/controller@sha256:c8d36c69c8e740d6cc9c1adc630d10b9b67639d45d5c103fdf8961151407af30",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "path": "/",
                "tls": false
              },
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "enabled": false
              },
              "replicas": 3,
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              }
            },
            "crdwebhook": {
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:ef5b441635be35e03a31c392363d6c7fb5a82aa8450e0f197d8b7769599877f7",
                "replicas": 3,
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                }
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:82e0fbbf1f3e223550aefbc28f44dc6b04967fe25788520eac910ac8281cec9e",
                "schedule": "0 0 * * *"
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:7d4788e2853ba23296bd06bdab92ba90c4d06f3a8a6de6e17d5becdec4c5f0a0",
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "exporter": {
              "CTRL_PASSWORD": "admin",
              "CTRL_USERNAME": "admin",
              "enabled": false,
              "scrapping": true
            },
            "imagePullSecrets": "regsecret",
            "manager": {
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager@sha256:33588d66bd7a778bc65af23864256fb683625a1a08f6c814762f7fffbca7c1bc",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "path": "/",
                "tls": false
              },
              "svc": {
                "type": "NodePort"
              }
            },
            "openshift": true,
            "resources": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:c9a87ec0ec782af1bbd37851f1b15e639a36ff8e4b5a295b9886d7516fc7eba4",
      "bundle_path_digest": "sha256:c9a87ec0ec782af1bbd37851f1b15e639a36ff8e4b5a295b9886d7516fc7eba4",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-01-29T20:36:39.799000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [NeuVector Helm Chart](https://github.com/neuvector/neuvector-helm) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart. \n\n**Complete below steps to create secret for accessing Docker or similar registry and Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nConfigure OpenShift to pull images from the private NeuVector registry on Docker Hub\n\n         oc create secret docker-registry regsecret -n neuvector --docker-server=https://index.docker.io/v1/ --docker-username=your-name --docker-password=your-pword --docker-email=your-email\n\t\t\t\t \n\nWhere \u2019your-name\u2019 is your Docker username, \u2019your-pword\u2019 is your Docker password, \u2019your-email\u2019 is your Docker email.\n\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "Neuvector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.2.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:53:25.350000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:98cc0907736d3952984d72afb4e1039ac509218f8ab082f122129e5954904d6e",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:98cc0907736d3952984d72afb4e1039ac509218f8ab082f122129e5954904d6e",
          "name": "neuvector-operator-98cc0907736d3952984d72afb4e1039ac509218f8ab082f122129e5954904d6e-annotation"
        },
        {
          "digest": "sha256:98cc0907736d3952984d72afb4e1039ac509218f8ab082f122129e5954904d6e",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:98cc0907736d3952984d72afb4e1039ac509218f8ab082f122129e5954904d6e",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:c8d36c69c8e740d6cc9c1adc630d10b9b67639d45d5c103fdf8961151407af30",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:c8d36c69c8e740d6cc9c1adc630d10b9b67639d45d5c103fdf8961151407af30",
          "name": "controller"
        },
        {
          "digest": "sha256:7d4788e2853ba23296bd06bdab92ba90c4d06f3a8a6de6e17d5becdec4c5f0a0",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:7d4788e2853ba23296bd06bdab92ba90c4d06f3a8a6de6e17d5becdec4c5f0a0",
          "name": "enforcer"
        },
        {
          "digest": "sha256:33588d66bd7a778bc65af23864256fb683625a1a08f6c814762f7fffbca7c1bc",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:33588d66bd7a778bc65af23864256fb683625a1a08f6c814762f7fffbca7c1bc",
          "name": "manager"
        },
        {
          "digest": "sha256:ef5b441635be35e03a31c392363d6c7fb5a82aa8450e0f197d8b7769599877f7",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:ef5b441635be35e03a31c392363d6c7fb5a82aa8450e0f197d8b7769599877f7",
          "name": "scanner"
        },
        {
          "digest": "sha256:82e0fbbf1f3e223550aefbc28f44dc6b04967fe25788520eac910ac8281cec9e",
          "image": "registry.access.redhat.com/ubi8@sha256:82e0fbbf1f3e223550aefbc28f44dc6b04967fe25788520eac910ac8281cec9e",
          "name": "updater"
        },
        {
          "digest": "sha256:33588d66bd7a778bc65af23864256fb683625a1a08f6c814762f7fffbca7c1bc",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:33588d66bd7a778bc65af23864256fb683625a1a08f6c814762f7fffbca7c1bc",
          "name": "manager-33588d66bd7a778bc65af23864256fb683625a1a08f6c814762f7fffbca7c1bc-annotation"
        },
        {
          "digest": "sha256:7d4788e2853ba23296bd06bdab92ba90c4d06f3a8a6de6e17d5becdec4c5f0a0",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:7d4788e2853ba23296bd06bdab92ba90c4d06f3a8a6de6e17d5becdec4c5f0a0",
          "name": "enforcer-7d4788e2853ba23296bd06bdab92ba90c4d06f3a8a6de6e17d5becdec4c5f0a0-annotation"
        },
        {
          "digest": "sha256:ef5b441635be35e03a31c392363d6c7fb5a82aa8450e0f197d8b7769599877f7",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:ef5b441635be35e03a31c392363d6c7fb5a82aa8450e0f197d8b7769599877f7",
          "name": "scanner-ef5b441635be35e03a31c392363d6c7fb5a82aa8450e0f197d8b7769599877f7-annotation"
        },
        {
          "digest": "sha256:82e0fbbf1f3e223550aefbc28f44dc6b04967fe25788520eac910ac8281cec9e",
          "image": "registry.access.redhat.com/ubi8@sha256:82e0fbbf1f3e223550aefbc28f44dc6b04967fe25788520eac910ac8281cec9e",
          "name": "ubi8-82e0fbbf1f3e223550aefbc28f44dc6b04967fe25788520eac910ac8281cec9e-annotation"
        },
        {
          "digest": "sha256:c8d36c69c8e740d6cc9c1adc630d10b9b67639d45d5c103fdf8961151407af30",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:c8d36c69c8e740d6cc9c1adc630d10b9b67639d45d5c103fdf8961151407af30",
          "name": "controller-c8d36c69c8e740d6cc9c1adc630d10b9b67639d45d5c103fdf8961151407af30-annotation"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.2.2",
      "version_original": "1.2.2"
    },
    {
      "_id": "601471dfef2940f01428e9e6",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator-bundle@sha256:57038e95b66d81649cb412066c70a20f94c35b6e95453baeac3dbc43b001f374",
      "bundle_path_digest": "sha256:57038e95b66d81649cb412066c70a20f94c35b6e95453baeac3dbc43b001f374",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-01-29T20:36:47.965000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "dynatrace-monitoring.v0.9.4",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:13:40.899000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "oneagent-certified",
      "provided_apis": [],
      "related_images": [],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.9.4",
      "version_original": "0.9.4"
    },
    {
      "_id": "601524d45ca6854ed0796707",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator-bundle@sha256:57038e95b66d81649cb412066c70a20f94c35b6e95453baeac3dbc43b001f374",
      "bundle_path_digest": "sha256:57038e95b66d81649cb412066c70a20f94c35b6e95453baeac3dbc43b001f374",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-01-30T09:20:20.545000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "dynatrace-monitoring.v0.9.4",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:36:00.573000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "oneagent-certified",
      "provided_apis": [
        {
          "group": "dynatrace.com",
          "kind": "OneAgentAPM",
          "version": "v1alpha1"
        },
        {
          "group": "dynatrace.com",
          "kind": "OneAgent",
          "version": "v1alpha1"
        }
      ],
      "related_images": [],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.9.4",
      "version_original": "0.9.4"
    },
    {
      "_id": "601756e321425f9b145b8bd7",
      "alm_examples": [
        {
          "kind": "OneAgent",
          "metadata": {
            "name": "oneagent",
            "namespace": "dynatrace"
          },
          "spec": {
            "apiUrl": "https://ENVIRONMENTID.live.dynatrace.com/api",
            "args": [
              "--set-app-log-content-access=true"
            ],
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists"
              }
            ]
          }
        },
        {
          "kind": "OneAgentAPM",
          "metadata": {
            "name": "oneagentapm",
            "namespace": "dynatrace"
          },
          "spec": {
            "apiUrl": "https://ENVIRONMENTID.live.dynatrace.com/api"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator-bundle@sha256:fc750e6590bf2336144268bb09688a94e0baca2d5ebfb45b9f734b5cb5f68606",
      "bundle_path_digest": "sha256:fc750e6590bf2336144268bb09688a94e0baca2d5ebfb45b9f734b5cb5f68606",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-02-01T01:18:27.771000+00:00",
      "csv_description": "The Dynatrace OneAgent Operator allows users to easily deploy full-stack monitoring for [OpenShift clusters](https://www.dynatrace.com/technologies/openshift-monitoring/). The Dynatrace OneAgent automatically monitors the workload running in containers down to the code and request level.\n\n### Installing the OneAgent\nOnce you've installed the Operator, you can create OneAgent custom resources to monitor your environment.\n\nFirst, please add a Secret within the Project you've deployed the Dynatrace Operator to, which would contain your API and PaaS tokens. Create tokens of type *Dynatrace API* (`API_TOKEN`) and *Platform as a Service* (`PAAS_TOKEN`) and use their values in the following commands respectively.\n\nFor assistance please refer to [Create user-generated access tokens](https://www.dynatrace.com/support/help/shortlink/token#create-user-generated-access-tokens).\n\n``` $ oc -n <project> create secret generic oneagent --from-literal=\"apiToken=API_TOKEN\" --from-literal=\"paasToken=PAAS_TOKEN\" ```\n\nYou may update this Secret at any time to rotate the tokens.\n\nThen please add an OneAgent object in the Project where the Operator has been deployed, configured to your needs.\n\n### Required Parameters\n* `apiUrl` - provide the URL to the API of your Dynatrace environment. In Dynatrace SaaS it will look like `https://<ENVIRONMENTID>.live.dynatrace.com/api` . In Dynatrace Managed like `https://<YourDynatraceServerURL>/e/<ENVIRONMENTID>/api` .\n\n### Advanced Options\n* **Image Override** - use a copy of the OneAgent container image from a registry other than Docker's or Red Hat's\n* **NodeSelectors** - select a subset of your cluster's nodes to run the Dynatrace OneAgent on, based on labels\n* **Tolerations** - add specific tolerations to the agent so that it can monitor all of the nodes in your cluster; we include the default toleration so that Dynatrace OneAgent also monitors the master nodes\n* **Priority Class Name** - define the priorityClassName for OneAgent pods\n* **Environment variables** - define environment variables for the OneAgent container\n* **Disable Certificate Checking** - disable any certificate validation that may interact poorly with proxies with in your cluster\n* **Disable OneAgent Update** - disable the Operator's auto-update feature for OneAgent pods\n* **Enable Istio Auto-config** - automatically create Istio objects for egress communication to the Dynatrace environment from the OneAgent\n\nFor a complete list of supported parameters please consult the [Operator Deploy Guide](https://www.dynatrace.com/support/help/shortlink/openshift-deploy).\n\n### Help\nYou can find more about our instructions in our [documentation](https://www.dynatrace.com/support/help/shortlink/openshift-deploy#install-oneagent-operator).\n",
      "csv_display_name": "Dynatrace OneAgent",
      "csv_metadata_description": "Install full-stack monitoring of OpenShift clusters with the Dynatrace OneAgent.",
      "csv_name": "dynatrace-monitoring.v0.9.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:46:04.002000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "oneagent-certified",
      "provided_apis": [],
      "related_images": [
        {
          "digest": "sha256:4f626c6f83d93c7c6b6279fa48003ea5cf4ef972cc7831f1d2367f20f0c4afed",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator@sha256:4f626c6f83d93c7c6b6279fa48003ea5cf4ef972cc7831f1d2367f20f0c4afed",
          "name": "dynatrace-oneagent-operator-4f626c6f83d93c7c6b6279fa48003ea5cf4ef972cc7831f1d2367f20f0c4afed-annotation"
        },
        {
          "digest": "sha256:4f626c6f83d93c7c6b6279fa48003ea5cf4ef972cc7831f1d2367f20f0c4afed",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator@sha256:4f626c6f83d93c7c6b6279fa48003ea5cf4ef972cc7831f1d2367f20f0c4afed",
          "name": "dynatrace-oneagent-operator"
        },
        {
          "digest": "sha256:4f626c6f83d93c7c6b6279fa48003ea5cf4ef972cc7831f1d2367f20f0c4afed",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator@sha256:4f626c6f83d93c7c6b6279fa48003ea5cf4ef972cc7831f1d2367f20f0c4afed",
          "name": "webhook"
        },
        {
          "digest": "sha256:4f626c6f83d93c7c6b6279fa48003ea5cf4ef972cc7831f1d2367f20f0c4afed",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator@sha256:4f626c6f83d93c7c6b6279fa48003ea5cf4ef972cc7831f1d2367f20f0c4afed",
          "name": "bootstrapper"
        },
        {
          "digest": "sha256:7610615cb9b0855aa8dde0bff9a1ec2464e586f5bff13f607c5fd643abd890e0",
          "image": "registry.connect.redhat.com/dynatrace/oneagent@sha256:7610615cb9b0855aa8dde0bff9a1ec2464e586f5bff13f607c5fd643abd890e0",
          "name": "dynatrace_oneagent"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.9.5",
      "version_original": "0.9.5"
    },
    {
      "_id": "601764295ca6854ed07968ad",
      "alm_examples": [
        {
          "kind": "OneAgent",
          "metadata": {
            "name": "oneagent",
            "namespace": "dynatrace"
          },
          "spec": {
            "apiUrl": "https://ENVIRONMENTID.live.dynatrace.com/api",
            "args": [
              "--set-app-log-content-access=true"
            ],
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists"
              }
            ]
          }
        },
        {
          "kind": "OneAgentAPM",
          "metadata": {
            "name": "oneagentapm",
            "namespace": "dynatrace"
          },
          "spec": {
            "apiUrl": "https://ENVIRONMENTID.live.dynatrace.com/api"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator-bundle@sha256:fc750e6590bf2336144268bb09688a94e0baca2d5ebfb45b9f734b5cb5f68606",
      "bundle_path_digest": "sha256:fc750e6590bf2336144268bb09688a94e0baca2d5ebfb45b9f734b5cb5f68606",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-02-01T02:15:05.946000+00:00",
      "csv_description": "The Dynatrace OneAgent Operator allows users to easily deploy full-stack monitoring for [OpenShift clusters](https://www.dynatrace.com/technologies/openshift-monitoring/). The Dynatrace OneAgent automatically monitors the workload running in containers down to the code and request level.\n\n### Installing the OneAgent\nOnce you've installed the Operator, you can create OneAgent custom resources to monitor your environment.\n\nFirst, please add a Secret within the Project you've deployed the Dynatrace Operator to, which would contain your API and PaaS tokens. Create tokens of type *Dynatrace API* (`API_TOKEN`) and *Platform as a Service* (`PAAS_TOKEN`) and use their values in the following commands respectively.\n\nFor assistance please refer to [Create user-generated access tokens](https://www.dynatrace.com/support/help/shortlink/token#create-user-generated-access-tokens).\n\n``` $ oc -n <project> create secret generic oneagent --from-literal=\"apiToken=API_TOKEN\" --from-literal=\"paasToken=PAAS_TOKEN\" ```\n\nYou may update this Secret at any time to rotate the tokens.\n\nThen please add an OneAgent object in the Project where the Operator has been deployed, configured to your needs.\n\n### Required Parameters\n* `apiUrl` - provide the URL to the API of your Dynatrace environment. In Dynatrace SaaS it will look like `https://<ENVIRONMENTID>.live.dynatrace.com/api` . In Dynatrace Managed like `https://<YourDynatraceServerURL>/e/<ENVIRONMENTID>/api` .\n\n### Advanced Options\n* **Image Override** - use a copy of the OneAgent container image from a registry other than Docker's or Red Hat's\n* **NodeSelectors** - select a subset of your cluster's nodes to run the Dynatrace OneAgent on, based on labels\n* **Tolerations** - add specific tolerations to the agent so that it can monitor all of the nodes in your cluster; we include the default toleration so that Dynatrace OneAgent also monitors the master nodes\n* **Priority Class Name** - define the priorityClassName for OneAgent pods\n* **Environment variables** - define environment variables for the OneAgent container\n* **Disable Certificate Checking** - disable any certificate validation that may interact poorly with proxies with in your cluster\n* **Disable OneAgent Update** - disable the Operator's auto-update feature for OneAgent pods\n* **Enable Istio Auto-config** - automatically create Istio objects for egress communication to the Dynatrace environment from the OneAgent\n\nFor a complete list of supported parameters please consult the [Operator Deploy Guide](https://www.dynatrace.com/support/help/shortlink/openshift-deploy).\n\n### Help\nYou can find more about our instructions in our [documentation](https://www.dynatrace.com/support/help/shortlink/openshift-deploy#install-oneagent-operator).\n",
      "csv_display_name": "Dynatrace OneAgent",
      "csv_metadata_description": "Install full-stack monitoring of OpenShift clusters with the Dynatrace OneAgent.",
      "csv_name": "dynatrace-monitoring.v0.9.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:19:10.298000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "oneagent-certified",
      "provided_apis": [
        {
          "group": "dynatrace.com",
          "kind": "OneAgent",
          "version": "v1alpha1"
        },
        {
          "group": "dynatrace.com",
          "kind": "OneAgentAPM",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:4f626c6f83d93c7c6b6279fa48003ea5cf4ef972cc7831f1d2367f20f0c4afed",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator@sha256:4f626c6f83d93c7c6b6279fa48003ea5cf4ef972cc7831f1d2367f20f0c4afed",
          "name": "dynatrace-oneagent-operator-4f626c6f83d93c7c6b6279fa48003ea5cf4ef972cc7831f1d2367f20f0c4afed-annotation"
        },
        {
          "digest": "sha256:4f626c6f83d93c7c6b6279fa48003ea5cf4ef972cc7831f1d2367f20f0c4afed",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator@sha256:4f626c6f83d93c7c6b6279fa48003ea5cf4ef972cc7831f1d2367f20f0c4afed",
          "name": "dynatrace-oneagent-operator"
        },
        {
          "digest": "sha256:4f626c6f83d93c7c6b6279fa48003ea5cf4ef972cc7831f1d2367f20f0c4afed",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator@sha256:4f626c6f83d93c7c6b6279fa48003ea5cf4ef972cc7831f1d2367f20f0c4afed",
          "name": "webhook"
        },
        {
          "digest": "sha256:4f626c6f83d93c7c6b6279fa48003ea5cf4ef972cc7831f1d2367f20f0c4afed",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator@sha256:4f626c6f83d93c7c6b6279fa48003ea5cf4ef972cc7831f1d2367f20f0c4afed",
          "name": "bootstrapper"
        },
        {
          "digest": "sha256:7610615cb9b0855aa8dde0bff9a1ec2464e586f5bff13f607c5fd643abd890e0",
          "image": "registry.connect.redhat.com/dynatrace/oneagent@sha256:7610615cb9b0855aa8dde0bff9a1ec2464e586f5bff13f607c5fd643abd890e0",
          "name": "dynatrace_oneagent"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.9.5",
      "version_original": "0.9.5"
    },
    {
      "_id": "6017b5a6ef2940f01428eb8a",
      "alm_examples": [
        {
          "kind": "Citrix-cpx-istio-sidecar-injector",
          "metadata": {
            "name": "citrix-cpx-istio-sidecar-injector-sample"
          },
          "spec": {
            "ADMSettings": {
              "ADMFingerPrint": "",
              "ADMIP": "",
              "bandWidth": "",
              "bandWidthLicense": false,
              "licenseServerIP": "",
              "licenseServerPort": 27000
            },
            "certProvider": {
              "caAddr": "istiod-basic.istio-system.svc",
              "caPort": 15012,
              "certTTLinHours": 720,
              "clusterId": "Kubernetes",
              "trustDomain": "cluster.local"
            },
            "coe": {
              "coeURL": ""
            },
            "cpxProxy": {
              "EULA": false,
              "cpxSidecarMode": true,
              "image": "quay.io/citrix/citrix-k8s-cpx-ingress@sha256:01834b5b33f61a8a5670ef5c8917475b7f21b341d09d3416a5fa8c2412ec6fdc",
              "imagePullPolicy": "IfNotPresent",
              "mgmtHttpPort": 10080,
              "mgmtHttpsPort": 10443,
              "netscalerUrl": "http://127.0.0.1"
            },
            "istioPilot": {
              "insecureGrpcPort": 15010,
              "name": "istiod-basic",
              "namespace": "istio-system",
              "secureGrpcPort": 15012
            },
            "sidecarWebHook": {
              "imagePullPolicy": "IfNotPresent",
              "webhookImage": ""
            },
            "webhook": {
              "injectionLabelName": "cpx-injection"
            },
            "xDSAdaptor": {
              "image": "quay.io/citrix/citrix-xds-adaptor@sha256:8520019daf69d4cf91fc52b1500abf3a56d4b7aaef47b0e149f52ce15b363d3a",
              "imagePullPolicy": "IfNotPresent",
              "proxyType": "sidecar",
              "secureConnect": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/citrix/istiosidecarcitrix-bundle@sha256:98f70609bb8a1519876b9c103a200abc88b74dfc0ef9c8a0c0aa464c1e8c463e",
      "bundle_path_digest": "sha256:98f70609bb8a1519876b9c103a200abc88b74dfc0ef9c8a0c0aa464c1e8c463e",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-02-01T08:02:46.592000+00:00",
      "csv_description": "In Istio service mesh, a sidecar proxy runs alongside application pods and it intercepts and manages incoming and outgoing traffic for applications. Citrix ADC CPX can be deployed as the sidecar proxy in application pods. A sidecar proxy applies the configured routing policies or rules to the ingress and egress traffic from the pod.",
      "csv_display_name": "Citrix ADC CPX Istio Sidecar Injector Operator",
      "csv_metadata_description": "In Istio service mesh, a sidecar proxy runs alongside application pods and it intercepts and manages incoming and outgoing traffic for applications. Citrix ADC CPX can be deployed as the sidecar proxy in application pods. A sidecar proxy applies the configured routing policies or rules to the ingress and egress traffic from the pod.",
      "csv_name": "citrix-cpx-istio-sidecar-injector-operator.v0.9.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:34:05.355000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "citrix-cpx-istio-sidecar-injector-operator",
      "provided_apis": [
        {
          "group": "citrix.citrix.com",
          "kind": "Citrix-cpx-istio-sidecar-injector",
          "plural": "citrix-cpx-istio-sidecar-injectors",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:5a619774b63dd7aa207205f0c7688ac756efff93dc8396f7e4ee1db5a16a0f52",
          "image": "registry.connect.redhat.com/citrix/citrixadcsidecar@sha256:5a619774b63dd7aa207205f0c7688ac756efff93dc8396f7e4ee1db5a16a0f52",
          "name": "citrixadcsidecar-5a619774b63dd7aa207205f0c7688ac756efff93dc8396f7e4ee1db5a16a0f52-annotation"
        },
        {
          "digest": "sha256:6b048ead1121a9ca2bcc0d5b2a198a01e889456d5069f303d2af4dcdf465a40f",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6b048ead1121a9ca2bcc0d5b2a198a01e889456d5069f303d2af4dcdf465a40f",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:5a619774b63dd7aa207205f0c7688ac756efff93dc8396f7e4ee1db5a16a0f52",
          "image": "registry.connect.redhat.com/citrix/citrixadcsidecar@sha256:5a619774b63dd7aa207205f0c7688ac756efff93dc8396f7e4ee1db5a16a0f52",
          "name": "manager"
        },
        {
          "digest": "sha256:8520019daf69d4cf91fc52b1500abf3a56d4b7aaef47b0e149f52ce15b363d3a",
          "image": "quay.io/citrix/citrix-xds-adaptor@sha256:8520019daf69d4cf91fc52b1500abf3a56d4b7aaef47b0e149f52ce15b363d3a",
          "name": "citrix-xds-adaptor-8520019daf69d4cf91fc52b1500abf3a56d4b7aaef47b0e149f52ce15b363d3a-annotation"
        },
        {
          "digest": "sha256:01834b5b33f61a8a5670ef5c8917475b7f21b341d09d3416a5fa8c2412ec6fdc",
          "image": "quay.io/citrix/citrix-k8s-cpx-ingress@sha256:01834b5b33f61a8a5670ef5c8917475b7f21b341d09d3416a5fa8c2412ec6fdc",
          "name": "citrix-k8s-cpx-ingress-01834b5b33f61a8a5670ef5c8917475b7f21b341d09d3416a5fa8c2412ec6fdc-annotation"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.9.5",
      "version_original": "0.9.5"
    },
    {
      "_id": "6018506c5ca6854ed07969a3",
      "alm_examples": [
        {
          "kind": "N3000Cluster",
          "metadata": {
            "name": "n3000cluster-sample"
          },
          "spec": {
            "foo": "bar"
          }
        },
        {
          "kind": "N3000Node",
          "metadata": {
            "name": "n3000node-sample"
          },
          "spec": {
            "foo": "bar"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/n3000-operator-bundle@sha256:e14bfe9610032c42321223420e334d38926769e5f60b9132c866b7c015938890",
      "bundle_path_digest": "sha256:e14bfe9610032c42321223420e334d38926769e5f60b9132c866b7c015938890",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-02-01T19:03:08.160000+00:00",
      "csv_description": "The Intel\u00ae FPGA Programmable Acceleration Card N3000 (Intel\u00ae FPGA PAC N3000) is a highly customizable FPGA SmartNIC which enables high-throughput, low latency and high-bandwith applications.  It allows the optimization of data plane performance to reduce total cost of ownership while maintaining a high degree of flexibility.  The Intel FPGA PAC N3000 plays a key role in accelerating 5G and network functions virtualization (NFV) adoption for ecosystem partners such as telecommunications equipment manufacturers (TEMs) virtual network functions (VNF) vendors, system integrators and telcos, to bring scalable and high-performance solutions to market. The Intel FPGA PAC N3000 includes a variant that is design to be Network Equipment Building System (NEBS)-friendly, and features a Root-of-Trust device that helps protect systems from FPGA host security exploits. This document explains how the FPGA resource can be used on the Open Network Edge Services Software (OpenNESS) platform for accelerating network functions and edge application workloads. We use the Intel\u00ae FPGA PAC N3000 as a reference FPGA PAC and use LTE/5G Forward Error Correction (FEC) as an example workload that accelerates the 5G or 4G L1 base station network function. The same concept and mechanism is applicable for application acceleration workloads like AI and ML on FPGA for Inference applications. The Intel\u00ae FPGA PAC N3000 is a full-duplex, 100 Gbps in-system, re-programmable acceleration card for multi-workload networking application acceleration. It has an optimal memory mixture designed for network functions, with an integrated network interface card (NIC) in a small form factor that enables high throughput, low latency, and low power per bit for a custom networking pipeline.",
      "csv_display_name": "OpenNESS Operator for Intel\u00ae FPGA PAC N3000",
      "csv_metadata_description": "",
      "csv_name": "n3000.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:47:11.083000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "n3000",
      "provided_apis": [
        {
          "group": "fpga.intel.com",
          "kind": "N3000Cluster",
          "plural": "n3000clusters",
          "version": "v1"
        },
        {
          "group": "fpga.intel.com",
          "kind": "N3000Node",
          "plural": "n3000nodes",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:e09594ee120b48064fd62d37ae25b9aebae12763224d9fff26400e5683cfac62",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:e09594ee120b48064fd62d37ae25b9aebae12763224d9fff26400e5683cfac62",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:53ba32a3336debef16181ce5be6041de640a79645d75aa6421c4a254dc3664e3",
          "image": "registry.connect.redhat.com/intel/n3000-operator@sha256:53ba32a3336debef16181ce5be6041de640a79645d75aa6421c4a254dc3664e3",
          "name": "manager"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "60185af9cbda2cd46df55ee7",
      "alm_examples": [
        {
          "kind": "N3000Cluster",
          "metadata": {
            "name": "n3000cluster-sample"
          },
          "spec": {
            "foo": "bar"
          }
        },
        {
          "kind": "N3000Node",
          "metadata": {
            "name": "n3000node-sample"
          },
          "spec": {
            "foo": "bar"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/n3000-operator-bundle@sha256:e14bfe9610032c42321223420e334d38926769e5f60b9132c866b7c015938890",
      "bundle_path_digest": "sha256:e14bfe9610032c42321223420e334d38926769e5f60b9132c866b7c015938890",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-02-01T19:48:09.835000+00:00",
      "csv_description": "The Intel\u00ae FPGA Programmable Acceleration Card N3000 (Intel\u00ae FPGA PAC N3000) is a highly customizable FPGA SmartNIC which enables high-throughput, low latency and high-bandwith applications.  It allows the optimization of data plane performance to reduce total cost of ownership while maintaining a high degree of flexibility.  The Intel FPGA PAC N3000 plays a key role in accelerating 5G and network functions virtualization (NFV) adoption for ecosystem partners such as telecommunications equipment manufacturers (TEMs) virtual network functions (VNF) vendors, system integrators and telcos, to bring scalable and high-performance solutions to market. The Intel FPGA PAC N3000 includes a variant that is design to be Network Equipment Building System (NEBS)-friendly, and features a Root-of-Trust device that helps protect systems from FPGA host security exploits. This document explains how the FPGA resource can be used on the Open Network Edge Services Software (OpenNESS) platform for accelerating network functions and edge application workloads. We use the Intel\u00ae FPGA PAC N3000 as a reference FPGA PAC and use LTE/5G Forward Error Correction (FEC) as an example workload that accelerates the 5G or 4G L1 base station network function. The same concept and mechanism is applicable for application acceleration workloads like AI and ML on FPGA for Inference applications. The Intel\u00ae FPGA PAC N3000 is a full-duplex, 100 Gbps in-system, re-programmable acceleration card for multi-workload networking application acceleration. It has an optimal memory mixture designed for network functions, with an integrated network interface card (NIC) in a small form factor that enables high throughput, low latency, and low power per bit for a custom networking pipeline.",
      "csv_display_name": "OpenNESS Operator for Intel\u00ae FPGA PAC N3000",
      "csv_metadata_description": "",
      "csv_name": "n3000.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:20:52.635000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "n3000",
      "provided_apis": [
        {
          "group": "fpga.intel.com",
          "kind": "N3000Cluster",
          "plural": "n3000clusters",
          "version": "v1"
        },
        {
          "group": "fpga.intel.com",
          "kind": "N3000Node",
          "plural": "n3000nodes",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:e09594ee120b48064fd62d37ae25b9aebae12763224d9fff26400e5683cfac62",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:e09594ee120b48064fd62d37ae25b9aebae12763224d9fff26400e5683cfac62",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:53ba32a3336debef16181ce5be6041de640a79645d75aa6421c4a254dc3664e3",
          "image": "registry.connect.redhat.com/intel/n3000-operator@sha256:53ba32a3336debef16181ce5be6041de640a79645d75aa6421c4a254dc3664e3",
          "name": "manager"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "6018625553edd6021971ab13",
      "alm_examples": [
        {
          "kind": "SriovFecClusterConfig",
          "metadata": {
            "name": "config"
          },
          "spec": {
            "nodes": [
              {
                "cards": [
                  {
                    "pciAddress": "",
                    "pfDeviceID": "0d8f",
                    "pfDriver": "pci-pf-stub",
                    "queuesConfiguration": {
                      "downlink": {
                        "bandwidth": 3,
                        "loadBalance": 128,
                        "queues": {
                          "vf0": 16,
                          "vf1": 16,
                          "vf2": 0,
                          "vf3": 0,
                          "vf4": 0,
                          "vf5": 0,
                          "vf6": 0,
                          "vf7": 0
                        }
                      },
                      "flrTimeout": 610,
                      "networkType": "FPGA_5GNR",
                      "pfMode": true,
                      "uplink": {
                        "bandwidth": 3,
                        "loadBalance": 128,
                        "queues": {
                          "vf0": 16,
                          "vf1": 16,
                          "vf2": 0,
                          "vf3": 0,
                          "vf4": 0,
                          "vf5": 0,
                          "vf6": 0,
                          "vf7": 0
                        }
                      }
                    },
                    "vendorID": "8086",
                    "vfAmount": 2,
                    "vfDeviceID": "0d90",
                    "vfDriver": "vfio-pci"
                  }
                ],
                "nodeName": "",
                "oneCardConfigForAll": true
              }
            ],
            "oneNodeConfigForAll": true
          }
        },
        {
          "kind": "SriovFecNodeConfig",
          "metadata": {
            "name": "sriovfecnodeconfig-sample"
          },
          "spec": {
            "cards": [
              {
                "pci_addr": "",
                "pf_device_id": "0d8f",
                "pf_driver": "pci-pf-stub",
                "queues": {
                  "downlink": {
                    "bandwidth": 3,
                    "load_balance": 128,
                    "queues": {
                      "vf0": 16,
                      "vf1": 16,
                      "vf2": 0,
                      "vf3": 0,
                      "vf4": 0,
                      "vf5": 0,
                      "vf6": 0,
                      "vf7": 0
                    }
                  },
                  "flr_time_out": 610,
                  "networkType": "FPGA_5GNR",
                  "pf_mode_en": 0,
                  "uplink": {
                    "bandwidth": 3,
                    "load_balance": 128,
                    "queues": {
                      "vf0": 16,
                      "vf1": 16,
                      "vf2": 0,
                      "vf3": 0,
                      "vf4": 0,
                      "vf5": 0,
                      "vf6": 0,
                      "vf7": 0
                    }
                  }
                },
                "vendor_id": "8086",
                "vf_amount": 2,
                "vf_device_id": "0d90",
                "vf_driver": "vfio-pci"
              }
            ],
            "oneCardConfigForAll": true
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/sriov-fec-operator-bundle@sha256:cd5f6d4e68c071bf1514aac372fc5efccc87e32490b829b8fe5646d7bc901b37",
      "bundle_path_digest": "sha256:cd5f6d4e68c071bf1514aac372fc5efccc87e32490b829b8fe5646d7bc901b37",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-02-01T20:19:33.220000+00:00",
      "csv_description": "The Intel\u00ae FPGA Programmable Acceleration Card N3000 (Intel\u00ae FPGA PAC N3000) is a highly customizable FPGA SmartNIC which enables high-throughput, low latency and high-bandwith applications.  It allows the optimization of data plane performance to reduce total cost of ownership while maintaining a high degree of flexibility.  The Intel FPGA PAC N3000 plays a key role in accelerating 5G and network functions virtualization (NFV) adoption for ecosystem partners such as telecommunications equipment manufacturers (TEMs) virtual network functions (VNF) vendors, system integrators and telcos, to bring scalable and high-performance solutions to market. The Intel FPGA PAC N3000 includes a variant that is design to be Network Equipment Building System (NEBS)-friendly, and features a Root-of-Trust device that helps protect systems from FPGA host security exploits. This document explains how the FPGA resource can be used on the Open Network Edge Services Software (OpenNESS) platform for accelerating network functions and edge application workloads. We use the Intel\u00ae FPGA PAC N3000 as a reference FPGA PAC and use LTE/5G Forward Error Correction (FEC) as an example workload that accelerates the 5G or 4G L1 base station network function. The same concept and mechanism is applicable for application acceleration workloads like AI and ML on FPGA for Inference applications. The Intel\u00ae FPGA PAC N3000 is a full-duplex, 100 Gbps in-system, re-programmable acceleration card for multi-workload networking application acceleration. It has an optimal memory mixture designed for network functions, with an integrated network interface card (NIC) in a small form factor that enables high throughput, low latency, and low power per bit for a custom networking pipeline.",
      "csv_display_name": "OpenNESS SRIOV-FEC Operator for Intel\u00ae FPGA PAC N3000",
      "csv_metadata_description": "",
      "csv_name": "sriov-fec.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:18:39.190000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "sriov-fec",
      "provided_apis": [
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecClusterConfig",
          "plural": "sriovfecclusterconfigs",
          "version": "v1"
        },
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecNodeConfig",
          "plural": "sriovfecnodeconfigs",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:e09594ee120b48064fd62d37ae25b9aebae12763224d9fff26400e5683cfac62",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:e09594ee120b48064fd62d37ae25b9aebae12763224d9fff26400e5683cfac62",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:90e988af21c086067d3af9339b391b3d733c9dd05d95b6a4170b16d9616074ac",
          "image": "registry.connect.redhat.com/intel/sriov-fec-operator@sha256:90e988af21c086067d3af9339b391b3d733c9dd05d95b6a4170b16d9616074ac",
          "name": "manager"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "601abb998acd8180e75501d5",
      "alm_examples": [
        {
          "kind": "VProtectDBServerNode",
          "metadata": {
            "name": "example-vprotectdbservernode"
          },
          "spec": {
            "imagePullSecretsName": "",
            "initcontainerimage": "registry.connect.redhat.com/storware/vprotect-init@sha256:762b1b58f178857dfc25f014c1c290a8c3813fcd9ce544f75c362b3e98df3870",
            "mariadb": {
              "DBImage": "registry.redhat.io/rhel8/mariadb-103",
              "MYSQL_PASSWORD": "vprotect",
              "MYSQL_USER": "vprotect",
              "cpu": "300m",
              "memory": "512Mi",
              "port": 3306,
              "pvcStorageCapacity": "20Gi",
              "replicaCount": 1,
              "serviceName": "mariadb",
              "storageClassName": "ibmc-block-gold"
            },
            "node": {
              "containerPort": 15700,
              "cpu": "500m",
              "image": "registry.connect.redhat.com/storware/vprotect-node@sha256:c83058f7f0bb6d0106a9452e95789ee3b4a21aa61280bc80460bc2608ec1afad",
              "memory": "1Gi",
              "onlyStagingSpace": {
                "enable": true,
                "stagingCapacity": "20Gi",
                "storageClass": "ibmc-file-retain-bronze"
              },
              "provisionNode": true,
              "replicaCount": 1,
              "separateStagingAndBackupSpace": {
                "backupTo": {
                  "file": {
                    "enable": false,
                    "stagingCapacity": "20Gi",
                    "storageClass": "ibmc-file-retain-bronze"
                  },
                  "initializedBlock": {
                    "enable": false,
                    "stagingCapacity": "20Gi",
                    "storageClass": "ibmc-block-retain-bronze"
                  },
                  "rawBlock": {
                    "backupCapacity": "20Gi",
                    "enable": false
                  }
                },
                "stagingCapacity": "20Gi",
                "stagingStorageClass": "ibmc-file-retain-bronze"
              },
              "serviceName": "vprotect-node",
              "singleDeduplicatedSpace": {
                "capacity": "20Gi",
                "enable": false
              }
            },
            "server": {
              "image": "registry.connect.redhat.com/storware/vprotect-server@sha256:6e344d150aa9266ae2c99ebd538d0e20a4d27a38645855e3ada08b379a0151ec",
              "ingress": {
                "enabled": false,
                "subDomain": "my-cluster.containers.appdomain.cloud"
              },
              "replicaCount": 1,
              "routes": {
                "insecureRoute": {
                  "enabled": false,
                  "name": "vprotect-server-http-route"
                },
                "secureRoute": {
                  "enabled": false,
                  "name": "vprotect-server-https-route"
                }
              },
              "serviceName": "vprotect-server"
            },
            "useImagePullSecret": false
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/storware/vprotect-operator-bundle@sha256:3c8b2d67a329f6cd81666303009bb8a43e1970c5703b93d458f500525585c15b",
      "bundle_path_digest": "sha256:3c8b2d67a329f6cd81666303009bb8a43e1970c5703b93d458f500525585c15b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-02-03T15:04:57.192000+00:00",
      "csv_description": "The operator allows you to deploy:\n* MariaDB\n* vProtect Server\n* vProtect Node\nin one go.\n\nThe operator can monitor to see if the components are present. If they're not,\nthe operator will install the  MariaDB, vProtect Server and vProtect Node correctly without any user interaction!\n\nAll you have to do is install the operator and create an instance of MariaDB, vProtect Server and vProtect Node by creating a custom resource of type VProtectDBServerNode.\n\n\n**How to get the Application Images from registry?**\n-----\n\n- First Login to redhat catalogue webpage using your credentials.\n- Search for the Operator.\n- Click on the Operator.\n- There is a description that redirects you (upon clicking) to page that explains how to create service accounts.\n- Create a Service Account. Refer page : <https://access.redhat.com/terms-based-registry/#/accounts>\n- Once a service account is created , you can click on it and then navigate to tab Openshift Secret to get the yaml file for your ImagePullSecret.\n- Download the Secret. Create the secret using command\n\n```sh\n    kubectl create -f <secretfile.yml> --namespace=NAMESPACEHERE\n```\n- Use the name of the created secret in the CR file.\n- For all the application images we would need the secret name to be passed in the CR Spec.\n\n\n**CR Spec Details**\n----------------------\n**General Specs**\n--------\n\n  Spec                       |            Details\n-----------------------------|-----------------------------\nuseImagePullSecret:          | True if using a Secret to pull application images\nimagePullSecretsName:        | Secret name to pull images from private repository\ninitcontainerimage:          | Init container image repository URL\n\n\n**MariaDB**\n--------\n\n  Spec             |            Details\n-------------------|-----------------------------\nDBImage:           | The URL to DB image\nreplicaCount:      | Number of replicas for DB\ncpu:               | CPU configuration\nmemory:            | Memory configuration\nport:              | DB Port number\nserviceName:       | Service name for DB\npvcStorageCapacity:| Volume Capacity\nstorageClassName:  | Storage Class Name of the Volume to be claimed\nMYSQL_PASSWORD:    | DB User Password\nMYSQL_USER:        | DB User\n\n\n**vProtect Server**\n--------\n\n  Spec                       |            Details\n-----------------------------|-----------------------------\nreplicaCount:                | Number of replicas for vProtect Server\nimage:                       | vProtect Server Image URL\nserviceName:                 | vProtect Server Service name\nserviceType:                 | vProtect Server Service Type (Example : NodePort, ClusterIP etc)\ningress.enabled:             | Set to true if you need to create an Ingress\ningress.subDomain:           | Cluster Subdomain\nroutes.insecureRoute.enabled:| Set to true if you want to create an insecure route\nroutes.insecureRoute.name:   | Insecure Route name\nroutes.secureRoute.enabled:  | Set to true if you want to create an secure route\nroutes.secureRoute.name:    | Secure Route name\n\n\n**vProtect Node**\n--------\n\n  Spec                       |            Details\n-----------------------------|-----------------------------\nprovisionNode:               | Set to true if you want to provision a vProtect Node\nreplicaCount:                | Number of replicas for vProtect Node\nimage:                       | vProtect Node Image URL\ncpu:                         | CPU configuration\nmemory:                      | Memory Configuration\ncontainerPort:               | Node Container port\nserviceName:                 | Node Service Name\n\n**vProtect Node Staging Space and Backup Options** :\n--------\n  **For an instance of vProtect Node only one option can be set to true.**\n\n  Staging and Backup Space Option |            Details\n----------------------------------|-----------------------------\n**onlyStagingSpace:**             | If set to true (onlyStagingSpace.enable: true), this will create a staging space with a file type of volume mounted at /vprotect-data.\n                                  | User should provide onlyStagingSpace.stagingCapacity and onlyStagingSpace.stagingCapacity if set to true.\n                                  |\n**singleDeduplicatedSpace:**      | If set to true (singleDeduplicatedSpace.enable: true) , this will create:\n                                  | 1) emptyDir: {} at /vprotect-data\n                                  | 2) RAW Block available at /dev/sda\n                                  |\n**separateStagingAndBackupSpace:**| This allows user to choose separate space for staging and backup.\n                                  | **Staging** : A Staging space is created with a file type of volume mounted at /vprotect-data.\n                                  |               User should provide separateStagingAndBackupSpace.stagingCapacity and\n                                  |               separateStagingAndBackupSpace.stagingStorageClass of file type.\n                                  |\n                                  | **Backup**: User can backup to any one of the below options:\n                                  | 1) **RAW Block** : If set to true separateStagingAndBackupSpace.backupTo.rawBlock\n                                  |                    Creates a RAW Block available at /dev/sda.\n                                  |                    User should provide separateStagingAndBackupSpace.backupTo.rawBlock.backupCapacity\n                                  | 2) **File volume**: If set to true separateStagingAndBackupSpace.backupTo.file\n                                  |                    User should provide separateStagingAndBackupSpace.backupTo.file.backupCapacity\n                                  |                    User should provide separateStagingAndBackupSpace.backupTo.file.storageClass of type file\n                                  |                    User should provide separateStagingAndBackupSpace.backupTo.file.backupMountPath to mount the volume.\n                                  |                    If mount path is kept blank then volume will be mounted to default location - /vprotect_data/backupsDestination\n                                  | 3) **Initialized Block Volume**: If set to true separateStagingAndBackupSpace.backupTo.initializedBlock\n                                  |                    User should provide separateStagingAndBackupSpace.backupTo.initializedBlock.backupCapacity\n                                  |                    User should provide separateStagingAndBackupSpace.backupTo.initializedBlock.storageClass of type block\n                                  |                    User should provide separateStagingAndBackupSpace.backupTo.initializedBlock.backupMountPath to mount the volume\n                                  |                    If mount path is kept blank then volume will be mounted to default location - /vprotect_data/backupsDestination\n                                  |\n**Only emptyDir: {} Volume**      | If none of the above options are set to true , operator creates an emptyDir: {} at /vprotect-data\n\n**Deployment on Kubernetes:**\n-----------------------\n\n```sh\n# Let the cluster know about our new custom resource VProtectDBServerNode\nkubectl create -f deploy/crds/vprotect.storware.com_vprotectdbservernodes_crd.yaml\n# Create the 'vProtect' namespace\nkubectl apply -f deploy/namespace.yaml\n# Create necessary user and permissions to make things happen\nkubectl create -f deploy/service_account.yaml\nkubectl create -f deploy/role.yaml\nkubectl create -f deploy/role_binding.yaml\nkubectl create -f deploy/clusterrole.yaml\nkubectl create -f deploy/clusterrole_binding.yaml\n# Deploy the operator container as a pod\nkubectl apply -f deploy/operator.yaml\nkubectl create -f deploy/crds/vprotect.storware.com_v1alpha1_vprotectdbservernode_cr.yaml\n```\n",
      "csv_display_name": "vProtect Operator",
      "csv_metadata_description": "Storware vProtect is an enterprise backup solution for virtual environments. It facilitates the implementation of virtual machine backup running on every major virtualization, container or cloud platform. It supports multiple backup providers:  file system-based, object storage or enterprise grade backup providers.",
      "csv_name": "vprotect-operator.v0.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:47:40.914000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "vprotect-operator",
      "provided_apis": [
        {
          "group": "vprotect.storware.com",
          "kind": "VProtectDBServerNode",
          "plural": "vprotectdbservernodes",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:5f3331b37cae862364a775e51eee381ea782c439768558779036f827485d74f8",
          "image": "registry.connect.redhat.com/storware/vprotect-operator@sha256:5f3331b37cae862364a775e51eee381ea782c439768558779036f827485d74f8",
          "name": "vprotect-operator-5f3331b37cae862364a775e51eee381ea782c439768558779036f827485d74f8-annotation"
        },
        {
          "digest": "sha256:5f3331b37cae862364a775e51eee381ea782c439768558779036f827485d74f8",
          "image": "registry.connect.redhat.com/storware/vprotect-operator@sha256:5f3331b37cae862364a775e51eee381ea782c439768558779036f827485d74f8",
          "name": "vprotect-operator"
        },
        {
          "digest": "sha256:6934718d927eafa76117e810ba1f79ef2c909fbd57c810484b23367cc52ceb46",
          "image": "registry.redhat.io/rhel8/mariadb-103@sha256:6934718d927eafa76117e810ba1f79ef2c909fbd57c810484b23367cc52ceb46",
          "name": "db"
        },
        {
          "digest": "sha256:762b1b58f178857dfc25f014c1c290a8c3813fcd9ce544f75c362b3e98df3870",
          "image": "registry.connect.redhat.com/storware/vprotect-init@sha256:762b1b58f178857dfc25f014c1c290a8c3813fcd9ce544f75c362b3e98df3870",
          "name": "initcontainer"
        },
        {
          "digest": "sha256:6e344d150aa9266ae2c99ebd538d0e20a4d27a38645855e3ada08b379a0151ec",
          "image": "registry.connect.redhat.com/storware/vprotect-server@sha256:6e344d150aa9266ae2c99ebd538d0e20a4d27a38645855e3ada08b379a0151ec",
          "name": "server"
        },
        {
          "digest": "sha256:c83058f7f0bb6d0106a9452e95789ee3b4a21aa61280bc80460bc2608ec1afad",
          "image": "registry.connect.redhat.com/storware/vprotect-node@sha256:c83058f7f0bb6d0106a9452e95789ee3b4a21aa61280bc80460bc2608ec1afad",
          "name": "node"
        },
        {
          "digest": "sha256:c83058f7f0bb6d0106a9452e95789ee3b4a21aa61280bc80460bc2608ec1afad",
          "image": "registry.connect.redhat.com/storware/vprotect-node@sha256:c83058f7f0bb6d0106a9452e95789ee3b4a21aa61280bc80460bc2608ec1afad",
          "name": "vprotect-node-c83058f7f0bb6d0106a9452e95789ee3b4a21aa61280bc80460bc2608ec1afad-annotation"
        },
        {
          "digest": "sha256:6e344d150aa9266ae2c99ebd538d0e20a4d27a38645855e3ada08b379a0151ec",
          "image": "registry.connect.redhat.com/storware/vprotect-server@sha256:6e344d150aa9266ae2c99ebd538d0e20a4d27a38645855e3ada08b379a0151ec",
          "name": "vprotect-server-6e344d150aa9266ae2c99ebd538d0e20a4d27a38645855e3ada08b379a0151ec-annotation"
        },
        {
          "digest": "sha256:762b1b58f178857dfc25f014c1c290a8c3813fcd9ce544f75c362b3e98df3870",
          "image": "registry.connect.redhat.com/storware/vprotect-init@sha256:762b1b58f178857dfc25f014c1c290a8c3813fcd9ce544f75c362b3e98df3870",
          "name": "vprotect-init-762b1b58f178857dfc25f014c1c290a8c3813fcd9ce544f75c362b3e98df3870-annotation"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.0.2",
      "version_original": "0.0.2"
    },
    {
      "_id": "601ac293e6da8a6bcef31717",
      "alm_examples": [
        {
          "kind": "VProtectDBServerNode",
          "metadata": {
            "name": "example-vprotectdbservernode"
          },
          "spec": {
            "imagePullSecretsName": "",
            "initcontainerimage": "registry.connect.redhat.com/storware/vprotect-init@sha256:762b1b58f178857dfc25f014c1c290a8c3813fcd9ce544f75c362b3e98df3870",
            "mariadb": {
              "DBImage": "registry.redhat.io/rhel8/mariadb-103",
              "MYSQL_PASSWORD": "vprotect",
              "MYSQL_USER": "vprotect",
              "cpu": "300m",
              "memory": "512Mi",
              "port": 3306,
              "pvcStorageCapacity": "20Gi",
              "replicaCount": 1,
              "serviceName": "mariadb",
              "storageClassName": "ibmc-block-gold"
            },
            "node": {
              "containerPort": 15700,
              "cpu": "500m",
              "image": "registry.connect.redhat.com/storware/vprotect-node@sha256:c83058f7f0bb6d0106a9452e95789ee3b4a21aa61280bc80460bc2608ec1afad",
              "memory": "1Gi",
              "onlyStagingSpace": {
                "enable": true,
                "stagingCapacity": "20Gi",
                "storageClass": "ibmc-file-retain-bronze"
              },
              "provisionNode": true,
              "replicaCount": 1,
              "separateStagingAndBackupSpace": {
                "backupTo": {
                  "file": {
                    "enable": false,
                    "stagingCapacity": "20Gi",
                    "storageClass": "ibmc-file-retain-bronze"
                  },
                  "initializedBlock": {
                    "enable": false,
                    "stagingCapacity": "20Gi",
                    "storageClass": "ibmc-block-retain-bronze"
                  },
                  "rawBlock": {
                    "backupCapacity": "20Gi",
                    "enable": false
                  }
                },
                "stagingCapacity": "20Gi",
                "stagingStorageClass": "ibmc-file-retain-bronze"
              },
              "serviceName": "vprotect-node",
              "singleDeduplicatedSpace": {
                "capacity": "20Gi",
                "enable": false
              }
            },
            "server": {
              "image": "registry.connect.redhat.com/storware/vprotect-server@sha256:6e344d150aa9266ae2c99ebd538d0e20a4d27a38645855e3ada08b379a0151ec",
              "ingress": {
                "enabled": false,
                "subDomain": "my-cluster.containers.appdomain.cloud"
              },
              "replicaCount": 1,
              "routes": {
                "insecureRoute": {
                  "enabled": false,
                  "name": "vprotect-server-http-route"
                },
                "secureRoute": {
                  "enabled": false,
                  "name": "vprotect-server-https-route"
                }
              },
              "serviceName": "vprotect-server"
            },
            "useImagePullSecret": false
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/storware/vprotect-operator-bundle@sha256:3c8b2d67a329f6cd81666303009bb8a43e1970c5703b93d458f500525585c15b",
      "bundle_path_digest": "sha256:3c8b2d67a329f6cd81666303009bb8a43e1970c5703b93d458f500525585c15b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-02-03T15:34:43.636000+00:00",
      "csv_description": "The operator allows you to deploy:\n* MariaDB\n* vProtect Server\n* vProtect Node\nin one go.\n\nThe operator can monitor to see if the components are present. If they're not,\nthe operator will install the  MariaDB, vProtect Server and vProtect Node correctly without any user interaction!\n\nAll you have to do is install the operator and create an instance of MariaDB, vProtect Server and vProtect Node by creating a custom resource of type VProtectDBServerNode.\n\n\n**How to get the Application Images from registry?**\n-----\n\n- First Login to redhat catalogue webpage using your credentials.\n- Search for the Operator.\n- Click on the Operator.\n- There is a description that redirects you (upon clicking) to page that explains how to create service accounts.\n- Create a Service Account. Refer page : <https://access.redhat.com/terms-based-registry/#/accounts>\n- Once a service account is created , you can click on it and then navigate to tab Openshift Secret to get the yaml file for your ImagePullSecret.\n- Download the Secret. Create the secret using command\n\n```sh\n    kubectl create -f <secretfile.yml> --namespace=NAMESPACEHERE\n```\n- Use the name of the created secret in the CR file.\n- For all the application images we would need the secret name to be passed in the CR Spec.\n\n\n**CR Spec Details**\n----------------------\n**General Specs**\n--------\n\n  Spec                       |            Details\n-----------------------------|-----------------------------\nuseImagePullSecret:          | True if using a Secret to pull application images\nimagePullSecretsName:        | Secret name to pull images from private repository\ninitcontainerimage:          | Init container image repository URL\n\n\n**MariaDB**\n--------\n\n  Spec             |            Details\n-------------------|-----------------------------\nDBImage:           | The URL to DB image\nreplicaCount:      | Number of replicas for DB\ncpu:               | CPU configuration\nmemory:            | Memory configuration\nport:              | DB Port number\nserviceName:       | Service name for DB\npvcStorageCapacity:| Volume Capacity\nstorageClassName:  | Storage Class Name of the Volume to be claimed\nMYSQL_PASSWORD:    | DB User Password\nMYSQL_USER:        | DB User\n\n\n**vProtect Server**\n--------\n\n  Spec                       |            Details\n-----------------------------|-----------------------------\nreplicaCount:                | Number of replicas for vProtect Server\nimage:                       | vProtect Server Image URL\nserviceName:                 | vProtect Server Service name\nserviceType:                 | vProtect Server Service Type (Example : NodePort, ClusterIP etc)\ningress.enabled:             | Set to true if you need to create an Ingress\ningress.subDomain:           | Cluster Subdomain\nroutes.insecureRoute.enabled:| Set to true if you want to create an insecure route\nroutes.insecureRoute.name:   | Insecure Route name\nroutes.secureRoute.enabled:  | Set to true if you want to create an secure route\nroutes.secureRoute.name:    | Secure Route name\n\n\n**vProtect Node**\n--------\n\n  Spec                       |            Details\n-----------------------------|-----------------------------\nprovisionNode:               | Set to true if you want to provision a vProtect Node\nreplicaCount:                | Number of replicas for vProtect Node\nimage:                       | vProtect Node Image URL\ncpu:                         | CPU configuration\nmemory:                      | Memory Configuration\ncontainerPort:               | Node Container port\nserviceName:                 | Node Service Name\n\n**vProtect Node Staging Space and Backup Options** :\n--------\n  **For an instance of vProtect Node only one option can be set to true.**\n\n  Staging and Backup Space Option |            Details\n----------------------------------|-----------------------------\n**onlyStagingSpace:**             | If set to true (onlyStagingSpace.enable: true), this will create a staging space with a file type of volume mounted at /vprotect-data.\n                                  | User should provide onlyStagingSpace.stagingCapacity and onlyStagingSpace.stagingCapacity if set to true.\n                                  |\n**singleDeduplicatedSpace:**      | If set to true (singleDeduplicatedSpace.enable: true) , this will create:\n                                  | 1) emptyDir: {} at /vprotect-data\n                                  | 2) RAW Block available at /dev/sda\n                                  |\n**separateStagingAndBackupSpace:**| This allows user to choose separate space for staging and backup.\n                                  | **Staging** : A Staging space is created with a file type of volume mounted at /vprotect-data.\n                                  |               User should provide separateStagingAndBackupSpace.stagingCapacity and\n                                  |               separateStagingAndBackupSpace.stagingStorageClass of file type.\n                                  |\n                                  | **Backup**: User can backup to any one of the below options:\n                                  | 1) **RAW Block** : If set to true separateStagingAndBackupSpace.backupTo.rawBlock\n                                  |                    Creates a RAW Block available at /dev/sda.\n                                  |                    User should provide separateStagingAndBackupSpace.backupTo.rawBlock.backupCapacity\n                                  | 2) **File volume**: If set to true separateStagingAndBackupSpace.backupTo.file\n                                  |                    User should provide separateStagingAndBackupSpace.backupTo.file.backupCapacity\n                                  |                    User should provide separateStagingAndBackupSpace.backupTo.file.storageClass of type file\n                                  |                    User should provide separateStagingAndBackupSpace.backupTo.file.backupMountPath to mount the volume.\n                                  |                    If mount path is kept blank then volume will be mounted to default location - /vprotect_data/backupsDestination\n                                  | 3) **Initialized Block Volume**: If set to true separateStagingAndBackupSpace.backupTo.initializedBlock\n                                  |                    User should provide separateStagingAndBackupSpace.backupTo.initializedBlock.backupCapacity\n                                  |                    User should provide separateStagingAndBackupSpace.backupTo.initializedBlock.storageClass of type block\n                                  |                    User should provide separateStagingAndBackupSpace.backupTo.initializedBlock.backupMountPath to mount the volume\n                                  |                    If mount path is kept blank then volume will be mounted to default location - /vprotect_data/backupsDestination\n                                  |\n**Only emptyDir: {} Volume**      | If none of the above options are set to true , operator creates an emptyDir: {} at /vprotect-data\n\n**Deployment on Kubernetes:**\n-----------------------\n\n```sh\n# Let the cluster know about our new custom resource VProtectDBServerNode\nkubectl create -f deploy/crds/vprotect.storware.com_vprotectdbservernodes_crd.yaml\n# Create the 'vProtect' namespace\nkubectl apply -f deploy/namespace.yaml\n# Create necessary user and permissions to make things happen\nkubectl create -f deploy/service_account.yaml\nkubectl create -f deploy/role.yaml\nkubectl create -f deploy/role_binding.yaml\nkubectl create -f deploy/clusterrole.yaml\nkubectl create -f deploy/clusterrole_binding.yaml\n# Deploy the operator container as a pod\nkubectl apply -f deploy/operator.yaml\nkubectl create -f deploy/crds/vprotect.storware.com_v1alpha1_vprotectdbservernode_cr.yaml\n```\n",
      "csv_display_name": "vProtect Operator",
      "csv_metadata_description": "Storware vProtect is an enterprise backup solution for virtual environments. It facilitates the implementation of virtual machine backup running on every major virtualization, container or cloud platform. It supports multiple backup providers:  file system-based, object storage or enterprise grade backup providers.",
      "csv_name": "vprotect-operator.v0.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:13:15.234000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "vprotect-operator",
      "provided_apis": [
        {
          "group": "vprotect.storware.com",
          "kind": "VProtectDBServerNode",
          "plural": "vprotectdbservernodes",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:5f3331b37cae862364a775e51eee381ea782c439768558779036f827485d74f8",
          "image": "registry.connect.redhat.com/storware/vprotect-operator@sha256:5f3331b37cae862364a775e51eee381ea782c439768558779036f827485d74f8",
          "name": "vprotect-operator-5f3331b37cae862364a775e51eee381ea782c439768558779036f827485d74f8-annotation"
        },
        {
          "digest": "sha256:5f3331b37cae862364a775e51eee381ea782c439768558779036f827485d74f8",
          "image": "registry.connect.redhat.com/storware/vprotect-operator@sha256:5f3331b37cae862364a775e51eee381ea782c439768558779036f827485d74f8",
          "name": "vprotect-operator"
        },
        {
          "digest": "sha256:6934718d927eafa76117e810ba1f79ef2c909fbd57c810484b23367cc52ceb46",
          "image": "registry.redhat.io/rhel8/mariadb-103@sha256:6934718d927eafa76117e810ba1f79ef2c909fbd57c810484b23367cc52ceb46",
          "name": "db"
        },
        {
          "digest": "sha256:762b1b58f178857dfc25f014c1c290a8c3813fcd9ce544f75c362b3e98df3870",
          "image": "registry.connect.redhat.com/storware/vprotect-init@sha256:762b1b58f178857dfc25f014c1c290a8c3813fcd9ce544f75c362b3e98df3870",
          "name": "initcontainer"
        },
        {
          "digest": "sha256:6e344d150aa9266ae2c99ebd538d0e20a4d27a38645855e3ada08b379a0151ec",
          "image": "registry.connect.redhat.com/storware/vprotect-server@sha256:6e344d150aa9266ae2c99ebd538d0e20a4d27a38645855e3ada08b379a0151ec",
          "name": "server"
        },
        {
          "digest": "sha256:c83058f7f0bb6d0106a9452e95789ee3b4a21aa61280bc80460bc2608ec1afad",
          "image": "registry.connect.redhat.com/storware/vprotect-node@sha256:c83058f7f0bb6d0106a9452e95789ee3b4a21aa61280bc80460bc2608ec1afad",
          "name": "node"
        },
        {
          "digest": "sha256:c83058f7f0bb6d0106a9452e95789ee3b4a21aa61280bc80460bc2608ec1afad",
          "image": "registry.connect.redhat.com/storware/vprotect-node@sha256:c83058f7f0bb6d0106a9452e95789ee3b4a21aa61280bc80460bc2608ec1afad",
          "name": "vprotect-node-c83058f7f0bb6d0106a9452e95789ee3b4a21aa61280bc80460bc2608ec1afad-annotation"
        },
        {
          "digest": "sha256:6e344d150aa9266ae2c99ebd538d0e20a4d27a38645855e3ada08b379a0151ec",
          "image": "registry.connect.redhat.com/storware/vprotect-server@sha256:6e344d150aa9266ae2c99ebd538d0e20a4d27a38645855e3ada08b379a0151ec",
          "name": "vprotect-server-6e344d150aa9266ae2c99ebd538d0e20a4d27a38645855e3ada08b379a0151ec-annotation"
        },
        {
          "digest": "sha256:762b1b58f178857dfc25f014c1c290a8c3813fcd9ce544f75c362b3e98df3870",
          "image": "registry.connect.redhat.com/storware/vprotect-init@sha256:762b1b58f178857dfc25f014c1c290a8c3813fcd9ce544f75c362b3e98df3870",
          "name": "vprotect-init-762b1b58f178857dfc25f014c1c290a8c3813fcd9ce544f75c362b3e98df3870-annotation"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.0.2",
      "version_original": "0.0.2"
    },
    {
      "_id": "601c1456e6da8a6bcef31868",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:5ec5a5cbaf6e667e761d3a6273c44f5facf29dabe2ffe502f08fe345536c8dc8",
      "bundle_path_digest": "sha256:5ec5a5cbaf6e667e761d3a6273c44f5facf29dabe2ffe502f08fe345536c8dc8",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-02-04T15:35:50.982000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "gpu-operator-certified.v1.5.1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T16:41:26.799000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "related_images": [],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.5.1",
      "version_original": "1.5.1"
    },
    {
      "_id": "601c147ce6da8a6bcef3186a",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:5ec5a5cbaf6e667e761d3a6273c44f5facf29dabe2ffe502f08fe345536c8dc8",
      "bundle_path_digest": "sha256:5ec5a5cbaf6e667e761d3a6273c44f5facf29dabe2ffe502f08fe345536c8dc8",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-02-04T15:36:28.110000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "gpu-operator-certified.v1.5.1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T17:27:01.083000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "related_images": [],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.5.1",
      "version_original": "1.5.1"
    }
  ],
  "page": 16,
  "page_size": 100,
  "total": 3345
}
